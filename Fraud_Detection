{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "GdYIK-2JK18b"
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "from google.colab import drive\n",
    "import matplotlib.pyplot as plt\n",
    "#from zipfile import ZipFile\n",
    "import zipfile\n",
    "import pandas as pd\n",
    "import datetime\n",
    "import warnings\n",
    "from os import listdir\n",
    "from os.path import isfile, join\n",
    "warnings.simplefilter(action='ignore', category=FutureWarning)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "dfY9Pw50LMu9",
    "outputId": "741dec5e-aaec-47c1-dd55-5367ea435dbd"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Mounted at /content/gdrive/\n"
     ]
    }
   ],
   "source": [
    "drive.mount('/content/gdrive/')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "pEHRJYzkLMz8"
   },
   "outputs": [],
   "source": [
    "# Determine the folder path for colab to access the google drive\n",
    "folder = \"/content/gdrive/My Drive/CPGroupData/DH 1.1.2020/DH 1.1.2020 -30.6.2020/\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "8cbnuqKqHvKZ",
    "outputId": "a1125472-a6b6-44ff-a1e3-5bc805efef4a"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "'DH 1.1.2020 -30.6.2020'  'DH 1.1.2020 - 30.6.2020.zip'\n"
     ]
    }
   ],
   "source": [
    "# Check what files we had in the folder\n",
    "!ls \"/content/gdrive/My Drive/CPGroupData/DH 1.1.2020/\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "lyT5bm8xLM2j"
   },
   "outputs": [],
   "source": [
    "onlyfiles = [f for f in listdir(folder) if isfile(join(folder, f))]\n",
    "onlyfiles = [i for i in onlyfiles if i[-4:] ==\".zip\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "sJkdrQ7zLM-F"
   },
   "outputs": [],
   "source": [
    "def get_todays_dict(of):\n",
    "\n",
    "    zf = zipfile.ZipFile(folder + \"/\" + of)\n",
    "    insidezipfiles = [z.filename for z in zf.filelist]\n",
    "    try:\n",
    "\n",
    "      # Three reuqirement files manipulation\n",
    "      for f in insidezipfiles:\n",
    "          # 1. NGC_MY_TXN\n",
    "          if f[:10] == \"NGC-MY-TXN\":\n",
    "              NGC_MY_TXN = pd.read_csv(zf.open(f), sep='|',header = None)\n",
    "              NGC_MY_TXN.columns = NGC_MY_TXN.iloc[0,:]\n",
    "              NGC_MY_TXN.drop([0],inplace = True)\n",
    "              NGC_MY_TXN.reset_index(inplace = True)\n",
    "              # I replace some of the original column names with the name in the excel file for easy check\n",
    "              NGC_MY_TXN.rename( columns= {\"TescoStoreId\":\"store\",\"SourcePOSID\":\"register\",\"SourceSystemTransactionID\":\"tran_no\"},inplace = True)\n",
    "              NGC_MY_TXN[[\"store\",\"register\",\"tran_no\"]] = NGC_MY_TXN[[\"store\",\"register\",\"tran_no\"]].astype(\"int\")\n",
    "\n",
    "          # 2. basket\n",
    "          if f[:6] == \"basket\":\n",
    "              basket = pd.read_csv(zf.open(f), sep='|',header = None)\n",
    "              basket =  basket.iloc[:,[0,2,6,7]].copy()\n",
    "              basket.columns = [\"store\",\"tran_seq_no\",\"register\",\"tran_no\"]\n",
    "\n",
    "          # 3. item\n",
    "          if f[:4] == \"item\":\n",
    "              item = pd.read_csv(zf.open(f), sep='|',header = None)\n",
    "              item =  item.iloc[:,[0,2,3,6,10,11,12]].copy()\n",
    "              item.columns = [\"store\",\"tran_seq_no\",\"item_seq_no\",\"item\",\"dept\",\"class\",\"subclass\"]\n",
    "\n",
    "\n",
    "          # Mergering three required data files\n",
    "      basket_item = basket.merge(right = item, how ='left', left_on =[\"store\",\"tran_seq_no\"], right_on = [\"store\",\"tran_seq_no\"])\n",
    "      cus_item = basket_item.merge(right=NGC_MY_TXN,how='left',left_on =[\"store\",\"register\",\"tran_no\"],right_on = [\"store\",\"register\",\"tran_no\"])\n",
    "\n",
    "      # drop all the NAs\n",
    "      cus_item_nna = cus_item[~cus_item.isna().any(axis=1)].copy()\n",
    "      NGC_MY_TXN, basket, item = None, None, None\n",
    "\n",
    "      slice1 = cus_item_nna[(cus_item_nna[\"dept\"] == 30) | (cus_item_nna[\"dept\"] == 31) | (cus_item_nna[\"dept\"] == 26) | (cus_item_nna[\"dept\"] == 27) | (cus_item_nna[\"dept\"] == 8) | (cus_item_nna[\"dept\"] == 32)]\n",
    "      #slice1 = cus_item_nna[(cus_item_nna[\"dept\"] == 30) | (cus_item_nna[\"dept\"] == 31) | (cus_item_nna[\"dept\"] == 24) | (cus_item_nna[\"dept\"] == 25) | (cus_item_nna[\"dept\"] == 26) | (cus_item_nna[\"dept\"] == 8) | (cus_item_nna[\"dept\"] == 27) | (cus_item_nna[\"dept\"] == 41) | (cus_item_nna[\"dept\"] == 126) | (cus_item_nna[\"dept\"] == 256) | (cus_item_nna[\"dept\"] == 260) | (cus_item_nna[\"dept\"] == 266)]\n",
    "      #slice2 = slice1[(slice1[\"class\"] == 2) | (slice1[\"class\"] == 5)]\n",
    "      #slice3 = slice2[(slice2[\"subclass\"] == 2) | (slice2[\"subclass\"] == 37)]\n",
    "      #slice4 = slice3[[\"tran_seq_no\", \"item\"]].copy()\n",
    "      #slice1, slice2, slice3 = None, None, None\n",
    "\n",
    "      todays_dict = {}\n",
    "      for bask in slice1[\"tran_seq_no\"].unique():\n",
    "          todays_dict[bask] = list(slice1[slice1[\"tran_seq_no\"] == bask][\"item\"])\n",
    "\n",
    "      return(todays_dict)\n",
    "    except:\n",
    "      print(\"File didnt work : \", of)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "CB699tPaLNBU",
    "outputId": "278fd545-544d-4460-d1b6-9a296cbdb98b"
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "<ipython-input-8-28e5333f013d>:11: DtypeWarning: Columns (0,1,3,4,5,6,7) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  NGC_MY_TXN = pd.read_csv(zf.open(f), sep='|',header = None)\n",
      "<ipython-input-8-28e5333f013d>:11: DtypeWarning: Columns (0,1,3,4,5,6,7) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  NGC_MY_TXN = pd.read_csv(zf.open(f), sep='|',header = None)\n",
      "<ipython-input-8-28e5333f013d>:11: DtypeWarning: Columns (0,1,3,4,5,6,7) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  NGC_MY_TXN = pd.read_csv(zf.open(f), sep='|',header = None)\n",
      "<ipython-input-8-28e5333f013d>:11: DtypeWarning: Columns (0,1,3,4,5,6,7) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  NGC_MY_TXN = pd.read_csv(zf.open(f), sep='|',header = None)\n",
      "<ipython-input-8-28e5333f013d>:11: DtypeWarning: Columns (0,1,3,4,5,6,7) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  NGC_MY_TXN = pd.read_csv(zf.open(f), sep='|',header = None)\n",
      "<ipython-input-8-28e5333f013d>:11: DtypeWarning: Columns (0,1,3,4,5,6,7) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  NGC_MY_TXN = pd.read_csv(zf.open(f), sep='|',header = None)\n",
      "<ipython-input-8-28e5333f013d>:11: DtypeWarning: Columns (0,1,3,4,5,6,7) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  NGC_MY_TXN = pd.read_csv(zf.open(f), sep='|',header = None)\n",
      "<ipython-input-8-28e5333f013d>:11: DtypeWarning: Columns (0,1,3,4,5,6,7) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  NGC_MY_TXN = pd.read_csv(zf.open(f), sep='|',header = None)\n",
      "<ipython-input-8-28e5333f013d>:11: DtypeWarning: Columns (0,1,3,4,5,6,7) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  NGC_MY_TXN = pd.read_csv(zf.open(f), sep='|',header = None)\n",
      "<ipython-input-8-28e5333f013d>:11: DtypeWarning: Columns (0,1,3,4,5,6,7) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  NGC_MY_TXN = pd.read_csv(zf.open(f), sep='|',header = None)\n",
      "<ipython-input-8-28e5333f013d>:11: DtypeWarning: Columns (0,1,3,4,5,6,7) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  NGC_MY_TXN = pd.read_csv(zf.open(f), sep='|',header = None)\n",
      "<ipython-input-8-28e5333f013d>:11: DtypeWarning: Columns (0,1,3,4,5,6,7) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  NGC_MY_TXN = pd.read_csv(zf.open(f), sep='|',header = None)\n",
      "<ipython-input-8-28e5333f013d>:11: DtypeWarning: Columns (0,1,3,4,5,6,7) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  NGC_MY_TXN = pd.read_csv(zf.open(f), sep='|',header = None)\n",
      "<ipython-input-8-28e5333f013d>:11: DtypeWarning: Columns (0,1,3,4,5,6,7) have mixed types. Specify dtype option on import or set low_memory=False.\n",
      "  NGC_MY_TXN = pd.read_csv(zf.open(f), sep='|',header = None)\n"
     ]
    }
   ],
   "source": [
    "# Load the market basket into a dictionary with transaction id as Key and items purchased as value\n",
    "basket_dict = {}\n",
    "for of in onlyfiles[:14]:\n",
    "    todays_dict = get_todays_dict(of)\n",
    "    try:\n",
    "      basket_dict.update(todays_dict)\n",
    "    except:\n",
    "      print(\"skip\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "JUrWyrOuzArK",
    "outputId": "dd766617-ad80-46ea-f9ea-93dde3ccbf44"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{27077843100: [3107213],\n",
       " 27077843102: [72701668, 72238011],\n",
       " 27077843103: [3141373, 6572, 4176790],\n",
       " 27077843105: [3141373],\n",
       " 27077843138: [2755769, 17590, 3107116, 3247],\n",
       " 27077843140: [73733245],\n",
       " 27077843150: [72590467, 3247],\n",
       " 27077843152: [125733, 1494066, 2943247],\n",
       " 27077855019: [71123857],\n",
       " 27077855020: [74295829, 72515414, 246158],\n",
       " 27077855023: [120987],\n",
       " 27077855024: [418692, 3001601, 74193538],\n",
       " 27077855026: [74250523],\n",
       " 27077855028: [73315729, 74306618],\n",
       " 27077855034: [709336, 709220, 3107256, 71138250, 71138269],\n",
       " 27077855041: [72998024],\n",
       " 27077855097: [72308303, 12637, 71245820, 6572],\n",
       " 27077855118: [4410025, 1347667],\n",
       " 27077855119: [6572],\n",
       " 27077855170: [2071037],\n",
       " 27077855234: [3012166],\n",
       " 27077855261: [72590467, 72093854],\n",
       " 27077855272: [2370204],\n",
       " 27077864092: [1466151],\n",
       " 27077873006: [3107116],\n",
       " 27077877018: [4410025, 3107116, 246158],\n",
       " 27077877060: [2071037, 3483398, 4410025, 73089834, 3107116, 3012166, 1048228],\n",
       " 27077877075: [120405, 1494066],\n",
       " 27077877076: [74295829],\n",
       " 27077877091: [72607335, 3107116, 3018],\n",
       " 27077877094: [709220, 71018905, 3107116],\n",
       " 27077880001: [73967440],\n",
       " 27077884006: [3107116],\n",
       " 27077884017: [3107116, 405051],\n",
       " 27077884018: [1941135, 71123911, 73805947],\n",
       " 27077884019: [3341844],\n",
       " 27077884022: [3107116],\n",
       " 27077884028: [73601004, 73600946, 2943247, 71453954, 3012166],\n",
       " 27077884029: [71085017, 73601012, 1264974, 248452],\n",
       " 27077885005: [3107116],\n",
       " 27077885006: [3107116],\n",
       " 27077886031: [120987],\n",
       " 27077887015: [71018905, 71019006],\n",
       " 27077887019: [73733326, 72571977],\n",
       " 27077887020: [17973, 2221918, 12807],\n",
       " 27077890001: [2071037],\n",
       " 27077891008: [73601020, 73601047],\n",
       " 27077891012: [4143523, 246158, 3341844, 72380853, 72676655],\n",
       " 27077891016: [3107116],\n",
       " 27077891018: [90514],\n",
       " 27077891020: [2071037],\n",
       " 27077891022: [3107116],\n",
       " 27077891025: [17973, 73046590, 72515392, 2017865, 3344],\n",
       " 27077892004: [3140954, 1264974],\n",
       " 27077893003: [1342541],\n",
       " 27077898005: [73784915],\n",
       " 27077898017: [3187985],\n",
       " 27077898018: [73668478],\n",
       " 27077898031: [12696, 74103547],\n",
       " 27077898034: [3282384,\n",
       "  72702052,\n",
       "  72590394,\n",
       "  73046590,\n",
       "  71123172,\n",
       "  71123199,\n",
       "  1878298,\n",
       "  3341844,\n",
       "  73606596],\n",
       " 27077898043: [71123164, 3107116, 72590467],\n",
       " 27077898058: [71123857],\n",
       " 27077898061: [74201387, 120987, 1264966],\n",
       " 27077898063: [2071843,\n",
       "  72679085,\n",
       "  70984840,\n",
       "  71123172,\n",
       "  73830984,\n",
       "  73601012,\n",
       "  73601063,\n",
       "  73805947,\n",
       "  73601004,\n",
       "  13188],\n",
       " 27077898064: [120987, 2968, 3522, 3247],\n",
       " 27077898066: [3282384, 120987, 3247],\n",
       " 27077898067: [2896400,\n",
       "  73056529,\n",
       "  3107116,\n",
       "  4711688,\n",
       "  4711599,\n",
       "  1342541,\n",
       "  72118571,\n",
       "  73619035],\n",
       " 27077898073: [73783692, 3522, 3247],\n",
       " 27077899015: [3341844],\n",
       " 27077900002: [2071037],\n",
       " 27077900007: [71003096, 72515392],\n",
       " 27077901003: [73936782, 73843687, 4115279],\n",
       " 27077901008: [2071037],\n",
       " 27077901009: [2071037],\n",
       " 27077901010: [72679050, 1952595],\n",
       " 27077901018: [72527846],\n",
       " 27077901019: [73936774, 73843687, 2071037],\n",
       " 27077902006: [2071037],\n",
       " 27077902014: [72527811],\n",
       " 27077902018: [2071037],\n",
       " 27077902019: [3187985, 2071037],\n",
       " 27077902022: [2533502],\n",
       " 27077902023: [73936782],\n",
       " 27077902025: [2071037],\n",
       " 27077903002: [2071037],\n",
       " 27077903008: [3247],\n",
       " 27077903010: [2071037, 72607335],\n",
       " 27077903013: [2533502],\n",
       " 27077903016: [71459057],\n",
       " 27077903026: [3247],\n",
       " 27077903033: [2071037],\n",
       " 27077903034: [4552210, 73784915],\n",
       " 27077903040: [73784915],\n",
       " 27077904002: [2071037],\n",
       " 27077904010: [2071037],\n",
       " 27077904012: [2071037],\n",
       " 27077905004: [74154389],\n",
       " 27077905008: [2071037],\n",
       " 27077905010: [2071037, 72607335, 73735914],\n",
       " 27077905015: [2071037],\n",
       " 27077905017: [125695, 125946],\n",
       " 27077905019: [72486503, 73056456, 72082267, 74083082, 6572],\n",
       " 27077905021: [72515392],\n",
       " 27077905022: [120987],\n",
       " 27077905028: [72238046, 72607335, 2942070],\n",
       " 27077905031: [16268, 71003096],\n",
       " 27077905032: [3107116],\n",
       " 27077905034: [72554452],\n",
       " 27077905035: [3140954,\n",
       "  1264974,\n",
       "  1264966,\n",
       "  71138250,\n",
       "  72748796,\n",
       "  1342541,\n",
       "  3341844,\n",
       "  70019967,\n",
       "  71459057],\n",
       " 27077905038: [125733],\n",
       " 27077905041: [13188, 3257533, 3096548],\n",
       " 27077906002: [2071037],\n",
       " 27077906003: [3187985, 2071037, 3018],\n",
       " 27077906005: [2071037],\n",
       " 27077906012: [73848220, 2071037, 3082474],\n",
       " 27077906017: [2071037],\n",
       " 27077906022: [2071037],\n",
       " 27077907010: [2071037],\n",
       " 27077907012: [2071037],\n",
       " 27077907013: [3187985],\n",
       " 27077907018: [2071037, 72607335],\n",
       " 27077907020: [2071037],\n",
       " 27077907026: [72607335],\n",
       " 27077907035: [2071037],\n",
       " 27077908007: [73639060],\n",
       " 27077908012: [72527846, 71459049],\n",
       " 27077908016: [4115279],\n",
       " 27077908019: [16268, 72607335],\n",
       " 27077908020: [72238070],\n",
       " 27077908026: [2071037],\n",
       " 27077908028: [2071738, 71003096],\n",
       " 27077908051: [2968, 6580],\n",
       " 27077909003: [73846104],\n",
       " 27077909004: [2071037],\n",
       " 27077909010: [2071037],\n",
       " 27077909013: [2071037],\n",
       " 27077910002: [74298682, 1494074],\n",
       " 27077910007: [73936782, 73847755, 70594252],\n",
       " 27077910009: [73669830],\n",
       " 27077910010: [1494066],\n",
       " 27077911002: [2071037],\n",
       " 27077911006: [2071037],\n",
       " 27077911010: [70594252],\n",
       " 27077911012: [73805947],\n",
       " 27077911013: [4410025, 1048228],\n",
       " 27077912001: [2071037],\n",
       " 27077912009: [2071290],\n",
       " 27077912011: [73805955],\n",
       " 27077913014: [73967467, 73967475],\n",
       " 27077914013: [2071037],\n",
       " 27077914022: [511773, 74201387, 3107116, 1342533],\n",
       " 27077915002: [3187985],\n",
       " 27077915003: [2071037],\n",
       " 27077915010: [4778375, 74201395, 71459057],\n",
       " 27077916002: [4410106, 72515392],\n",
       " 27077916003: [3187985],\n",
       " 27077916008: [73256307],\n",
       " 27077917006: [72701668, 73967335],\n",
       " 27077917010: [73847755, 2071037],\n",
       " 27077917011: [2071037],\n",
       " 27077918017: [3107116, 4679393],\n",
       " 27077918032: [16462, 74306510],\n",
       " 27077918037: [125733,\n",
       "  73798584,\n",
       "  72527846,\n",
       "  73967467,\n",
       "  73796360,\n",
       "  72298693,\n",
       "  73601063,\n",
       "  120987],\n",
       " 27077918038: [4552210, 72544651],\n",
       " 27077918043: [512346],\n",
       " 27077918046: [2071843, 71123164, 71123148, 4410025, 73809888, 3107116],\n",
       " 27077918047: [72852887],\n",
       " 27077918050: [2370212],\n",
       " 27077918051: [71123253, 1264966, 1342525],\n",
       " 27077918054: [16268,\n",
       "  72308257,\n",
       "  72308192,\n",
       "  72308230,\n",
       "  72308168,\n",
       "  72308222,\n",
       "  72308281],\n",
       " 27077918056: [3107116,\n",
       "  4058097,\n",
       "  1595245,\n",
       "  1595288,\n",
       "  3210499,\n",
       "  2071673,\n",
       "  2071738,\n",
       "  71003096,\n",
       "  71123199,\n",
       "  71123164,\n",
       "  73733245,\n",
       "  73733253,\n",
       "  73733261,\n",
       "  73733288,\n",
       "  73733296,\n",
       "  73733318],\n",
       " 27077918059: [3107116],\n",
       " 27077918060: [511773, 73089834, 74306510, 70941149, 3247],\n",
       " 27077919015: [3344],\n",
       " 27077919017: [2071290, 2071843],\n",
       " 27077919032: [2017865, 3107116],\n",
       " 27077919034: [120987],\n",
       " 27077919037: [72910585, 4058119, 13188],\n",
       " 27077919038: [72998016,\n",
       "  73783692,\n",
       "  73783722,\n",
       "  2586185,\n",
       "  71249729,\n",
       "  71249885,\n",
       "  71459561,\n",
       "  73157570],\n",
       " 27077919039: [3187985],\n",
       " 27077919044: [2071290, 2071738, 71146474, 3247, 71073574],\n",
       " 27077919045: [1283839,\n",
       "  71886559,\n",
       "  73893595,\n",
       "  73601047,\n",
       "  12637,\n",
       "  1044613,\n",
       "  3429806,\n",
       "  3247,\n",
       "  2687399,\n",
       "  71453954],\n",
       " 27077919051: [71003096,\n",
       "  71886559,\n",
       "  71886664,\n",
       "  71886672,\n",
       "  71888136,\n",
       "  73317039,\n",
       "  73790028,\n",
       "  73601063,\n",
       "  2364654],\n",
       " 27077919055: [1625772],\n",
       " 27077919058: [3282384, 72554517, 4410025, 72607335, 3492, 71459561],\n",
       " 27077919060: [511773, 72748796],\n",
       " 27077919061: [73843539, 73639397],\n",
       " 27077919062: [2071037],\n",
       " 27077919078: [2071037, 2370204],\n",
       " 27077919079: [1264974, 248363],\n",
       " 27077919082: [125733, 4778375, 4058097, 3522, 6610],\n",
       " 27077919083: [70856206],\n",
       " 27077919085: [71018905, 71019006, 74306510],\n",
       " 27077919086: [70594252, 3769097],\n",
       " 27077919089: [16268,\n",
       "  73601012,\n",
       "  73601004,\n",
       "  2533502,\n",
       "  4143523,\n",
       "  2943247,\n",
       "  3247,\n",
       "  6637],\n",
       " 27077919090: [73046582, 71073574],\n",
       " 27077919101: [125733,\n",
       "  125946,\n",
       "  71123253,\n",
       "  709174,\n",
       "  709344,\n",
       "  709336,\n",
       "  709220,\n",
       "  73056529,\n",
       "  120987,\n",
       "  1264974,\n",
       "  1264966,\n",
       "  72748737,\n",
       "  4711599,\n",
       "  1342533,\n",
       "  73606596],\n",
       " 27077919102: [71123261,\n",
       "  73157589,\n",
       "  73157570,\n",
       "  72527846,\n",
       "  16462,\n",
       "  3925749,\n",
       "  73784915,\n",
       "  71309268,\n",
       "  12807],\n",
       " 27077919105: [4797825, 71146342, 72527846, 120987, 72380853],\n",
       " 27077920003: [2071037],\n",
       " 27077920011: [74157663, 2071037],\n",
       " 27077921005: [72590394],\n",
       " 27077921013: [2024128],\n",
       " 27077921033: [2071037],\n",
       " 27077922009: [512346, 511773],\n",
       " 27077922016: [2071037],\n",
       " 27077923001: [71003096, 73601012],\n",
       " 27077924003: [70856206],\n",
       " 27077924004: [418692, 120987],\n",
       " 27077925003: [2071290, 2071738, 2071037],\n",
       " 27077925004: [2071037],\n",
       " 27077925009: [2071037, 72998008],\n",
       " 27077926001: [72515414],\n",
       " 27077926006: [3187985],\n",
       " 27077926027: [2712997, 2713098, 1802852, 1802844],\n",
       " 27077926030: [73848220, 3187985, 2071037],\n",
       " 27077926033: [2071037],\n",
       " 27077926034: [72701625, 72544651],\n",
       " 27077926035: [73805955, 73601004],\n",
       " 27077931016: [73752584],\n",
       " 27077932008: [2370212],\n",
       " 27077932009: [73843687],\n",
       " 27077932016: [2071037],\n",
       " 27077932018: [3107116],\n",
       " 27077932019: [2071037],\n",
       " 27077932023: [71146474, 1952595],\n",
       " 27077932028: [17973, 17590, 16268, 1675532],\n",
       " 27077932029: [3107116, 72380853],\n",
       " 27077932035: [3107116],\n",
       " 27077932046: [3107116],\n",
       " 27077932053: [74154397],\n",
       " 27077932055: [2071037, 72515392, 6572],\n",
       " 27077932058: [73846015, 2071037],\n",
       " 27077932059: [3187985, 2071037],\n",
       " 27077932062: [72118571],\n",
       " 27077932074: [2755769],\n",
       " 27077933006: [3282384],\n",
       " 27077933007: [71424261],\n",
       " 27077933016: [2071037],\n",
       " 27077933019: [74295926],\n",
       " 27077933023: [2071037],\n",
       " 27077933034: [2071037],\n",
       " 27077933038: [73936782, 71424261],\n",
       " 27077933040: [2071037],\n",
       " 27077933048: [73733245, 72954663, 3247, 72572000, 2065770],\n",
       " 27077933059: [72527811, 120987],\n",
       " 27077933062: [74201379, 74201387],\n",
       " 27077933064: [3474690, 3474682],\n",
       " 27077933066: [2071037, 3342166],\n",
       " 27077933069: [3247],\n",
       " 27077933070: [12807, 16381, 16462, 73601063],\n",
       " 27077933076: [125733, 2943247],\n",
       " 27077933080: [125695,\n",
       "  126020,\n",
       "  73046590,\n",
       "  73967440,\n",
       "  71138730,\n",
       "  1941135,\n",
       "  70856214,\n",
       "  3492,\n",
       "  3247,\n",
       "  2221918,\n",
       "  70019967,\n",
       "  72380853,\n",
       "  72486384,\n",
       "  73719951],\n",
       " 27077933081: [73967440],\n",
       " 27077933084: [73830968, 73815543, 73777374],\n",
       " 27077933087: [2071290, 2071673, 2071738, 2071843],\n",
       " 27077933095: [17973],\n",
       " 27077933098: [73805947],\n",
       " 27077933099: [72571977, 72571993],\n",
       " 27077933105: [3107116, 72748796],\n",
       " 27077933106: [73696277, 71123253, 72554452, 1941135, 70856206, 3341844],\n",
       " 27077933108: [72998024, 73805955],\n",
       " 27077933111: [17701,\n",
       "  71018905,\n",
       "  71019006,\n",
       "  72515392,\n",
       "  74201387,\n",
       "  74080806,\n",
       "  74154370,\n",
       "  3522,\n",
       "  4013379],\n",
       " 27077933114: [125946, 198811, 17701],\n",
       " 27077933115: [3107116, 1264974, 6572],\n",
       " 27077934006: [73848220],\n",
       " 27077934010: [73601063],\n",
       " 27077934015: [73815667],\n",
       " 27077934028: [2071037],\n",
       " 27077934033: [73315729, 72693827],\n",
       " 27077934053: [73848220],\n",
       " 27077934059: [3187985],\n",
       " 27077934063: [2071738, 2071037],\n",
       " 27077934065: [2071037, 72872314],\n",
       " 27077934068: [72607335, 73089834],\n",
       " 27077934069: [2071037],\n",
       " 27077934070: [2071037],\n",
       " 27077934072: [2071037],\n",
       " 27077934074: [2071037],\n",
       " 27077934076: [2071037],\n",
       " 27077934077: [2071037],\n",
       " 27077934078: [2071037],\n",
       " 27077934079: [2071037],\n",
       " 27077935006: [2071037],\n",
       " 27077935010: [2071037],\n",
       " 27077935014: [2071037],\n",
       " 27077936012: [74190695],\n",
       " 27077936016: [2071037],\n",
       " 27077936017: [2071037],\n",
       " 27077936019: [74201379],\n",
       " 27077936021: [71123857, 3429806],\n",
       " 27077936025: [125733, 3282384, 1941135],\n",
       " 27077936026: [1494066],\n",
       " 27077936028: [72238070],\n",
       " 27077936029: [71003096, 12637, 3522],\n",
       " 27077936030: [70594252],\n",
       " 27077936031: [3341844, 71245820],\n",
       " 27077936033: [3107116],\n",
       " 27077936036: [2071037],\n",
       " 27077936043: [73733245, 73733253],\n",
       " 27077936049: [3187985, 70276641, 4924894],\n",
       " 27077936055: [3187985],\n",
       " 27077937007: [2071290, 2071738],\n",
       " 27077937012: [3187985],\n",
       " 27077937013: [3187985],\n",
       " 27077937016: [73468932],\n",
       " 27077937017: [3107116],\n",
       " 27077937020: [2071037, 73056529, 74190660],\n",
       " 27077937024: [3522],\n",
       " 27077937025: [2071037],\n",
       " 27077937027: [3187985],\n",
       " 27077937030: [2071843, 70984840],\n",
       " 27077937035: [1686569],\n",
       " 27077937039: [2071037],\n",
       " 27077938004: [2071037],\n",
       " 27077938011: [2071037],\n",
       " 27077938012: [2071037, 72515414, 73089834],\n",
       " 27077938015: [2071037],\n",
       " 27077938016: [3282228, 73668478],\n",
       " 27077939008: [2071037, 70594252],\n",
       " 27077939009: [2071037],\n",
       " 27077939010: [2071037, 74306510],\n",
       " 27077939015: [2071037, 71083936],\n",
       " 27077939016: [2071037],\n",
       " 27077939020: [4123115],\n",
       " 27077939024: [2071037],\n",
       " 27077939032: [2071738],\n",
       " 27077939038: [3344],\n",
       " 27077939041: [2071037],\n",
       " 27077939045: [2071037],\n",
       " 27077939048: [72607335],\n",
       " 27077939050: [1686437],\n",
       " 27077939052: [3107116],\n",
       " 27077940003: [73936782, 73846015],\n",
       " 27077940007: [1466151],\n",
       " 27077940010: [4410025],\n",
       " 27077940011: [70984840],\n",
       " 27077940020: [3187985],\n",
       " 27077940021: [2071290, 2071843],\n",
       " 27077940022: [72554452, 3107256],\n",
       " 27077940028: [709174, 709344, 709336, 709220, 513016],\n",
       " 27077941004: [2071037, 125733, 511773],\n",
       " 27077941006: [2071037],\n",
       " 27077941010: [2071037],\n",
       " 27077941016: [2071037],\n",
       " 27077942004: [2071037],\n",
       " 27077942007: [2071037],\n",
       " 27077942008: [2071037],\n",
       " 27077942011: [2071037],\n",
       " 27077942020: [72527811, 71018905, 120987, 3107116],\n",
       " 27077942027: [72380853],\n",
       " 27077942028: [2071037],\n",
       " 27077942030: [73784915],\n",
       " 27077943002: [3107116],\n",
       " 27077943006: [2071037, 70594252, 2533502],\n",
       " 27077943008: [74154370],\n",
       " 27077943009: [2533502, 3341844],\n",
       " 27077944005: [3187985, 1048228],\n",
       " 27077944010: [3187985],\n",
       " 27077944015: [74157663, 2071037],\n",
       " 27077944024: [73790001, 120987, 73784915],\n",
       " 27077944029: [72527811],\n",
       " 27077944034: [74201379],\n",
       " 27077944036: [2071037, 3522],\n",
       " 27077944038: [3107116],\n",
       " 27077944044: [3187985, 2071037, 71003096],\n",
       " 27077944046: [72527811, 73668478],\n",
       " 27077945002: [3107116],\n",
       " 27077945008: [74306510],\n",
       " 27077945009: [73843687],\n",
       " 27077945010: [3107116],\n",
       " 27077945013: [2071037],\n",
       " 27077945016: [3107116],\n",
       " 27077946002: [513016],\n",
       " 27077946009: [418692, 74080075],\n",
       " 27077947015: [1494066],\n",
       " 27077947016: [2071290],\n",
       " 27077947021: [3107116],\n",
       " 27077947026: [2071037],\n",
       " 27077947027: [2071037],\n",
       " 27077948002: [2071037],\n",
       " 27077948015: [2071037],\n",
       " 27077948021: [17590, 72515414, 3247],\n",
       " 27077948028: [3187985],\n",
       " 27077948032: [2071037, 71003096],\n",
       " 27077948037: [2071037],\n",
       " 27077949001: [2071037],\n",
       " 27077949009: [72308265],\n",
       " 27077949011: [1625772],\n",
       " 27077949014: [3187985],\n",
       " 27077949028: [73805971, 73809802],\n",
       " 27077949039: [74250523, 74250671, 74250515],\n",
       " 27077949046: [2071037],\n",
       " 27077950010: [2071037],\n",
       " 27077950014: [4058097],\n",
       " 27077950017: [2071037],\n",
       " 27077950020: [72515414],\n",
       " 27077950023: [2071037],\n",
       " 27077950025: [3247],\n",
       " 27077950026: [2071037],\n",
       " 27077950027: [2071037],\n",
       " 27077950032: [2071037],\n",
       " 27077950042: [2071037],\n",
       " 27077950043: [3107116, 1494066, 71245820],\n",
       " 27077950044: [2071037, 72515414, 3247],\n",
       " 27077950056: [3187985, 2071037],\n",
       " 27077950059: [2071037],\n",
       " 27077950065: [2071037],\n",
       " 27077950067: [2071037, 709220, 120987, 74061216],\n",
       " 27077950075: [2755769, 17426, 6572],\n",
       " 27077950076: [2071037],\n",
       " 27077950077: [73967335],\n",
       " 27077951001: [4115279],\n",
       " 27077951002: [74201379],\n",
       " 27077951003: [3247],\n",
       " 27077951011: [2071037, 73735914],\n",
       " 27077951013: [2071290],\n",
       " 27077951017: [2071037],\n",
       " 27077951026: [72527846],\n",
       " 27077951033: [3107116],\n",
       " 27077951036: [3187985],\n",
       " 27077951042: [3107116],\n",
       " 27077951045: [2071738, 3187985],\n",
       " 27077951047: [2071037],\n",
       " 27077951048: [2071037],\n",
       " 27077951049: [126020, 919713, 3247],\n",
       " 27077951051: [73830984],\n",
       " 27077951057: [2071290, 2071738, 2071843, 3187985],\n",
       " 27077951066: [3107116],\n",
       " 27077951067: [3187985],\n",
       " 27077952005: [3107116],\n",
       " 27077952006: [3107116],\n",
       " 27077952012: [1494066],\n",
       " 27077952017: [3187985],\n",
       " 27077952027: [71123253, 74190660, 74190695, 3107116],\n",
       " 27077953014: [3107116],\n",
       " 27077953022: [3107116],\n",
       " 27077953030: [2071037, 6572, 74061216],\n",
       " 27077954008: [71245820],\n",
       " 27077954010: [2071037],\n",
       " 27077954013: [2071037],\n",
       " 27077954019: [3107116],\n",
       " 27077954022: [74201387, 73784915],\n",
       " 27077954023: [73601063, 72380853],\n",
       " 27077954026: [2071037],\n",
       " 27077954032: [2071037, 70984840, 72486384],\n",
       " 27077954035: [4058097],\n",
       " 27077954037: [3187985, 2071037],\n",
       " 27077954041: [3187985],\n",
       " 27077954050: [2071037, 3107116],\n",
       " 27077954053: [2071037],\n",
       " 27077954056: [2071037],\n",
       " 27077954063: [3187985, 2071037],\n",
       " 27077954064: [2071037],\n",
       " 27077954065: [3187985, 2071037],\n",
       " 27077954068: [73848182, 2071037, 72515392, 3107116],\n",
       " 27077955002: [2071037],\n",
       " 27077955003: [2071037],\n",
       " 27077955008: [2071037],\n",
       " 27077956006: [3247],\n",
       " 27077965005: [2071037, 71085017],\n",
       " 27077965006: [71123253, 72702052, 17973, 71123911, 3107116, 2943247, 3247],\n",
       " 27077965007: [73848220, 2071037, 71084991, 72607335, 73784915, 1048228],\n",
       " 27077965008: [3107116],\n",
       " 27077965012: [73046582, 72308354, 3107116, 72748796, 73784915, 3018, 2024128],\n",
       " 27077965018: [2071037],\n",
       " 27077965032: [3187985, 74154389],\n",
       " 27077965033: [74310119],\n",
       " 27077965038: [74306510],\n",
       " 27077965041: [1941135, 74201387, 74306618, 3107116],\n",
       " 27077965042: [2071037],\n",
       " 27077965043: [73830976, 2207435, 71453954, 3012166, 70630941],\n",
       " 27077965045: [73830976],\n",
       " 27077965048: [1258214, 2364379],\n",
       " 27077965052: [3107116],\n",
       " 27077965053: [2071037],\n",
       " 27077965072: [2071037],\n",
       " 27077965080: [73798592],\n",
       " 27077965088: [1312294],\n",
       " 27077965093: [2071037],\n",
       " 27077965104: [3187985],\n",
       " 27077965114: [2071037],\n",
       " 27077965115: [2071037],\n",
       " 27077965134: [1686437, 71123911, 73735914, 2943247, 73777358],\n",
       " 27077965136: [2071037],\n",
       " 27077965137: [2071037],\n",
       " 27077965151: [2071843, 71453954],\n",
       " 27077965155: [71123253,\n",
       "  513016,\n",
       "  73752592,\n",
       "  73973157,\n",
       "  3107116,\n",
       "  3107256,\n",
       "  1264974,\n",
       "  1264966,\n",
       "  4143523,\n",
       "  4638255,\n",
       "  71123288,\n",
       "  71427627,\n",
       "  72748796,\n",
       "  72748737,\n",
       "  4058097,\n",
       "  72130709,\n",
       "  4711688,\n",
       "  4711599,\n",
       "  2687399,\n",
       "  3341844,\n",
       "  72118598,\n",
       "  72118571,\n",
       "  72380853,\n",
       "  72486384,\n",
       "  73719951,\n",
       "  73719978],\n",
       " 27077965159: [2071843, 2071037, 4410025],\n",
       " 27077965161: [2071037, 4410130, 3247],\n",
       " 27077965166: [2071037, 1525808, 120987, 3012166, 2749319],\n",
       " 27077965167: [74103547],\n",
       " 27077965169: [73967335, 73967432, 511773],\n",
       " 27077966007: [709344],\n",
       " 27077966008: [3187985],\n",
       " 27077966014: [3187985],\n",
       " 27077966016: [73256307],\n",
       " 27077966017: [2533502],\n",
       " 27077966018: [2071037, 1494066, 3247],\n",
       " 27077966019: [2017865],\n",
       " 27077966021: [2071037],\n",
       " 27077966022: [2071037],\n",
       " 27077966024: [74190695],\n",
       " 27077966032: [2071037],\n",
       " 27077966034: [74157663, 3187985],\n",
       " 27077966035: [3187985],\n",
       " 27077966036: [73784915],\n",
       " 27077966039: [2071037],\n",
       " 27077966044: [2071037],\n",
       " 27077966050: [3187985],\n",
       " 27077966051: [2071037, 72527846, 1941135, 71019006, 120987],\n",
       " 27077966054: [2071037],\n",
       " 27077966055: [73784915],\n",
       " 27077966056: [72527846],\n",
       " 27077966059: [73642924, 3341844, 4679393],\n",
       " 27077966062: [71123857],\n",
       " 27077966065: [2071037],\n",
       " 27077966075: [3187985],\n",
       " 27077967002: [3107116],\n",
       " 27077967005: [73601047],\n",
       " 27077967008: [2071037],\n",
       " 27077967009: [74327771],\n",
       " 27077967010: [3314790, 2071290, 72486384],\n",
       " 27077967011: [2071037, 72748737],\n",
       " 27077967019: [3187985, 2277883, 3247],\n",
       " 27077967027: [2071037],\n",
       " 27077967035: [2071037, 3107116],\n",
       " 27077967037: [3107116, 73784915],\n",
       " 27077967045: [3107116],\n",
       " 27077967050: [3107116],\n",
       " 27077967055: [2071037, 70594252],\n",
       " 27077967056: [73846015, 2071037],\n",
       " 27077967065: [125733, 74250523, 74250558, 74250671],\n",
       " 27077967068: [71123172, 71123180, 2749270],\n",
       " 27077968002: [3107116],\n",
       " 27077968004: [1347667, 1675508],\n",
       " 27077968008: [4741773],\n",
       " 27077968009: [72527811],\n",
       " 27077968015: [418684, 418692, 1494066, 1494074],\n",
       " 27077968019: [2071037, 70984840, 74306510],\n",
       " 27077968023: [3018],\n",
       " 27077968027: [2071037],\n",
       " 27077968028: [16268, 73790001, 72486384],\n",
       " 27077968029: [73790001, 74201379],\n",
       " 27077968030: [2071037],\n",
       " 27077968032: [74157663],\n",
       " 27077968033: [74157663],\n",
       " 27077968034: [125733, 1905554, 3107116, 73468932],\n",
       " 27077968036: [3107116, 70455953],\n",
       " 27077968041: [73843687,\n",
       "  70984735,\n",
       "  71003096,\n",
       "  71123075,\n",
       "  71123083,\n",
       "  71123067,\n",
       "  4410025,\n",
       "  13609,\n",
       "  6572,\n",
       "  6610],\n",
       " 27077968043: [3341828],\n",
       " 27077968046: [71085017, 74306537, 73601020, 73601047],\n",
       " 27077968053: [4797825],\n",
       " 27077968054: [72572019],\n",
       " 27077968056: [2071037],\n",
       " 27077968065: [73790028],\n",
       " 27077968067: [74306510],\n",
       " 27077968070: [74309587],\n",
       " 27077968073: [74309587],\n",
       " 27077968076: [2533502, 248363, 71245820],\n",
       " 27077968078: [16268, 72308346, 72308214, 72308230],\n",
       " 27077968079: [2353059, 4115279],\n",
       " 27077968080: [3107116],\n",
       " 27077968082: [74157663],\n",
       " 27077968083: [1494066],\n",
       " 27077968096: [74306510],\n",
       " 27077968103: [120987],\n",
       " 27077968108: [72527811],\n",
       " 27077968110: [72249056, 72249072],\n",
       " 27077968115: [2071037, 71376100, 71376119, 71376127, 13005],\n",
       " 27077968117: [72527811],\n",
       " 27077968118: [2071037],\n",
       " 27077968123: [72748796, 74079336, 3341828, 72676655],\n",
       " 27077968128: [1076302],\n",
       " 27077968131: [2533502],\n",
       " 27077968145: [3082474],\n",
       " 27077968166: [2071037],\n",
       " 27077968167: [2071037, 71245820],\n",
       " 27077968176: [73601063],\n",
       " 27077969013: [2071037],\n",
       " 27077969017: [3107116],\n",
       " 27077969018: [2071037, 71003096, 72607335],\n",
       " 27077969024: [3187985, 125423, 4778375],\n",
       " 27077969026: [71017321],\n",
       " 27077969028: [72872314],\n",
       " 27077969029: [3107116],\n",
       " 27077969039: [2071037],\n",
       " 27077969046: [2071037, 3247],\n",
       " 27077969047: [125733, 72607335, 3247],\n",
       " 27077969052: [72298693],\n",
       " 27077969055: [2071037],\n",
       " 27077969056: [74190660],\n",
       " 27077969059: [2071037],\n",
       " 27077969072: [2071037, 70594252],\n",
       " 27077969080: [125733, 72590378, 511773, 3001601],\n",
       " 27077970004: [2071037],\n",
       " 27077970006: [2071290, 2071738],\n",
       " 27077970018: [2071037],\n",
       " 27077970021: [72527846],\n",
       " 27077970022: [2071037, 13323],\n",
       " 27077970025: [70856206],\n",
       " 27077970027: [73848069, 4778375],\n",
       " 27077970030: [3107116],\n",
       " 27077970032: [73848220, 2071037],\n",
       " 27077970033: [3096521],\n",
       " 27077970038: [709336, 4123131],\n",
       " 27077970043: [3485978, 3485951, 73893579, 73893587, 3247, 6572],\n",
       " 27077970048: [3247, 3011143],\n",
       " 27077970050: [2071037],\n",
       " 27077970055: [3247],\n",
       " 27077970057: [72486503, 72486481, 73056421, 73056456, 511773],\n",
       " 27077970059: [2071037, 73668478, 1494066],\n",
       " 27077970065: [2071037, 74298682, 198811],\n",
       " 27077970066: [74298682],\n",
       " 27077970067: [72238070],\n",
       " 27077970069: [2071037, 71085017, 74154370],\n",
       " 27077970070: [2071037],\n",
       " 27077970072: [3247],\n",
       " 27077970081: [2071037],\n",
       " 27077970082: [3187985],\n",
       " 27077970083: [2071843, 513016],\n",
       " 27077970084: [72082267, 74083090],\n",
       " 27077970093: [2071037],\n",
       " 27077970095: [2071037],\n",
       " 27077970098: [4410025],\n",
       " 27077970110: [73848190, 72486384],\n",
       " 27077970120: [2071738],\n",
       " 27077970126: [73809888],\n",
       " 27077971003: [72748737],\n",
       " 27077971004: [2071290],\n",
       " 27077971008: [72238046,\n",
       "  72238054,\n",
       "  72607335,\n",
       "  70856206,\n",
       "  1264974,\n",
       "  3247,\n",
       "  72486384],\n",
       " 27077971012: [3187985],\n",
       " 27077971015: [74157663, 511773, 70258279, 3107116, 3247, 3341844],\n",
       " 27077971017: [2071037],\n",
       " 27077971025: [2071037, 17426, 72607335, 72515414, 919713, 3247],\n",
       " 27077971029: [2071037],\n",
       " 27077971031: [74306510],\n",
       " 27077971032: [2071037, 72607335, 72515414],\n",
       " 27077971033: [2071037],\n",
       " 27077971034: [2071037, 73733245, 73733261, 12807],\n",
       " 27077971037: [74201379],\n",
       " 27077971040: [73089834],\n",
       " 27077971041: [2071290, 2071843, 3187985, 3247],\n",
       " 27077971044: [3107116],\n",
       " 27077971055: [71123261, 71123253, 74190695, 72998024, 73733245, 73733326],\n",
       " 27077971057: [2071037],\n",
       " 27077971058: [71003096, 4410025, 72515414],\n",
       " 27077971059: [3187985, 70984840, 71085009, 71123156],\n",
       " 27077971060: [2071673, 3247],\n",
       " 27077971062: [3187985],\n",
       " 27077971063: [2071037],\n",
       " 27077971064: [2071290, 2071673, 2071738],\n",
       " 27077971066: [2071037],\n",
       " 27077971067: [2071037],\n",
       " 27077971073: [3187985, 3107116],\n",
       " 27077971076: [73848220],\n",
       " 27077971077: [2071037],\n",
       " 27077971080: [3187985, 71123253, 3107116, 1264966],\n",
       " 27077971085: [2071037],\n",
       " 27077971088: [2071037],\n",
       " 27077971092: [3187985, 71424261],\n",
       " 27077971093: [120987],\n",
       " 27077971094: [2071290, 3187985, 73809888],\n",
       " 27077971095: [2071037, 1048228],\n",
       " 27077971098: [2071037],\n",
       " 27077971102: [70258279, 3107116],\n",
       " 27077972001: [2071290, 74190660],\n",
       " 27077972002: [3107116],\n",
       " 27077972006: [1494066],\n",
       " 27077972016: [120987, 4058097],\n",
       " 27077972023: [71123083, 73733245, 73733288, 73733318, 73733326, 3012166],\n",
       " 27077972027: [73846015, 2071037],\n",
       " 27077972035: [2071290],\n",
       " 27077972037: [3282384,\n",
       "  72590378,\n",
       "  72082267,\n",
       "  70984735,\n",
       "  71003096,\n",
       "  72515392,\n",
       "  72515414],\n",
       " 27077972044: [70984840],\n",
       " 27077972045: [2071673],\n",
       " 27077972054: [74190660],\n",
       " 27077972076: [2533502, 4058097],\n",
       " 27077972077: [73805955, 3018, 6661],\n",
       " 27077972080: [126179],\n",
       " 27077972081: [71123253, 71123857],\n",
       " 27077972085: [73056529],\n",
       " 27077972090: [4778375, 1941135, 71376089, 120987, 2943247, 3522, 6637],\n",
       " 27077973001: [2071037, 3096548],\n",
       " 27077973003: [2071037],\n",
       " 27077973006: [73719927],\n",
       " 27077973008: [73848220, 2071037],\n",
       " 27077973009: [3187985, 3012166],\n",
       " 27077973010: [2071037],\n",
       " 27077973013: [72238062],\n",
       " 27077973014: [2071037, 71123148],\n",
       " 27077973015: [2071037],\n",
       " 27077973018: [2071673],\n",
       " 27077973033: [3187985, 2071037],\n",
       " 27077973037: [2071037],\n",
       " 27077973046: [2071037],\n",
       " 27077973048: [71424261, 71376100, 73805947],\n",
       " 27077973053: [72515392, 73089834],\n",
       " 27077973054: [2071037],\n",
       " 27077973057: [71018905, 71019006],\n",
       " 27077974004: [2071037],\n",
       " 27077974009: [2071037],\n",
       " 27077974010: [2071037],\n",
       " 27077974011: [2071037],\n",
       " 27077974012: [2071037],\n",
       " 27077974013: [2071037],\n",
       " 27077974014: [2071037],\n",
       " 27077974018: [2071037],\n",
       " 27077974019: [2364352],\n",
       " 27077974024: [120987, 3247, 72486384],\n",
       " 27077974030: [3187985],\n",
       " 27077974034: [2071037],\n",
       " 27077974038: [2071037],\n",
       " 27077974040: [73848166, 74193538],\n",
       " 27077974041: [70594252],\n",
       " 27077974046: [2071037, 70594252],\n",
       " 27077974051: [2071037, 70594252],\n",
       " 27077974060: [73315729, 73815683],\n",
       " 27077974062: [3187985, 3012166],\n",
       " 27077974066: [2071037, 72248122],\n",
       " 27077974068: [2071037],\n",
       " 27077974070: [3141373],\n",
       " 27077974072: [2071037],\n",
       " 27077974076: [4115279],\n",
       " 27077974078: [3107116],\n",
       " 27077974079: [2071037],\n",
       " 27077974085: [2071037],\n",
       " 27077974086: [3187985],\n",
       " 27077974091: [2071037, 72515414, 74201379, 3107116],\n",
       " 27077974093: [2071037],\n",
       " 27077974100: [2071037, 3096548],\n",
       " 27077974101: [3247, 3689],\n",
       " 27077974108: [520837],\n",
       " 27077974109: [2071037, 3247],\n",
       " 27077974110: [3187985],\n",
       " 27077975001: [73893579, 3107116],\n",
       " 27077975006: [3187985],\n",
       " 27077975008: [125733, 74103571, 1675508],\n",
       " 27077975010: [3247],\n",
       " 27077975019: [1970429, 72748796],\n",
       " 27077975021: [3247],\n",
       " 27077975022: [2071037, 71423907],\n",
       " 27077975033: [2071037, 71020683, 70856206, 6572],\n",
       " 27077975039: [73843660],\n",
       " 27077975040: [2221918, 72118598],\n",
       " 27077975041: [73846015],\n",
       " 27077975047: [2071290, 74157663, 4058097],\n",
       " 27077975056: [2071037],\n",
       " 27077975064: [2071738, 2071037],\n",
       " 27077975073: [70984735],\n",
       " 27077975075: [71424261],\n",
       " 27077975081: [2017865],\n",
       " 27077975082: [3107116],\n",
       " 27077975085: [3187985],\n",
       " 27077975087: [71138250, 1342541, 71459057],\n",
       " 27077975119: [4410025, 3012166],\n",
       " 27077975127: [72872314],\n",
       " 27077975129: [2071037],\n",
       " 27077975131: [3187985],\n",
       " 27077975138: [1686569],\n",
       " 27077975139: [16268, 71085017, 71123083, 3522, 6572],\n",
       " 27077975140: [73601063],\n",
       " 27077976003: [2071037],\n",
       " 27077976013: [74190660],\n",
       " 27077976017: [2071037],\n",
       " 27077976018: [120987],\n",
       " 27077976029: [71146474, 74190695, 70258279, 3107116],\n",
       " 27077976034: [2071037, 70594252, 74306510],\n",
       " 27077976035: [1905554, 3603709, 3107116],\n",
       " 27077977023: [418781, 74080075, 73798606],\n",
       " 27077977024: [2071037, 17426, 16268],\n",
       " 27077977026: [2071037, 71123083],\n",
       " 27077977028: [2071037, 74306510, 71230327],\n",
       " 27077977036: [12637, 1595326],\n",
       " 27077977037: [1494066],\n",
       " 27077977043: [3187985],\n",
       " 27077977048: [1347667, 74061216],\n",
       " 27077977053: [2071037],\n",
       " 27077977057: [74157663],\n",
       " 27077978001: [2071037, 72853166],\n",
       " 27077978002: [2071037, 3107116],\n",
       " 27077978006: [2071290, 2071037],\n",
       " 27077978007: [3187985, 2071037],\n",
       " 27077978008: [74154397],\n",
       " 27077978009: [3187985, 512346, 16268],\n",
       " 27077978010: [2071037],\n",
       " 27077978012: [73967432],\n",
       " 27077978020: [4058097],\n",
       " 27077978024: [2071037],\n",
       " 27077978027: [2071037, 73784915, 72486384],\n",
       " 27077978030: [73848220],\n",
       " 27077978039: [73696293, 418692, 3107116],\n",
       " 27077978052: [2071037],\n",
       " 27077979001: [4123115],\n",
       " 27077979004: [16268],\n",
       " 27077979005: [3107116],\n",
       " 27077979013: [2071037],\n",
       " 27077979014: [3187985],\n",
       " 27077979015: [4711688, 1076302, 3603709],\n",
       " 27077979016: [71245820],\n",
       " 27077979021: [73696293, 3474690, 2539616, 3247, 72118571],\n",
       " 27077979022: [1264974, 3341828, 13188, 73777307, 72089067],\n",
       " 27077979024: [73843687],\n",
       " 27077979025: [2017865],\n",
       " 27077979026: [3187985, 73789208],\n",
       " 27077979027: [3187985],\n",
       " 27077979036: [3187985],\n",
       " 27077979037: [2071037],\n",
       " 27077979058: [2071290, 2071037],\n",
       " 27077979059: [2071290, 74190695],\n",
       " 27077979060: [2071738],\n",
       " 27077979066: [3187985],\n",
       " 27077979067: [3247],\n",
       " 27077979072: [1625799],\n",
       " 27077980002: [2071037],\n",
       " 27077980007: [74157663, 1970429],\n",
       " 27077980009: [2071037, 4410025],\n",
       " 27077980019: [70258279],\n",
       " 27077980021: [3393992, 3485951],\n",
       " 27077980028: [70941149],\n",
       " 27077980037: [3247],\n",
       " 27077980038: [74157663, 73809888, 73601047],\n",
       " 27077980039: [73967335],\n",
       " 27077980047: [74154389],\n",
       " 27077980048: [2071037],\n",
       " 27077980053: [73830976, 12696, 70630941],\n",
       " 27077980056: [1494066],\n",
       " 27077980060: [1264966],\n",
       " 27077981009: [4115279],\n",
       " 27077981018: [2071037, 71003096],\n",
       " 27077981020: [4410106, 71003096],\n",
       " 27077981023: [2071037],\n",
       " 27077981027: [2071037],\n",
       " 27077981030: [73846015, 73848220],\n",
       " 27077981031: [2071037],\n",
       " 27077981035: [2071290, 2071037, 71085017],\n",
       " 27077981036: [3187985, 74190660, 74190695, 72607335],\n",
       " 27077981037: [2071037],\n",
       " 27077981038: [73843547, 2071037],\n",
       " 27077981045: [3187985],\n",
       " 27077981048: [3187985],\n",
       " 27077981053: [2071037],\n",
       " 27077981056: [3107116],\n",
       " 27077981057: [2071037],\n",
       " 27077981058: [2071037],\n",
       " 27077981060: [3187985, 2071037],\n",
       " 27077981061: [2071037],\n",
       " 27077981063: [73848220, 2071037],\n",
       " 27077981064: [73848220, 2071037, 71017321, 4797825],\n",
       " 27077981069: [3107116],\n",
       " 27077981071: [2071037],\n",
       " 27077981075: [2071037, 1686569],\n",
       " 27077981077: [3187985],\n",
       " 27077981078: [2071037],\n",
       " 27077981079: [72486481,\n",
       "  74298682,\n",
       "  71020683,\n",
       "  2533499,\n",
       "  3107116,\n",
       "  3628787,\n",
       "  3341844],\n",
       " 27077981081: [73848220],\n",
       " 27077982001: [2071037],\n",
       " 27077982002: [2071037, 3107116],\n",
       " 27077982007: [73936782],\n",
       " 27077982019: [709174],\n",
       " 27077982025: [72515414],\n",
       " 27077982035: [71017321, 71245820],\n",
       " 27077982036: [2071037, 73784915],\n",
       " 27077982043: [2071037, 74190695, 120987, 1494066, 2943247, 3247, 3018],\n",
       " 27077982046: [2071037, 70594252, 72607335, 72515392],\n",
       " 27077982047: [2071037],\n",
       " 27077982048: [72118598],\n",
       " 27077982051: [74327771],\n",
       " 27077982055: [3018, 6580],\n",
       " 27077982056: [3187985, 1494066],\n",
       " 27077982059: [418692, 74080806],\n",
       " 27077982065: [709425],\n",
       " 27077983001: [13188, 4123123, 6572],\n",
       " 27077983007: [2071037, 2533502],\n",
       " 27077983008: [2071037],\n",
       " 27077983009: [2071037, 3107116],\n",
       " 27077983010: [2071037],\n",
       " 27077983011: [3342166],\n",
       " 27077983012: [71123857,\n",
       "  71123911,\n",
       "  71123083,\n",
       "  72607335,\n",
       "  72515414,\n",
       "  74154397,\n",
       "  74154370,\n",
       "  404802],\n",
       " 27077983013: [72527811, 1970429, 1342533, 4679393],\n",
       " 27077983014: [71084991, 3107116],\n",
       " 27077983015: [3187985],\n",
       " 27077983020: [71003096],\n",
       " 27077983021: [2071673, 2071037],\n",
       " 27077983028: [71018905, 71019006, 74154389, 1342525],\n",
       " 27077983035: [3187985],\n",
       " 27077983037: [2071037, 72527811],\n",
       " 27077983039: [2071290, 2071738],\n",
       " 27077983044: [71003096, 72515392],\n",
       " 27077983048: [2071037, 72554452, 70984840, 4410025, 3107116],\n",
       " 27077984003: [2071037, 709220],\n",
       " 27077984004: [2071037, 71123830],\n",
       " 27077984014: [1264974, 1264966, 72748796, 72676655],\n",
       " 27077984016: [73601012, 73601004, 72872314],\n",
       " 27077984023: [2071037],\n",
       " 27077985005: [2071037, 4058097],\n",
       " 27077985006: [2071037],\n",
       " 27077985010: [2071037],\n",
       " 27077985016: [125733, 4069366, 3247],\n",
       " 27077985022: [2071037],\n",
       " 27077985026: [74157663, 3187985],\n",
       " 27077985029: [120987, 3247],\n",
       " 27077985030: [17590],\n",
       " 27077985033: [520837],\n",
       " 27077985037: [2943247, 3247],\n",
       " 27077985054: [2071037],\n",
       " 27077985055: [2024128],\n",
       " 27077985063: [3187985, 2071037],\n",
       " 27077985064: [3187985, 2071037],\n",
       " 27077985075: [2071843, 3187985],\n",
       " 27077985076: [74157663],\n",
       " 27077985077: [73089834],\n",
       " 27077985086: [71123911],\n",
       " 27077985088: [71146474,\n",
       "  72554452,\n",
       "  72910585,\n",
       "  73815543,\n",
       "  72872314,\n",
       "  73668478,\n",
       "  70947422,\n",
       "  73784915,\n",
       "  1226908,\n",
       "  3341828],\n",
       " 27077985089: [72750081, 73784915],\n",
       " 27077985099: [71123253,\n",
       "  74190660,\n",
       "  1686569,\n",
       "  1264974,\n",
       "  1264966,\n",
       "  72750081,\n",
       "  3247,\n",
       "  3018,\n",
       "  4123131,\n",
       "  12807],\n",
       " 27077985102: [71123261, 71123253],\n",
       " 27077985103: [536628, 536148, 1519778],\n",
       " 27077986007: [4058097],\n",
       " 27077986014: [120987],\n",
       " 27077986019: [3187985],\n",
       " 27077986026: [2071037],\n",
       " 27077986033: [2071037],\n",
       " 27077986035: [2071037],\n",
       " 27077986045: [3187985],\n",
       " 27077986046: [2071037],\n",
       " 27077986047: [3187985],\n",
       " 27077986050: [74201379],\n",
       " 27077986052: [2071037],\n",
       " 27077986057: [73777196],\n",
       " 27077986060: [2071037],\n",
       " 27077986065: [3107116, 1494066],\n",
       " 27077986066: [3247, 3018, 71073574],\n",
       " 27077986087: [73848220, 2071037],\n",
       " 27077986091: [3247],\n",
       " 27077986097: [73784915],\n",
       " 27077986100: [73843547],\n",
       " 27077986103: [1264974],\n",
       " 27077986126: [73967440],\n",
       " 27077986130: [1625799, 3604152],\n",
       " 27077986138: [72544678],\n",
       " 27077986139: [2755769, 2943247, 3247],\n",
       " 27077986146: [2896400,\n",
       "  73056529,\n",
       "  71465839,\n",
       "  70079145,\n",
       "  4554876,\n",
       "  4554884,\n",
       "  72748737],\n",
       " 27077986152: [72590378, 73601012, 73805947, 73601004, 73600946, 3082474],\n",
       " 27077986153: [1293036],\n",
       " 27077986155: [71123253, 3107116, 3034755],\n",
       " 27077986157: [3107116],\n",
       " 27077986160: [4426266, 513016, 73790001],\n",
       " 27077986163: [90514, 73798584, 74190695, 3107116],\n",
       " 27077987002: [2071037],\n",
       " 27077987004: [2071037],\n",
       " 27077987011: [74157663],\n",
       " 27077987013: [2071037],\n",
       " 27077987014: [2071037, 72238011, 73735906, 73893579],\n",
       " 27077987020: [72702052, 17701, 73089842],\n",
       " 27077987026: [74157663, 2071037],\n",
       " 27077987028: [74014374],\n",
       " 27077987029: [74014374],\n",
       " 27077987031: [70941149],\n",
       " 27077987035: [1525808],\n",
       " 27077987036: [74014374, 4123115],\n",
       " 27077987040: [72527846],\n",
       " 27077988001: [74201387],\n",
       " 27077988020: [73846015],\n",
       " 27077988024: [2071037, 72872314],\n",
       " 27077988029: [74190660, 74190695, 3341844],\n",
       " 27077988031: [3107116, 3247, 1048228],\n",
       " 27077988036: [70258279],\n",
       " 27077988044: [120987],\n",
       " 27077988053: [3344],\n",
       " 27077988061: [2943247, 3247],\n",
       " 27077988062: [73046590, 3107116],\n",
       " 27077988080: [3247],\n",
       " 27077988099: [72607335],\n",
       " 27077988113: [73471003, 73846015, 3689],\n",
       " 27077988114: [3107116],\n",
       " 27077988124: [17426, 4093992, 3247, 248363, 71459065],\n",
       " 27077988133: [72607335],\n",
       " 27077988134: [2071037, 2943247],\n",
       " 27077988140: [2071673],\n",
       " 27077989012: [2071037],\n",
       " 27077989014: [2071037],\n",
       " 27077989016: [2071037, 71424261, 70258279],\n",
       " 27077989025: [2071037],\n",
       " 27077989026: [2071037],\n",
       " 27077989028: [2071037],\n",
       " 27077989037: [73848220, 2071037],\n",
       " 27077989040: [3187985, 2071037],\n",
       " 27077989043: [2017865],\n",
       " 27077989044: [70594252],\n",
       " 27077989049: [3247],\n",
       " 27077989050: [2071037],\n",
       " 27077989054: [2071037],\n",
       " 27077989055: [2071037],\n",
       " 27077989059: [71146342, 1952595],\n",
       " 27077989068: [3187985],\n",
       " 27077989071: [3107116],\n",
       " 27077989078: [2071037],\n",
       " 27077990005: [2071037, 3141373],\n",
       " 27077990006: [2071037],\n",
       " ...}"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "### Genrate copy for the original basket for future trace back if needed\n",
    "### All other manipulate will use the copied dictionary\n",
    "basket = basket_dict.copy()\n",
    "basket"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "w5hcTvtTznL6"
   },
   "outputs": [],
   "source": [
    "def item_code_manipulation(basket_val):\n",
    "    \"\"\"\n",
    "    This function takes in dictionary , where the keys represent transaction number(order id) and the values are lists of item codes.\n",
    "    The function processes each item code by converting it to an integer, then formatting it as a zero-padded string of length 9.\n",
    "    The 'basket_val' dictionary is updated with the new formatted item codes.\n",
    "\n",
    "    Args:\n",
    "    basket_val (dict): A dictionary with keys representing transaction number(order id) and values as lists of strings/numbers representing item codes.\n",
    "\n",
    "    Returns:\n",
    "    dict: The updated 'basket_val' dictionary with zero-padded strings of length 9 for each item code.\n",
    "    \"\"\"\n",
    "    for val in basket_val.keys():\n",
    "        new_id = []\n",
    "        for i in basket[val]:\n",
    "            i = int(float(i))\n",
    "            i = str(i).zfill(9)\n",
    "            new_id.append(i)\n",
    "        basket_val.update({val: new_id})\n",
    "    return basket_val"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "XWnwMPXCi4xu"
   },
   "outputs": [],
   "source": [
    "### Execute the function\n",
    "basket = item_code_manipulation(basket)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "PSvrIu7ee-Dh",
    "outputId": "12cba1ed-3e6c-4077-f73f-11d5a127b169"
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{27077843100: ['003107213'],\n",
       " 27077843102: ['072701668', '072238011'],\n",
       " 27077843103: ['003141373', '000006572', '004176790'],\n",
       " 27077843105: ['003141373'],\n",
       " 27077843138: ['002755769', '000017590', '003107116', '000003247'],\n",
       " 27077843140: ['073733245'],\n",
       " 27077843150: ['072590467', '000003247'],\n",
       " 27077843152: ['000125733', '001494066', '002943247'],\n",
       " 27077855019: ['071123857'],\n",
       " 27077855020: ['074295829', '072515414', '000246158'],\n",
       " 27077855023: ['000120987'],\n",
       " 27077855024: ['000418692', '003001601', '074193538'],\n",
       " 27077855026: ['074250523'],\n",
       " 27077855028: ['073315729', '074306618'],\n",
       " 27077855034: ['000709336',\n",
       "  '000709220',\n",
       "  '003107256',\n",
       "  '071138250',\n",
       "  '071138269'],\n",
       " 27077855041: ['072998024'],\n",
       " 27077855097: ['072308303', '000012637', '071245820', '000006572'],\n",
       " 27077855118: ['004410025', '001347667'],\n",
       " 27077855119: ['000006572'],\n",
       " 27077855170: ['002071037'],\n",
       " 27077855234: ['003012166'],\n",
       " 27077855261: ['072590467', '072093854'],\n",
       " 27077855272: ['002370204'],\n",
       " 27077864092: ['001466151'],\n",
       " 27077873006: ['003107116'],\n",
       " 27077877018: ['004410025', '003107116', '000246158'],\n",
       " 27077877060: ['002071037',\n",
       "  '003483398',\n",
       "  '004410025',\n",
       "  '073089834',\n",
       "  '003107116',\n",
       "  '003012166',\n",
       "  '001048228'],\n",
       " 27077877075: ['000120405', '001494066'],\n",
       " 27077877076: ['074295829'],\n",
       " 27077877091: ['072607335', '003107116', '000003018'],\n",
       " 27077877094: ['000709220', '071018905', '003107116'],\n",
       " 27077880001: ['073967440'],\n",
       " 27077884006: ['003107116'],\n",
       " 27077884017: ['003107116', '000405051'],\n",
       " 27077884018: ['001941135', '071123911', '073805947'],\n",
       " 27077884019: ['003341844'],\n",
       " 27077884022: ['003107116'],\n",
       " 27077884028: ['073601004',\n",
       "  '073600946',\n",
       "  '002943247',\n",
       "  '071453954',\n",
       "  '003012166'],\n",
       " 27077884029: ['071085017', '073601012', '001264974', '000248452'],\n",
       " 27077885005: ['003107116'],\n",
       " 27077885006: ['003107116'],\n",
       " 27077886031: ['000120987'],\n",
       " 27077887015: ['071018905', '071019006'],\n",
       " 27077887019: ['073733326', '072571977'],\n",
       " 27077887020: ['000017973', '002221918', '000012807'],\n",
       " 27077890001: ['002071037'],\n",
       " 27077891008: ['073601020', '073601047'],\n",
       " 27077891012: ['004143523',\n",
       "  '000246158',\n",
       "  '003341844',\n",
       "  '072380853',\n",
       "  '072676655'],\n",
       " 27077891016: ['003107116'],\n",
       " 27077891018: ['000090514'],\n",
       " 27077891020: ['002071037'],\n",
       " 27077891022: ['003107116'],\n",
       " 27077891025: ['000017973',\n",
       "  '073046590',\n",
       "  '072515392',\n",
       "  '002017865',\n",
       "  '000003344'],\n",
       " 27077892004: ['003140954', '001264974'],\n",
       " 27077893003: ['001342541'],\n",
       " 27077898005: ['073784915'],\n",
       " 27077898017: ['003187985'],\n",
       " 27077898018: ['073668478'],\n",
       " 27077898031: ['000012696', '074103547'],\n",
       " 27077898034: ['003282384',\n",
       "  '072702052',\n",
       "  '072590394',\n",
       "  '073046590',\n",
       "  '071123172',\n",
       "  '071123199',\n",
       "  '001878298',\n",
       "  '003341844',\n",
       "  '073606596'],\n",
       " 27077898043: ['071123164', '003107116', '072590467'],\n",
       " 27077898058: ['071123857'],\n",
       " 27077898061: ['074201387', '000120987', '001264966'],\n",
       " 27077898063: ['002071843',\n",
       "  '072679085',\n",
       "  '070984840',\n",
       "  '071123172',\n",
       "  '073830984',\n",
       "  '073601012',\n",
       "  '073601063',\n",
       "  '073805947',\n",
       "  '073601004',\n",
       "  '000013188'],\n",
       " 27077898064: ['000120987', '000002968', '000003522', '000003247'],\n",
       " 27077898066: ['003282384', '000120987', '000003247'],\n",
       " 27077898067: ['002896400',\n",
       "  '073056529',\n",
       "  '003107116',\n",
       "  '004711688',\n",
       "  '004711599',\n",
       "  '001342541',\n",
       "  '072118571',\n",
       "  '073619035'],\n",
       " 27077898073: ['073783692', '000003522', '000003247'],\n",
       " 27077899015: ['003341844'],\n",
       " 27077900002: ['002071037'],\n",
       " 27077900007: ['071003096', '072515392'],\n",
       " 27077901003: ['073936782', '073843687', '004115279'],\n",
       " 27077901008: ['002071037'],\n",
       " 27077901009: ['002071037'],\n",
       " 27077901010: ['072679050', '001952595'],\n",
       " 27077901018: ['072527846'],\n",
       " 27077901019: ['073936774', '073843687', '002071037'],\n",
       " 27077902006: ['002071037'],\n",
       " 27077902014: ['072527811'],\n",
       " 27077902018: ['002071037'],\n",
       " 27077902019: ['003187985', '002071037'],\n",
       " 27077902022: ['002533502'],\n",
       " 27077902023: ['073936782'],\n",
       " 27077902025: ['002071037'],\n",
       " 27077903002: ['002071037'],\n",
       " 27077903008: ['000003247'],\n",
       " 27077903010: ['002071037', '072607335'],\n",
       " 27077903013: ['002533502'],\n",
       " 27077903016: ['071459057'],\n",
       " 27077903026: ['000003247'],\n",
       " 27077903033: ['002071037'],\n",
       " 27077903034: ['004552210', '073784915'],\n",
       " 27077903040: ['073784915'],\n",
       " 27077904002: ['002071037'],\n",
       " 27077904010: ['002071037'],\n",
       " 27077904012: ['002071037'],\n",
       " 27077905004: ['074154389'],\n",
       " 27077905008: ['002071037'],\n",
       " 27077905010: ['002071037', '072607335', '073735914'],\n",
       " 27077905015: ['002071037'],\n",
       " 27077905017: ['000125695', '000125946'],\n",
       " 27077905019: ['072486503',\n",
       "  '073056456',\n",
       "  '072082267',\n",
       "  '074083082',\n",
       "  '000006572'],\n",
       " 27077905021: ['072515392'],\n",
       " 27077905022: ['000120987'],\n",
       " 27077905028: ['072238046', '072607335', '002942070'],\n",
       " 27077905031: ['000016268', '071003096'],\n",
       " 27077905032: ['003107116'],\n",
       " 27077905034: ['072554452'],\n",
       " 27077905035: ['003140954',\n",
       "  '001264974',\n",
       "  '001264966',\n",
       "  '071138250',\n",
       "  '072748796',\n",
       "  '001342541',\n",
       "  '003341844',\n",
       "  '070019967',\n",
       "  '071459057'],\n",
       " 27077905038: ['000125733'],\n",
       " 27077905041: ['000013188', '003257533', '003096548'],\n",
       " 27077906002: ['002071037'],\n",
       " 27077906003: ['003187985', '002071037', '000003018'],\n",
       " 27077906005: ['002071037'],\n",
       " 27077906012: ['073848220', '002071037', '003082474'],\n",
       " 27077906017: ['002071037'],\n",
       " 27077906022: ['002071037'],\n",
       " 27077907010: ['002071037'],\n",
       " 27077907012: ['002071037'],\n",
       " 27077907013: ['003187985'],\n",
       " 27077907018: ['002071037', '072607335'],\n",
       " 27077907020: ['002071037'],\n",
       " 27077907026: ['072607335'],\n",
       " 27077907035: ['002071037'],\n",
       " 27077908007: ['073639060'],\n",
       " 27077908012: ['072527846', '071459049'],\n",
       " 27077908016: ['004115279'],\n",
       " 27077908019: ['000016268', '072607335'],\n",
       " 27077908020: ['072238070'],\n",
       " 27077908026: ['002071037'],\n",
       " 27077908028: ['002071738', '071003096'],\n",
       " 27077908051: ['000002968', '000006580'],\n",
       " 27077909003: ['073846104'],\n",
       " 27077909004: ['002071037'],\n",
       " 27077909010: ['002071037'],\n",
       " 27077909013: ['002071037'],\n",
       " 27077910002: ['074298682', '001494074'],\n",
       " 27077910007: ['073936782', '073847755', '070594252'],\n",
       " 27077910009: ['073669830'],\n",
       " 27077910010: ['001494066'],\n",
       " 27077911002: ['002071037'],\n",
       " 27077911006: ['002071037'],\n",
       " 27077911010: ['070594252'],\n",
       " 27077911012: ['073805947'],\n",
       " 27077911013: ['004410025', '001048228'],\n",
       " 27077912001: ['002071037'],\n",
       " 27077912009: ['002071290'],\n",
       " 27077912011: ['073805955'],\n",
       " 27077913014: ['073967467', '073967475'],\n",
       " 27077914013: ['002071037'],\n",
       " 27077914022: ['000511773', '074201387', '003107116', '001342533'],\n",
       " 27077915002: ['003187985'],\n",
       " 27077915003: ['002071037'],\n",
       " 27077915010: ['004778375', '074201395', '071459057'],\n",
       " 27077916002: ['004410106', '072515392'],\n",
       " 27077916003: ['003187985'],\n",
       " 27077916008: ['073256307'],\n",
       " 27077917006: ['072701668', '073967335'],\n",
       " 27077917010: ['073847755', '002071037'],\n",
       " 27077917011: ['002071037'],\n",
       " 27077918017: ['003107116', '004679393'],\n",
       " 27077918032: ['000016462', '074306510'],\n",
       " 27077918037: ['000125733',\n",
       "  '073798584',\n",
       "  '072527846',\n",
       "  '073967467',\n",
       "  '073796360',\n",
       "  '072298693',\n",
       "  '073601063',\n",
       "  '000120987'],\n",
       " 27077918038: ['004552210', '072544651'],\n",
       " 27077918043: ['000512346'],\n",
       " 27077918046: ['002071843',\n",
       "  '071123164',\n",
       "  '071123148',\n",
       "  '004410025',\n",
       "  '073809888',\n",
       "  '003107116'],\n",
       " 27077918047: ['072852887'],\n",
       " 27077918050: ['002370212'],\n",
       " 27077918051: ['071123253', '001264966', '001342525'],\n",
       " 27077918054: ['000016268',\n",
       "  '072308257',\n",
       "  '072308192',\n",
       "  '072308230',\n",
       "  '072308168',\n",
       "  '072308222',\n",
       "  '072308281'],\n",
       " 27077918056: ['003107116',\n",
       "  '004058097',\n",
       "  '001595245',\n",
       "  '001595288',\n",
       "  '003210499',\n",
       "  '002071673',\n",
       "  '002071738',\n",
       "  '071003096',\n",
       "  '071123199',\n",
       "  '071123164',\n",
       "  '073733245',\n",
       "  '073733253',\n",
       "  '073733261',\n",
       "  '073733288',\n",
       "  '073733296',\n",
       "  '073733318'],\n",
       " 27077918059: ['003107116'],\n",
       " 27077918060: ['000511773',\n",
       "  '073089834',\n",
       "  '074306510',\n",
       "  '070941149',\n",
       "  '000003247'],\n",
       " 27077919015: ['000003344'],\n",
       " 27077919017: ['002071290', '002071843'],\n",
       " 27077919032: ['002017865', '003107116'],\n",
       " 27077919034: ['000120987'],\n",
       " 27077919037: ['072910585', '004058119', '000013188'],\n",
       " 27077919038: ['072998016',\n",
       "  '073783692',\n",
       "  '073783722',\n",
       "  '002586185',\n",
       "  '071249729',\n",
       "  '071249885',\n",
       "  '071459561',\n",
       "  '073157570'],\n",
       " 27077919039: ['003187985'],\n",
       " 27077919044: ['002071290',\n",
       "  '002071738',\n",
       "  '071146474',\n",
       "  '000003247',\n",
       "  '071073574'],\n",
       " 27077919045: ['001283839',\n",
       "  '071886559',\n",
       "  '073893595',\n",
       "  '073601047',\n",
       "  '000012637',\n",
       "  '001044613',\n",
       "  '003429806',\n",
       "  '000003247',\n",
       "  '002687399',\n",
       "  '071453954'],\n",
       " 27077919051: ['071003096',\n",
       "  '071886559',\n",
       "  '071886664',\n",
       "  '071886672',\n",
       "  '071888136',\n",
       "  '073317039',\n",
       "  '073790028',\n",
       "  '073601063',\n",
       "  '002364654'],\n",
       " 27077919055: ['001625772'],\n",
       " 27077919058: ['003282384',\n",
       "  '072554517',\n",
       "  '004410025',\n",
       "  '072607335',\n",
       "  '000003492',\n",
       "  '071459561'],\n",
       " 27077919060: ['000511773', '072748796'],\n",
       " 27077919061: ['073843539', '073639397'],\n",
       " 27077919062: ['002071037'],\n",
       " 27077919078: ['002071037', '002370204'],\n",
       " 27077919079: ['001264974', '000248363'],\n",
       " 27077919082: ['000125733',\n",
       "  '004778375',\n",
       "  '004058097',\n",
       "  '000003522',\n",
       "  '000006610'],\n",
       " 27077919083: ['070856206'],\n",
       " 27077919085: ['071018905', '071019006', '074306510'],\n",
       " 27077919086: ['070594252', '003769097'],\n",
       " 27077919089: ['000016268',\n",
       "  '073601012',\n",
       "  '073601004',\n",
       "  '002533502',\n",
       "  '004143523',\n",
       "  '002943247',\n",
       "  '000003247',\n",
       "  '000006637'],\n",
       " 27077919090: ['073046582', '071073574'],\n",
       " 27077919101: ['000125733',\n",
       "  '000125946',\n",
       "  '071123253',\n",
       "  '000709174',\n",
       "  '000709344',\n",
       "  '000709336',\n",
       "  '000709220',\n",
       "  '073056529',\n",
       "  '000120987',\n",
       "  '001264974',\n",
       "  '001264966',\n",
       "  '072748737',\n",
       "  '004711599',\n",
       "  '001342533',\n",
       "  '073606596'],\n",
       " 27077919102: ['071123261',\n",
       "  '073157589',\n",
       "  '073157570',\n",
       "  '072527846',\n",
       "  '000016462',\n",
       "  '003925749',\n",
       "  '073784915',\n",
       "  '071309268',\n",
       "  '000012807'],\n",
       " 27077919105: ['004797825',\n",
       "  '071146342',\n",
       "  '072527846',\n",
       "  '000120987',\n",
       "  '072380853'],\n",
       " 27077920003: ['002071037'],\n",
       " 27077920011: ['074157663', '002071037'],\n",
       " 27077921005: ['072590394'],\n",
       " 27077921013: ['002024128'],\n",
       " 27077921033: ['002071037'],\n",
       " 27077922009: ['000512346', '000511773'],\n",
       " 27077922016: ['002071037'],\n",
       " 27077923001: ['071003096', '073601012'],\n",
       " 27077924003: ['070856206'],\n",
       " 27077924004: ['000418692', '000120987'],\n",
       " 27077925003: ['002071290', '002071738', '002071037'],\n",
       " 27077925004: ['002071037'],\n",
       " 27077925009: ['002071037', '072998008'],\n",
       " 27077926001: ['072515414'],\n",
       " 27077926006: ['003187985'],\n",
       " 27077926027: ['002712997', '002713098', '001802852', '001802844'],\n",
       " 27077926030: ['073848220', '003187985', '002071037'],\n",
       " 27077926033: ['002071037'],\n",
       " 27077926034: ['072701625', '072544651'],\n",
       " 27077926035: ['073805955', '073601004'],\n",
       " 27077931016: ['073752584'],\n",
       " 27077932008: ['002370212'],\n",
       " 27077932009: ['073843687'],\n",
       " 27077932016: ['002071037'],\n",
       " 27077932018: ['003107116'],\n",
       " 27077932019: ['002071037'],\n",
       " 27077932023: ['071146474', '001952595'],\n",
       " 27077932028: ['000017973', '000017590', '000016268', '001675532'],\n",
       " 27077932029: ['003107116', '072380853'],\n",
       " 27077932035: ['003107116'],\n",
       " 27077932046: ['003107116'],\n",
       " 27077932053: ['074154397'],\n",
       " 27077932055: ['002071037', '072515392', '000006572'],\n",
       " 27077932058: ['073846015', '002071037'],\n",
       " 27077932059: ['003187985', '002071037'],\n",
       " 27077932062: ['072118571'],\n",
       " 27077932074: ['002755769'],\n",
       " 27077933006: ['003282384'],\n",
       " 27077933007: ['071424261'],\n",
       " 27077933016: ['002071037'],\n",
       " 27077933019: ['074295926'],\n",
       " 27077933023: ['002071037'],\n",
       " 27077933034: ['002071037'],\n",
       " 27077933038: ['073936782', '071424261'],\n",
       " 27077933040: ['002071037'],\n",
       " 27077933048: ['073733245',\n",
       "  '072954663',\n",
       "  '000003247',\n",
       "  '072572000',\n",
       "  '002065770'],\n",
       " 27077933059: ['072527811', '000120987'],\n",
       " 27077933062: ['074201379', '074201387'],\n",
       " 27077933064: ['003474690', '003474682'],\n",
       " 27077933066: ['002071037', '003342166'],\n",
       " 27077933069: ['000003247'],\n",
       " 27077933070: ['000012807', '000016381', '000016462', '073601063'],\n",
       " 27077933076: ['000125733', '002943247'],\n",
       " 27077933080: ['000125695',\n",
       "  '000126020',\n",
       "  '073046590',\n",
       "  '073967440',\n",
       "  '071138730',\n",
       "  '001941135',\n",
       "  '070856214',\n",
       "  '000003492',\n",
       "  '000003247',\n",
       "  '002221918',\n",
       "  '070019967',\n",
       "  '072380853',\n",
       "  '072486384',\n",
       "  '073719951'],\n",
       " 27077933081: ['073967440'],\n",
       " 27077933084: ['073830968', '073815543', '073777374'],\n",
       " 27077933087: ['002071290', '002071673', '002071738', '002071843'],\n",
       " 27077933095: ['000017973'],\n",
       " 27077933098: ['073805947'],\n",
       " 27077933099: ['072571977', '072571993'],\n",
       " 27077933105: ['003107116', '072748796'],\n",
       " 27077933106: ['073696277',\n",
       "  '071123253',\n",
       "  '072554452',\n",
       "  '001941135',\n",
       "  '070856206',\n",
       "  '003341844'],\n",
       " 27077933108: ['072998024', '073805955'],\n",
       " 27077933111: ['000017701',\n",
       "  '071018905',\n",
       "  '071019006',\n",
       "  '072515392',\n",
       "  '074201387',\n",
       "  '074080806',\n",
       "  '074154370',\n",
       "  '000003522',\n",
       "  '004013379'],\n",
       " 27077933114: ['000125946', '000198811', '000017701'],\n",
       " 27077933115: ['003107116', '001264974', '000006572'],\n",
       " 27077934006: ['073848220'],\n",
       " 27077934010: ['073601063'],\n",
       " 27077934015: ['073815667'],\n",
       " 27077934028: ['002071037'],\n",
       " 27077934033: ['073315729', '072693827'],\n",
       " 27077934053: ['073848220'],\n",
       " 27077934059: ['003187985'],\n",
       " 27077934063: ['002071738', '002071037'],\n",
       " 27077934065: ['002071037', '072872314'],\n",
       " 27077934068: ['072607335', '073089834'],\n",
       " 27077934069: ['002071037'],\n",
       " 27077934070: ['002071037'],\n",
       " 27077934072: ['002071037'],\n",
       " 27077934074: ['002071037'],\n",
       " 27077934076: ['002071037'],\n",
       " 27077934077: ['002071037'],\n",
       " 27077934078: ['002071037'],\n",
       " 27077934079: ['002071037'],\n",
       " 27077935006: ['002071037'],\n",
       " 27077935010: ['002071037'],\n",
       " 27077935014: ['002071037'],\n",
       " 27077936012: ['074190695'],\n",
       " 27077936016: ['002071037'],\n",
       " 27077936017: ['002071037'],\n",
       " 27077936019: ['074201379'],\n",
       " 27077936021: ['071123857', '003429806'],\n",
       " 27077936025: ['000125733', '003282384', '001941135'],\n",
       " 27077936026: ['001494066'],\n",
       " 27077936028: ['072238070'],\n",
       " 27077936029: ['071003096', '000012637', '000003522'],\n",
       " 27077936030: ['070594252'],\n",
       " 27077936031: ['003341844', '071245820'],\n",
       " 27077936033: ['003107116'],\n",
       " 27077936036: ['002071037'],\n",
       " 27077936043: ['073733245', '073733253'],\n",
       " 27077936049: ['003187985', '070276641', '004924894'],\n",
       " 27077936055: ['003187985'],\n",
       " 27077937007: ['002071290', '002071738'],\n",
       " 27077937012: ['003187985'],\n",
       " 27077937013: ['003187985'],\n",
       " 27077937016: ['073468932'],\n",
       " 27077937017: ['003107116'],\n",
       " 27077937020: ['002071037', '073056529', '074190660'],\n",
       " 27077937024: ['000003522'],\n",
       " 27077937025: ['002071037'],\n",
       " 27077937027: ['003187985'],\n",
       " 27077937030: ['002071843', '070984840'],\n",
       " 27077937035: ['001686569'],\n",
       " 27077937039: ['002071037'],\n",
       " 27077938004: ['002071037'],\n",
       " 27077938011: ['002071037'],\n",
       " 27077938012: ['002071037', '072515414', '073089834'],\n",
       " 27077938015: ['002071037'],\n",
       " 27077938016: ['003282228', '073668478'],\n",
       " 27077939008: ['002071037', '070594252'],\n",
       " 27077939009: ['002071037'],\n",
       " 27077939010: ['002071037', '074306510'],\n",
       " 27077939015: ['002071037', '071083936'],\n",
       " 27077939016: ['002071037'],\n",
       " 27077939020: ['004123115'],\n",
       " 27077939024: ['002071037'],\n",
       " 27077939032: ['002071738'],\n",
       " 27077939038: ['000003344'],\n",
       " 27077939041: ['002071037'],\n",
       " 27077939045: ['002071037'],\n",
       " 27077939048: ['072607335'],\n",
       " 27077939050: ['001686437'],\n",
       " 27077939052: ['003107116'],\n",
       " 27077940003: ['073936782', '073846015'],\n",
       " 27077940007: ['001466151'],\n",
       " 27077940010: ['004410025'],\n",
       " 27077940011: ['070984840'],\n",
       " 27077940020: ['003187985'],\n",
       " 27077940021: ['002071290', '002071843'],\n",
       " 27077940022: ['072554452', '003107256'],\n",
       " 27077940028: ['000709174',\n",
       "  '000709344',\n",
       "  '000709336',\n",
       "  '000709220',\n",
       "  '000513016'],\n",
       " 27077941004: ['002071037', '000125733', '000511773'],\n",
       " 27077941006: ['002071037'],\n",
       " 27077941010: ['002071037'],\n",
       " 27077941016: ['002071037'],\n",
       " 27077942004: ['002071037'],\n",
       " 27077942007: ['002071037'],\n",
       " 27077942008: ['002071037'],\n",
       " 27077942011: ['002071037'],\n",
       " 27077942020: ['072527811', '071018905', '000120987', '003107116'],\n",
       " 27077942027: ['072380853'],\n",
       " 27077942028: ['002071037'],\n",
       " 27077942030: ['073784915'],\n",
       " 27077943002: ['003107116'],\n",
       " 27077943006: ['002071037', '070594252', '002533502'],\n",
       " 27077943008: ['074154370'],\n",
       " 27077943009: ['002533502', '003341844'],\n",
       " 27077944005: ['003187985', '001048228'],\n",
       " 27077944010: ['003187985'],\n",
       " 27077944015: ['074157663', '002071037'],\n",
       " 27077944024: ['073790001', '000120987', '073784915'],\n",
       " 27077944029: ['072527811'],\n",
       " 27077944034: ['074201379'],\n",
       " 27077944036: ['002071037', '000003522'],\n",
       " 27077944038: ['003107116'],\n",
       " 27077944044: ['003187985', '002071037', '071003096'],\n",
       " 27077944046: ['072527811', '073668478'],\n",
       " 27077945002: ['003107116'],\n",
       " 27077945008: ['074306510'],\n",
       " 27077945009: ['073843687'],\n",
       " 27077945010: ['003107116'],\n",
       " 27077945013: ['002071037'],\n",
       " 27077945016: ['003107116'],\n",
       " 27077946002: ['000513016'],\n",
       " 27077946009: ['000418692', '074080075'],\n",
       " 27077947015: ['001494066'],\n",
       " 27077947016: ['002071290'],\n",
       " 27077947021: ['003107116'],\n",
       " 27077947026: ['002071037'],\n",
       " 27077947027: ['002071037'],\n",
       " 27077948002: ['002071037'],\n",
       " 27077948015: ['002071037'],\n",
       " 27077948021: ['000017590', '072515414', '000003247'],\n",
       " 27077948028: ['003187985'],\n",
       " 27077948032: ['002071037', '071003096'],\n",
       " 27077948037: ['002071037'],\n",
       " 27077949001: ['002071037'],\n",
       " 27077949009: ['072308265'],\n",
       " 27077949011: ['001625772'],\n",
       " 27077949014: ['003187985'],\n",
       " 27077949028: ['073805971', '073809802'],\n",
       " 27077949039: ['074250523', '074250671', '074250515'],\n",
       " 27077949046: ['002071037'],\n",
       " 27077950010: ['002071037'],\n",
       " 27077950014: ['004058097'],\n",
       " 27077950017: ['002071037'],\n",
       " 27077950020: ['072515414'],\n",
       " 27077950023: ['002071037'],\n",
       " 27077950025: ['000003247'],\n",
       " 27077950026: ['002071037'],\n",
       " 27077950027: ['002071037'],\n",
       " 27077950032: ['002071037'],\n",
       " 27077950042: ['002071037'],\n",
       " 27077950043: ['003107116', '001494066', '071245820'],\n",
       " 27077950044: ['002071037', '072515414', '000003247'],\n",
       " 27077950056: ['003187985', '002071037'],\n",
       " 27077950059: ['002071037'],\n",
       " 27077950065: ['002071037'],\n",
       " 27077950067: ['002071037', '000709220', '000120987', '074061216'],\n",
       " 27077950075: ['002755769', '000017426', '000006572'],\n",
       " 27077950076: ['002071037'],\n",
       " 27077950077: ['073967335'],\n",
       " 27077951001: ['004115279'],\n",
       " 27077951002: ['074201379'],\n",
       " 27077951003: ['000003247'],\n",
       " 27077951011: ['002071037', '073735914'],\n",
       " 27077951013: ['002071290'],\n",
       " 27077951017: ['002071037'],\n",
       " 27077951026: ['072527846'],\n",
       " 27077951033: ['003107116'],\n",
       " 27077951036: ['003187985'],\n",
       " 27077951042: ['003107116'],\n",
       " 27077951045: ['002071738', '003187985'],\n",
       " 27077951047: ['002071037'],\n",
       " 27077951048: ['002071037'],\n",
       " 27077951049: ['000126020', '000919713', '000003247'],\n",
       " 27077951051: ['073830984'],\n",
       " 27077951057: ['002071290', '002071738', '002071843', '003187985'],\n",
       " 27077951066: ['003107116'],\n",
       " 27077951067: ['003187985'],\n",
       " 27077952005: ['003107116'],\n",
       " 27077952006: ['003107116'],\n",
       " 27077952012: ['001494066'],\n",
       " 27077952017: ['003187985'],\n",
       " 27077952027: ['071123253', '074190660', '074190695', '003107116'],\n",
       " 27077953014: ['003107116'],\n",
       " 27077953022: ['003107116'],\n",
       " 27077953030: ['002071037', '000006572', '074061216'],\n",
       " 27077954008: ['071245820'],\n",
       " 27077954010: ['002071037'],\n",
       " 27077954013: ['002071037'],\n",
       " 27077954019: ['003107116'],\n",
       " 27077954022: ['074201387', '073784915'],\n",
       " 27077954023: ['073601063', '072380853'],\n",
       " 27077954026: ['002071037'],\n",
       " 27077954032: ['002071037', '070984840', '072486384'],\n",
       " 27077954035: ['004058097'],\n",
       " 27077954037: ['003187985', '002071037'],\n",
       " 27077954041: ['003187985'],\n",
       " 27077954050: ['002071037', '003107116'],\n",
       " 27077954053: ['002071037'],\n",
       " 27077954056: ['002071037'],\n",
       " 27077954063: ['003187985', '002071037'],\n",
       " 27077954064: ['002071037'],\n",
       " 27077954065: ['003187985', '002071037'],\n",
       " 27077954068: ['073848182', '002071037', '072515392', '003107116'],\n",
       " 27077955002: ['002071037'],\n",
       " 27077955003: ['002071037'],\n",
       " 27077955008: ['002071037'],\n",
       " 27077956006: ['000003247'],\n",
       " 27077965005: ['002071037', '071085017'],\n",
       " 27077965006: ['071123253',\n",
       "  '072702052',\n",
       "  '000017973',\n",
       "  '071123911',\n",
       "  '003107116',\n",
       "  '002943247',\n",
       "  '000003247'],\n",
       " 27077965007: ['073848220',\n",
       "  '002071037',\n",
       "  '071084991',\n",
       "  '072607335',\n",
       "  '073784915',\n",
       "  '001048228'],\n",
       " 27077965008: ['003107116'],\n",
       " 27077965012: ['073046582',\n",
       "  '072308354',\n",
       "  '003107116',\n",
       "  '072748796',\n",
       "  '073784915',\n",
       "  '000003018',\n",
       "  '002024128'],\n",
       " 27077965018: ['002071037'],\n",
       " 27077965032: ['003187985', '074154389'],\n",
       " 27077965033: ['074310119'],\n",
       " 27077965038: ['074306510'],\n",
       " 27077965041: ['001941135', '074201387', '074306618', '003107116'],\n",
       " 27077965042: ['002071037'],\n",
       " 27077965043: ['073830976',\n",
       "  '002207435',\n",
       "  '071453954',\n",
       "  '003012166',\n",
       "  '070630941'],\n",
       " 27077965045: ['073830976'],\n",
       " 27077965048: ['001258214', '002364379'],\n",
       " 27077965052: ['003107116'],\n",
       " 27077965053: ['002071037'],\n",
       " 27077965072: ['002071037'],\n",
       " 27077965080: ['073798592'],\n",
       " 27077965088: ['001312294'],\n",
       " 27077965093: ['002071037'],\n",
       " 27077965104: ['003187985'],\n",
       " 27077965114: ['002071037'],\n",
       " 27077965115: ['002071037'],\n",
       " 27077965134: ['001686437',\n",
       "  '071123911',\n",
       "  '073735914',\n",
       "  '002943247',\n",
       "  '073777358'],\n",
       " 27077965136: ['002071037'],\n",
       " 27077965137: ['002071037'],\n",
       " 27077965151: ['002071843', '071453954'],\n",
       " 27077965155: ['071123253',\n",
       "  '000513016',\n",
       "  '073752592',\n",
       "  '073973157',\n",
       "  '003107116',\n",
       "  '003107256',\n",
       "  '001264974',\n",
       "  '001264966',\n",
       "  '004143523',\n",
       "  '004638255',\n",
       "  '071123288',\n",
       "  '071427627',\n",
       "  '072748796',\n",
       "  '072748737',\n",
       "  '004058097',\n",
       "  '072130709',\n",
       "  '004711688',\n",
       "  '004711599',\n",
       "  '002687399',\n",
       "  '003341844',\n",
       "  '072118598',\n",
       "  '072118571',\n",
       "  '072380853',\n",
       "  '072486384',\n",
       "  '073719951',\n",
       "  '073719978'],\n",
       " 27077965159: ['002071843', '002071037', '004410025'],\n",
       " 27077965161: ['002071037', '004410130', '000003247'],\n",
       " 27077965166: ['002071037',\n",
       "  '001525808',\n",
       "  '000120987',\n",
       "  '003012166',\n",
       "  '002749319'],\n",
       " 27077965167: ['074103547'],\n",
       " 27077965169: ['073967335', '073967432', '000511773'],\n",
       " 27077966007: ['000709344'],\n",
       " 27077966008: ['003187985'],\n",
       " 27077966014: ['003187985'],\n",
       " 27077966016: ['073256307'],\n",
       " 27077966017: ['002533502'],\n",
       " 27077966018: ['002071037', '001494066', '000003247'],\n",
       " 27077966019: ['002017865'],\n",
       " 27077966021: ['002071037'],\n",
       " 27077966022: ['002071037'],\n",
       " 27077966024: ['074190695'],\n",
       " 27077966032: ['002071037'],\n",
       " 27077966034: ['074157663', '003187985'],\n",
       " 27077966035: ['003187985'],\n",
       " 27077966036: ['073784915'],\n",
       " 27077966039: ['002071037'],\n",
       " 27077966044: ['002071037'],\n",
       " 27077966050: ['003187985'],\n",
       " 27077966051: ['002071037',\n",
       "  '072527846',\n",
       "  '001941135',\n",
       "  '071019006',\n",
       "  '000120987'],\n",
       " 27077966054: ['002071037'],\n",
       " 27077966055: ['073784915'],\n",
       " 27077966056: ['072527846'],\n",
       " 27077966059: ['073642924', '003341844', '004679393'],\n",
       " 27077966062: ['071123857'],\n",
       " 27077966065: ['002071037'],\n",
       " 27077966075: ['003187985'],\n",
       " 27077967002: ['003107116'],\n",
       " 27077967005: ['073601047'],\n",
       " 27077967008: ['002071037'],\n",
       " 27077967009: ['074327771'],\n",
       " 27077967010: ['003314790', '002071290', '072486384'],\n",
       " 27077967011: ['002071037', '072748737'],\n",
       " 27077967019: ['003187985', '002277883', '000003247'],\n",
       " 27077967027: ['002071037'],\n",
       " 27077967035: ['002071037', '003107116'],\n",
       " 27077967037: ['003107116', '073784915'],\n",
       " 27077967045: ['003107116'],\n",
       " 27077967050: ['003107116'],\n",
       " 27077967055: ['002071037', '070594252'],\n",
       " 27077967056: ['073846015', '002071037'],\n",
       " 27077967065: ['000125733', '074250523', '074250558', '074250671'],\n",
       " 27077967068: ['071123172', '071123180', '002749270'],\n",
       " 27077968002: ['003107116'],\n",
       " 27077968004: ['001347667', '001675508'],\n",
       " 27077968008: ['004741773'],\n",
       " 27077968009: ['072527811'],\n",
       " 27077968015: ['000418684', '000418692', '001494066', '001494074'],\n",
       " 27077968019: ['002071037', '070984840', '074306510'],\n",
       " 27077968023: ['000003018'],\n",
       " 27077968027: ['002071037'],\n",
       " 27077968028: ['000016268', '073790001', '072486384'],\n",
       " 27077968029: ['073790001', '074201379'],\n",
       " 27077968030: ['002071037'],\n",
       " 27077968032: ['074157663'],\n",
       " 27077968033: ['074157663'],\n",
       " 27077968034: ['000125733', '001905554', '003107116', '073468932'],\n",
       " 27077968036: ['003107116', '070455953'],\n",
       " 27077968041: ['073843687',\n",
       "  '070984735',\n",
       "  '071003096',\n",
       "  '071123075',\n",
       "  '071123083',\n",
       "  '071123067',\n",
       "  '004410025',\n",
       "  '000013609',\n",
       "  '000006572',\n",
       "  '000006610'],\n",
       " 27077968043: ['003341828'],\n",
       " 27077968046: ['071085017', '074306537', '073601020', '073601047'],\n",
       " 27077968053: ['004797825'],\n",
       " 27077968054: ['072572019'],\n",
       " 27077968056: ['002071037'],\n",
       " 27077968065: ['073790028'],\n",
       " 27077968067: ['074306510'],\n",
       " 27077968070: ['074309587'],\n",
       " 27077968073: ['074309587'],\n",
       " 27077968076: ['002533502', '000248363', '071245820'],\n",
       " 27077968078: ['000016268', '072308346', '072308214', '072308230'],\n",
       " 27077968079: ['002353059', '004115279'],\n",
       " 27077968080: ['003107116'],\n",
       " 27077968082: ['074157663'],\n",
       " 27077968083: ['001494066'],\n",
       " 27077968096: ['074306510'],\n",
       " 27077968103: ['000120987'],\n",
       " 27077968108: ['072527811'],\n",
       " 27077968110: ['072249056', '072249072'],\n",
       " 27077968115: ['002071037',\n",
       "  '071376100',\n",
       "  '071376119',\n",
       "  '071376127',\n",
       "  '000013005'],\n",
       " 27077968117: ['072527811'],\n",
       " 27077968118: ['002071037'],\n",
       " 27077968123: ['072748796', '074079336', '003341828', '072676655'],\n",
       " 27077968128: ['001076302'],\n",
       " 27077968131: ['002533502'],\n",
       " 27077968145: ['003082474'],\n",
       " 27077968166: ['002071037'],\n",
       " 27077968167: ['002071037', '071245820'],\n",
       " 27077968176: ['073601063'],\n",
       " 27077969013: ['002071037'],\n",
       " 27077969017: ['003107116'],\n",
       " 27077969018: ['002071037', '071003096', '072607335'],\n",
       " 27077969024: ['003187985', '000125423', '004778375'],\n",
       " 27077969026: ['071017321'],\n",
       " 27077969028: ['072872314'],\n",
       " 27077969029: ['003107116'],\n",
       " 27077969039: ['002071037'],\n",
       " 27077969046: ['002071037', '000003247'],\n",
       " 27077969047: ['000125733', '072607335', '000003247'],\n",
       " 27077969052: ['072298693'],\n",
       " 27077969055: ['002071037'],\n",
       " 27077969056: ['074190660'],\n",
       " 27077969059: ['002071037'],\n",
       " 27077969072: ['002071037', '070594252'],\n",
       " 27077969080: ['000125733', '072590378', '000511773', '003001601'],\n",
       " 27077970004: ['002071037'],\n",
       " 27077970006: ['002071290', '002071738'],\n",
       " 27077970018: ['002071037'],\n",
       " 27077970021: ['072527846'],\n",
       " 27077970022: ['002071037', '000013323'],\n",
       " 27077970025: ['070856206'],\n",
       " 27077970027: ['073848069', '004778375'],\n",
       " 27077970030: ['003107116'],\n",
       " 27077970032: ['073848220', '002071037'],\n",
       " 27077970033: ['003096521'],\n",
       " 27077970038: ['000709336', '004123131'],\n",
       " 27077970043: ['003485978',\n",
       "  '003485951',\n",
       "  '073893579',\n",
       "  '073893587',\n",
       "  '000003247',\n",
       "  '000006572'],\n",
       " 27077970048: ['000003247', '003011143'],\n",
       " 27077970050: ['002071037'],\n",
       " 27077970055: ['000003247'],\n",
       " 27077970057: ['072486503',\n",
       "  '072486481',\n",
       "  '073056421',\n",
       "  '073056456',\n",
       "  '000511773'],\n",
       " 27077970059: ['002071037', '073668478', '001494066'],\n",
       " 27077970065: ['002071037', '074298682', '000198811'],\n",
       " 27077970066: ['074298682'],\n",
       " 27077970067: ['072238070'],\n",
       " 27077970069: ['002071037', '071085017', '074154370'],\n",
       " 27077970070: ['002071037'],\n",
       " 27077970072: ['000003247'],\n",
       " 27077970081: ['002071037'],\n",
       " 27077970082: ['003187985'],\n",
       " 27077970083: ['002071843', '000513016'],\n",
       " 27077970084: ['072082267', '074083090'],\n",
       " 27077970093: ['002071037'],\n",
       " 27077970095: ['002071037'],\n",
       " 27077970098: ['004410025'],\n",
       " 27077970110: ['073848190', '072486384'],\n",
       " 27077970120: ['002071738'],\n",
       " 27077970126: ['073809888'],\n",
       " 27077971003: ['072748737'],\n",
       " 27077971004: ['002071290'],\n",
       " 27077971008: ['072238046',\n",
       "  '072238054',\n",
       "  '072607335',\n",
       "  '070856206',\n",
       "  '001264974',\n",
       "  '000003247',\n",
       "  '072486384'],\n",
       " 27077971012: ['003187985'],\n",
       " 27077971015: ['074157663',\n",
       "  '000511773',\n",
       "  '070258279',\n",
       "  '003107116',\n",
       "  '000003247',\n",
       "  '003341844'],\n",
       " 27077971017: ['002071037'],\n",
       " 27077971025: ['002071037',\n",
       "  '000017426',\n",
       "  '072607335',\n",
       "  '072515414',\n",
       "  '000919713',\n",
       "  '000003247'],\n",
       " 27077971029: ['002071037'],\n",
       " 27077971031: ['074306510'],\n",
       " 27077971032: ['002071037', '072607335', '072515414'],\n",
       " 27077971033: ['002071037'],\n",
       " 27077971034: ['002071037', '073733245', '073733261', '000012807'],\n",
       " 27077971037: ['074201379'],\n",
       " 27077971040: ['073089834'],\n",
       " 27077971041: ['002071290', '002071843', '003187985', '000003247'],\n",
       " 27077971044: ['003107116'],\n",
       " 27077971055: ['071123261',\n",
       "  '071123253',\n",
       "  '074190695',\n",
       "  '072998024',\n",
       "  '073733245',\n",
       "  '073733326'],\n",
       " 27077971057: ['002071037'],\n",
       " 27077971058: ['071003096', '004410025', '072515414'],\n",
       " 27077971059: ['003187985', '070984840', '071085009', '071123156'],\n",
       " 27077971060: ['002071673', '000003247'],\n",
       " 27077971062: ['003187985'],\n",
       " 27077971063: ['002071037'],\n",
       " 27077971064: ['002071290', '002071673', '002071738'],\n",
       " 27077971066: ['002071037'],\n",
       " 27077971067: ['002071037'],\n",
       " 27077971073: ['003187985', '003107116'],\n",
       " 27077971076: ['073848220'],\n",
       " 27077971077: ['002071037'],\n",
       " 27077971080: ['003187985', '071123253', '003107116', '001264966'],\n",
       " 27077971085: ['002071037'],\n",
       " 27077971088: ['002071037'],\n",
       " 27077971092: ['003187985', '071424261'],\n",
       " 27077971093: ['000120987'],\n",
       " 27077971094: ['002071290', '003187985', '073809888'],\n",
       " 27077971095: ['002071037', '001048228'],\n",
       " 27077971098: ['002071037'],\n",
       " 27077971102: ['070258279', '003107116'],\n",
       " 27077972001: ['002071290', '074190660'],\n",
       " 27077972002: ['003107116'],\n",
       " 27077972006: ['001494066'],\n",
       " 27077972016: ['000120987', '004058097'],\n",
       " 27077972023: ['071123083',\n",
       "  '073733245',\n",
       "  '073733288',\n",
       "  '073733318',\n",
       "  '073733326',\n",
       "  '003012166'],\n",
       " 27077972027: ['073846015', '002071037'],\n",
       " 27077972035: ['002071290'],\n",
       " 27077972037: ['003282384',\n",
       "  '072590378',\n",
       "  '072082267',\n",
       "  '070984735',\n",
       "  '071003096',\n",
       "  '072515392',\n",
       "  '072515414'],\n",
       " 27077972044: ['070984840'],\n",
       " 27077972045: ['002071673'],\n",
       " 27077972054: ['074190660'],\n",
       " 27077972076: ['002533502', '004058097'],\n",
       " 27077972077: ['073805955', '000003018', '000006661'],\n",
       " 27077972080: ['000126179'],\n",
       " 27077972081: ['071123253', '071123857'],\n",
       " 27077972085: ['073056529'],\n",
       " 27077972090: ['004778375',\n",
       "  '001941135',\n",
       "  '071376089',\n",
       "  '000120987',\n",
       "  '002943247',\n",
       "  '000003522',\n",
       "  '000006637'],\n",
       " 27077973001: ['002071037', '003096548'],\n",
       " 27077973003: ['002071037'],\n",
       " 27077973006: ['073719927'],\n",
       " 27077973008: ['073848220', '002071037'],\n",
       " 27077973009: ['003187985', '003012166'],\n",
       " 27077973010: ['002071037'],\n",
       " 27077973013: ['072238062'],\n",
       " 27077973014: ['002071037', '071123148'],\n",
       " 27077973015: ['002071037'],\n",
       " 27077973018: ['002071673'],\n",
       " 27077973033: ['003187985', '002071037'],\n",
       " 27077973037: ['002071037'],\n",
       " 27077973046: ['002071037'],\n",
       " 27077973048: ['071424261', '071376100', '073805947'],\n",
       " 27077973053: ['072515392', '073089834'],\n",
       " 27077973054: ['002071037'],\n",
       " 27077973057: ['071018905', '071019006'],\n",
       " 27077974004: ['002071037'],\n",
       " 27077974009: ['002071037'],\n",
       " 27077974010: ['002071037'],\n",
       " 27077974011: ['002071037'],\n",
       " 27077974012: ['002071037'],\n",
       " 27077974013: ['002071037'],\n",
       " 27077974014: ['002071037'],\n",
       " 27077974018: ['002071037'],\n",
       " 27077974019: ['002364352'],\n",
       " 27077974024: ['000120987', '000003247', '072486384'],\n",
       " 27077974030: ['003187985'],\n",
       " 27077974034: ['002071037'],\n",
       " 27077974038: ['002071037'],\n",
       " 27077974040: ['073848166', '074193538'],\n",
       " 27077974041: ['070594252'],\n",
       " 27077974046: ['002071037', '070594252'],\n",
       " 27077974051: ['002071037', '070594252'],\n",
       " 27077974060: ['073315729', '073815683'],\n",
       " 27077974062: ['003187985', '003012166'],\n",
       " 27077974066: ['002071037', '072248122'],\n",
       " 27077974068: ['002071037'],\n",
       " 27077974070: ['003141373'],\n",
       " 27077974072: ['002071037'],\n",
       " 27077974076: ['004115279'],\n",
       " 27077974078: ['003107116'],\n",
       " 27077974079: ['002071037'],\n",
       " 27077974085: ['002071037'],\n",
       " 27077974086: ['003187985'],\n",
       " 27077974091: ['002071037', '072515414', '074201379', '003107116'],\n",
       " 27077974093: ['002071037'],\n",
       " 27077974100: ['002071037', '003096548'],\n",
       " 27077974101: ['000003247', '000003689'],\n",
       " 27077974108: ['000520837'],\n",
       " 27077974109: ['002071037', '000003247'],\n",
       " 27077974110: ['003187985'],\n",
       " 27077975001: ['073893579', '003107116'],\n",
       " 27077975006: ['003187985'],\n",
       " 27077975008: ['000125733', '074103571', '001675508'],\n",
       " 27077975010: ['000003247'],\n",
       " 27077975019: ['001970429', '072748796'],\n",
       " 27077975021: ['000003247'],\n",
       " 27077975022: ['002071037', '071423907'],\n",
       " 27077975033: ['002071037', '071020683', '070856206', '000006572'],\n",
       " 27077975039: ['073843660'],\n",
       " 27077975040: ['002221918', '072118598'],\n",
       " 27077975041: ['073846015'],\n",
       " 27077975047: ['002071290', '074157663', '004058097'],\n",
       " 27077975056: ['002071037'],\n",
       " 27077975064: ['002071738', '002071037'],\n",
       " 27077975073: ['070984735'],\n",
       " 27077975075: ['071424261'],\n",
       " 27077975081: ['002017865'],\n",
       " 27077975082: ['003107116'],\n",
       " 27077975085: ['003187985'],\n",
       " 27077975087: ['071138250', '001342541', '071459057'],\n",
       " 27077975119: ['004410025', '003012166'],\n",
       " 27077975127: ['072872314'],\n",
       " 27077975129: ['002071037'],\n",
       " 27077975131: ['003187985'],\n",
       " 27077975138: ['001686569'],\n",
       " 27077975139: ['000016268',\n",
       "  '071085017',\n",
       "  '071123083',\n",
       "  '000003522',\n",
       "  '000006572'],\n",
       " 27077975140: ['073601063'],\n",
       " 27077976003: ['002071037'],\n",
       " 27077976013: ['074190660'],\n",
       " 27077976017: ['002071037'],\n",
       " 27077976018: ['000120987'],\n",
       " 27077976029: ['071146474', '074190695', '070258279', '003107116'],\n",
       " 27077976034: ['002071037', '070594252', '074306510'],\n",
       " 27077976035: ['001905554', '003603709', '003107116'],\n",
       " 27077977023: ['000418781', '074080075', '073798606'],\n",
       " 27077977024: ['002071037', '000017426', '000016268'],\n",
       " 27077977026: ['002071037', '071123083'],\n",
       " 27077977028: ['002071037', '074306510', '071230327'],\n",
       " 27077977036: ['000012637', '001595326'],\n",
       " 27077977037: ['001494066'],\n",
       " 27077977043: ['003187985'],\n",
       " 27077977048: ['001347667', '074061216'],\n",
       " 27077977053: ['002071037'],\n",
       " 27077977057: ['074157663'],\n",
       " 27077978001: ['002071037', '072853166'],\n",
       " 27077978002: ['002071037', '003107116'],\n",
       " 27077978006: ['002071290', '002071037'],\n",
       " 27077978007: ['003187985', '002071037'],\n",
       " 27077978008: ['074154397'],\n",
       " 27077978009: ['003187985', '000512346', '000016268'],\n",
       " 27077978010: ['002071037'],\n",
       " 27077978012: ['073967432'],\n",
       " 27077978020: ['004058097'],\n",
       " 27077978024: ['002071037'],\n",
       " 27077978027: ['002071037', '073784915', '072486384'],\n",
       " 27077978030: ['073848220'],\n",
       " 27077978039: ['073696293', '000418692', '003107116'],\n",
       " 27077978052: ['002071037'],\n",
       " 27077979001: ['004123115'],\n",
       " 27077979004: ['000016268'],\n",
       " 27077979005: ['003107116'],\n",
       " 27077979013: ['002071037'],\n",
       " 27077979014: ['003187985'],\n",
       " 27077979015: ['004711688', '001076302', '003603709'],\n",
       " 27077979016: ['071245820'],\n",
       " 27077979021: ['073696293',\n",
       "  '003474690',\n",
       "  '002539616',\n",
       "  '000003247',\n",
       "  '072118571'],\n",
       " 27077979022: ['001264974',\n",
       "  '003341828',\n",
       "  '000013188',\n",
       "  '073777307',\n",
       "  '072089067'],\n",
       " 27077979024: ['073843687'],\n",
       " 27077979025: ['002017865'],\n",
       " 27077979026: ['003187985', '073789208'],\n",
       " 27077979027: ['003187985'],\n",
       " 27077979036: ['003187985'],\n",
       " 27077979037: ['002071037'],\n",
       " 27077979058: ['002071290', '002071037'],\n",
       " 27077979059: ['002071290', '074190695'],\n",
       " 27077979060: ['002071738'],\n",
       " 27077979066: ['003187985'],\n",
       " 27077979067: ['000003247'],\n",
       " 27077979072: ['001625799'],\n",
       " 27077980002: ['002071037'],\n",
       " 27077980007: ['074157663', '001970429'],\n",
       " 27077980009: ['002071037', '004410025'],\n",
       " 27077980019: ['070258279'],\n",
       " 27077980021: ['003393992', '003485951'],\n",
       " 27077980028: ['070941149'],\n",
       " 27077980037: ['000003247'],\n",
       " 27077980038: ['074157663', '073809888', '073601047'],\n",
       " 27077980039: ['073967335'],\n",
       " 27077980047: ['074154389'],\n",
       " 27077980048: ['002071037'],\n",
       " 27077980053: ['073830976', '000012696', '070630941'],\n",
       " 27077980056: ['001494066'],\n",
       " 27077980060: ['001264966'],\n",
       " 27077981009: ['004115279'],\n",
       " 27077981018: ['002071037', '071003096'],\n",
       " 27077981020: ['004410106', '071003096'],\n",
       " 27077981023: ['002071037'],\n",
       " 27077981027: ['002071037'],\n",
       " 27077981030: ['073846015', '073848220'],\n",
       " 27077981031: ['002071037'],\n",
       " 27077981035: ['002071290', '002071037', '071085017'],\n",
       " 27077981036: ['003187985', '074190660', '074190695', '072607335'],\n",
       " 27077981037: ['002071037'],\n",
       " 27077981038: ['073843547', '002071037'],\n",
       " 27077981045: ['003187985'],\n",
       " 27077981048: ['003187985'],\n",
       " 27077981053: ['002071037'],\n",
       " 27077981056: ['003107116'],\n",
       " 27077981057: ['002071037'],\n",
       " 27077981058: ['002071037'],\n",
       " 27077981060: ['003187985', '002071037'],\n",
       " 27077981061: ['002071037'],\n",
       " 27077981063: ['073848220', '002071037'],\n",
       " 27077981064: ['073848220', '002071037', '071017321', '004797825'],\n",
       " 27077981069: ['003107116'],\n",
       " 27077981071: ['002071037'],\n",
       " 27077981075: ['002071037', '001686569'],\n",
       " 27077981077: ['003187985'],\n",
       " 27077981078: ['002071037'],\n",
       " 27077981079: ['072486481',\n",
       "  '074298682',\n",
       "  '071020683',\n",
       "  '002533499',\n",
       "  '003107116',\n",
       "  '003628787',\n",
       "  '003341844'],\n",
       " 27077981081: ['073848220'],\n",
       " 27077982001: ['002071037'],\n",
       " 27077982002: ['002071037', '003107116'],\n",
       " 27077982007: ['073936782'],\n",
       " 27077982019: ['000709174'],\n",
       " 27077982025: ['072515414'],\n",
       " 27077982035: ['071017321', '071245820'],\n",
       " 27077982036: ['002071037', '073784915'],\n",
       " 27077982043: ['002071037',\n",
       "  '074190695',\n",
       "  '000120987',\n",
       "  '001494066',\n",
       "  '002943247',\n",
       "  '000003247',\n",
       "  '000003018'],\n",
       " 27077982046: ['002071037', '070594252', '072607335', '072515392'],\n",
       " 27077982047: ['002071037'],\n",
       " 27077982048: ['072118598'],\n",
       " 27077982051: ['074327771'],\n",
       " 27077982055: ['000003018', '000006580'],\n",
       " 27077982056: ['003187985', '001494066'],\n",
       " 27077982059: ['000418692', '074080806'],\n",
       " 27077982065: ['000709425'],\n",
       " 27077983001: ['000013188', '004123123', '000006572'],\n",
       " 27077983007: ['002071037', '002533502'],\n",
       " 27077983008: ['002071037'],\n",
       " 27077983009: ['002071037', '003107116'],\n",
       " 27077983010: ['002071037'],\n",
       " 27077983011: ['003342166'],\n",
       " 27077983012: ['071123857',\n",
       "  '071123911',\n",
       "  '071123083',\n",
       "  '072607335',\n",
       "  '072515414',\n",
       "  '074154397',\n",
       "  '074154370',\n",
       "  '000404802'],\n",
       " 27077983013: ['072527811', '001970429', '001342533', '004679393'],\n",
       " 27077983014: ['071084991', '003107116'],\n",
       " 27077983015: ['003187985'],\n",
       " 27077983020: ['071003096'],\n",
       " 27077983021: ['002071673', '002071037'],\n",
       " 27077983028: ['071018905', '071019006', '074154389', '001342525'],\n",
       " 27077983035: ['003187985'],\n",
       " 27077983037: ['002071037', '072527811'],\n",
       " 27077983039: ['002071290', '002071738'],\n",
       " 27077983044: ['071003096', '072515392'],\n",
       " 27077983048: ['002071037',\n",
       "  '072554452',\n",
       "  '070984840',\n",
       "  '004410025',\n",
       "  '003107116'],\n",
       " 27077984003: ['002071037', '000709220'],\n",
       " 27077984004: ['002071037', '071123830'],\n",
       " 27077984014: ['001264974', '001264966', '072748796', '072676655'],\n",
       " 27077984016: ['073601012', '073601004', '072872314'],\n",
       " 27077984023: ['002071037'],\n",
       " 27077985005: ['002071037', '004058097'],\n",
       " 27077985006: ['002071037'],\n",
       " 27077985010: ['002071037'],\n",
       " 27077985016: ['000125733', '004069366', '000003247'],\n",
       " 27077985022: ['002071037'],\n",
       " 27077985026: ['074157663', '003187985'],\n",
       " 27077985029: ['000120987', '000003247'],\n",
       " 27077985030: ['000017590'],\n",
       " 27077985033: ['000520837'],\n",
       " 27077985037: ['002943247', '000003247'],\n",
       " 27077985054: ['002071037'],\n",
       " 27077985055: ['002024128'],\n",
       " 27077985063: ['003187985', '002071037'],\n",
       " 27077985064: ['003187985', '002071037'],\n",
       " 27077985075: ['002071843', '003187985'],\n",
       " 27077985076: ['074157663'],\n",
       " 27077985077: ['073089834'],\n",
       " 27077985086: ['071123911'],\n",
       " 27077985088: ['071146474',\n",
       "  '072554452',\n",
       "  '072910585',\n",
       "  '073815543',\n",
       "  '072872314',\n",
       "  '073668478',\n",
       "  '070947422',\n",
       "  '073784915',\n",
       "  '001226908',\n",
       "  '003341828'],\n",
       " 27077985089: ['072750081', '073784915'],\n",
       " 27077985099: ['071123253',\n",
       "  '074190660',\n",
       "  '001686569',\n",
       "  '001264974',\n",
       "  '001264966',\n",
       "  '072750081',\n",
       "  '000003247',\n",
       "  '000003018',\n",
       "  '004123131',\n",
       "  '000012807'],\n",
       " 27077985102: ['071123261', '071123253'],\n",
       " 27077985103: ['000536628', '000536148', '001519778'],\n",
       " 27077986007: ['004058097'],\n",
       " 27077986014: ['000120987'],\n",
       " 27077986019: ['003187985'],\n",
       " 27077986026: ['002071037'],\n",
       " 27077986033: ['002071037'],\n",
       " 27077986035: ['002071037'],\n",
       " 27077986045: ['003187985'],\n",
       " 27077986046: ['002071037'],\n",
       " 27077986047: ['003187985'],\n",
       " 27077986050: ['074201379'],\n",
       " 27077986052: ['002071037'],\n",
       " 27077986057: ['073777196'],\n",
       " 27077986060: ['002071037'],\n",
       " 27077986065: ['003107116', '001494066'],\n",
       " 27077986066: ['000003247', '000003018', '071073574'],\n",
       " 27077986087: ['073848220', '002071037'],\n",
       " 27077986091: ['000003247'],\n",
       " 27077986097: ['073784915'],\n",
       " 27077986100: ['073843547'],\n",
       " 27077986103: ['001264974'],\n",
       " 27077986126: ['073967440'],\n",
       " 27077986130: ['001625799', '003604152'],\n",
       " 27077986138: ['072544678'],\n",
       " 27077986139: ['002755769', '002943247', '000003247'],\n",
       " 27077986146: ['002896400',\n",
       "  '073056529',\n",
       "  '071465839',\n",
       "  '070079145',\n",
       "  '004554876',\n",
       "  '004554884',\n",
       "  '072748737'],\n",
       " 27077986152: ['072590378',\n",
       "  '073601012',\n",
       "  '073805947',\n",
       "  '073601004',\n",
       "  '073600946',\n",
       "  '003082474'],\n",
       " 27077986153: ['001293036'],\n",
       " 27077986155: ['071123253', '003107116', '003034755'],\n",
       " 27077986157: ['003107116'],\n",
       " 27077986160: ['004426266', '000513016', '073790001'],\n",
       " 27077986163: ['000090514', '073798584', '074190695', '003107116'],\n",
       " 27077987002: ['002071037'],\n",
       " 27077987004: ['002071037'],\n",
       " 27077987011: ['074157663'],\n",
       " 27077987013: ['002071037'],\n",
       " 27077987014: ['002071037', '072238011', '073735906', '073893579'],\n",
       " 27077987020: ['072702052', '000017701', '073089842'],\n",
       " 27077987026: ['074157663', '002071037'],\n",
       " 27077987028: ['074014374'],\n",
       " 27077987029: ['074014374'],\n",
       " 27077987031: ['070941149'],\n",
       " 27077987035: ['001525808'],\n",
       " 27077987036: ['074014374', '004123115'],\n",
       " 27077987040: ['072527846'],\n",
       " 27077988001: ['074201387'],\n",
       " 27077988020: ['073846015'],\n",
       " 27077988024: ['002071037', '072872314'],\n",
       " 27077988029: ['074190660', '074190695', '003341844'],\n",
       " 27077988031: ['003107116', '000003247', '001048228'],\n",
       " 27077988036: ['070258279'],\n",
       " 27077988044: ['000120987'],\n",
       " 27077988053: ['000003344'],\n",
       " 27077988061: ['002943247', '000003247'],\n",
       " 27077988062: ['073046590', '003107116'],\n",
       " 27077988080: ['000003247'],\n",
       " 27077988099: ['072607335'],\n",
       " 27077988113: ['073471003', '073846015', '000003689'],\n",
       " 27077988114: ['003107116'],\n",
       " 27077988124: ['000017426',\n",
       "  '004093992',\n",
       "  '000003247',\n",
       "  '000248363',\n",
       "  '071459065'],\n",
       " 27077988133: ['072607335'],\n",
       " 27077988134: ['002071037', '002943247'],\n",
       " 27077988140: ['002071673'],\n",
       " 27077989012: ['002071037'],\n",
       " 27077989014: ['002071037'],\n",
       " 27077989016: ['002071037', '071424261', '070258279'],\n",
       " 27077989025: ['002071037'],\n",
       " 27077989026: ['002071037'],\n",
       " 27077989028: ['002071037'],\n",
       " 27077989037: ['073848220', '002071037'],\n",
       " 27077989040: ['003187985', '002071037'],\n",
       " 27077989043: ['002017865'],\n",
       " 27077989044: ['070594252'],\n",
       " 27077989049: ['000003247'],\n",
       " 27077989050: ['002071037'],\n",
       " 27077989054: ['002071037'],\n",
       " 27077989055: ['002071037'],\n",
       " 27077989059: ['071146342', '001952595'],\n",
       " 27077989068: ['003187985'],\n",
       " 27077989071: ['003107116'],\n",
       " 27077989078: ['002071037'],\n",
       " 27077990005: ['002071037', '003141373'],\n",
       " 27077990006: ['002071037'],\n",
       " ...}"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "### Check if the function do its job\n",
    "basket"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "NBeQ5LgRVHMy"
   },
   "source": [
    "## Support Calculation"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "LIAOb3ki59DR"
   },
   "source": [
    "### Dataframe Preparation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "mx61BjZYfIYI"
   },
   "outputs": [],
   "source": [
    "def dataframe_prep(basket_data):\n",
    "    \"\"\"\n",
    "    This function takes in a dictionary called 'basket_data', where the keys represent order IDs and the values are lists of item IDs.\n",
    "    The function processes the input data and returns a formatted pandas DataFrame with a binary matrix representation of the input data,\n",
    "    indicating the presence or absence of an item in each order.\n",
    "\n",
    "    Args:\n",
    "    basket_data (dict): A dictionary with keys representing order IDs and values as lists of strings/numbers representing item IDs.\n",
    "\n",
    "    Returns:\n",
    "    pd.DataFrame: A formatted pandas DataFrame with order IDs as the index and item IDs as the columns.\n",
    "                  The value at a specific cell (order_id, item_id) is 1 if the item is present in the order and 0 otherwise.\n",
    "    \"\"\"\n",
    "\n",
    "    basket_df = pd.DataFrame(dict([(k,pd.Series(v)) for k, v in basket_data.items()]))\n",
    "    basket_df = basket_df.T.stack()\n",
    "    basket_df = basket_df.reset_index(level=1,drop=True)\n",
    "    basket_final= basket_df.to_frame()\n",
    "    basket_final = basket_final.reset_index()\n",
    "    basket_final.columns = ['order_id','item_id']\n",
    "    basket_final.insert(basket_final.shape[1], 'existence', 1)\n",
    "    basket_final = (basket_final.groupby(['order_id', 'item_id'])['existence'].sum().unstack().reset_index().fillna(0).set_index('order_id'))\n",
    "    return basket_final"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "xqHnqe-4HeFb"
   },
   "outputs": [],
   "source": [
    "def encode_units(x):\n",
    "    \"\"\"\n",
    "    This function takes in a numeric value 'x' and returns a binary-encoded representation of the input.\n",
    "    It returns 0 if the input is less than or equal to 0, and 1 if the input is greater than or equal to 1.\n",
    "\n",
    "    Args:\n",
    "    x (int or float): A numeric value to be binary-encoded.\n",
    "\n",
    "    Returns:\n",
    "    int: The binary-encoded representation of the input (0 or 1).\n",
    "    \"\"\"\n",
    "    if x <= 0:\n",
    "        return 0\n",
    "    if x >= 1:\n",
    "        return 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 519
    },
    "id": "9HsUbSR9ingT",
    "outputId": "d1fe9064-0f3b-41c0-8f70-ee46abc4af1f"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-0cbc2e57-7163-4f5d-914a-5b8e092851dd\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th>item_id</th>\n",
       "      <th>000002968</th>\n",
       "      <th>000003018</th>\n",
       "      <th>000003247</th>\n",
       "      <th>000003344</th>\n",
       "      <th>000003492</th>\n",
       "      <th>000003522</th>\n",
       "      <th>000003565</th>\n",
       "      <th>000003689</th>\n",
       "      <th>000003751</th>\n",
       "      <th>000006548</th>\n",
       "      <th>...</th>\n",
       "      <th>074313207</th>\n",
       "      <th>074313258</th>\n",
       "      <th>074313274</th>\n",
       "      <th>074313282</th>\n",
       "      <th>074327771</th>\n",
       "      <th>074330489</th>\n",
       "      <th>074330497</th>\n",
       "      <th>074330551</th>\n",
       "      <th>074339036</th>\n",
       "      <th>074392905</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>order_id</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>27077843100</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27077843102</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27077843103</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27077843105</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27077843138</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27115080010</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27115081008</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27115081009</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27115081018</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27115081024</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>496357 rows × 980 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0cbc2e57-7163-4f5d-914a-5b8e092851dd')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-0cbc2e57-7163-4f5d-914a-5b8e092851dd button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-0cbc2e57-7163-4f5d-914a-5b8e092851dd');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "item_id      000002968  000003018  000003247  000003344  000003492  000003522  \\\n",
       "order_id                                                                        \n",
       "27077843100          0          0          0          0          0          0   \n",
       "27077843102          0          0          0          0          0          0   \n",
       "27077843103          0          0          0          0          0          0   \n",
       "27077843105          0          0          0          0          0          0   \n",
       "27077843138          0          0          1          0          0          0   \n",
       "...                ...        ...        ...        ...        ...        ...   \n",
       "27115080010          0          0          0          0          0          0   \n",
       "27115081008          0          0          0          0          0          0   \n",
       "27115081009          0          0          0          0          0          0   \n",
       "27115081018          0          0          0          0          0          0   \n",
       "27115081024          0          0          1          0          0          0   \n",
       "\n",
       "item_id      000003565  000003689  000003751  000006548  ...  074313207  \\\n",
       "order_id                                                 ...              \n",
       "27077843100          0          0          0          0  ...          0   \n",
       "27077843102          0          0          0          0  ...          0   \n",
       "27077843103          0          0          0          0  ...          0   \n",
       "27077843105          0          0          0          0  ...          0   \n",
       "27077843138          0          0          0          0  ...          0   \n",
       "...                ...        ...        ...        ...  ...        ...   \n",
       "27115080010          0          0          0          0  ...          0   \n",
       "27115081008          0          0          0          0  ...          0   \n",
       "27115081009          0          0          0          0  ...          0   \n",
       "27115081018          0          0          0          0  ...          0   \n",
       "27115081024          0          0          0          0  ...          0   \n",
       "\n",
       "item_id      074313258  074313274  074313282  074327771  074330489  074330497  \\\n",
       "order_id                                                                        \n",
       "27077843100          0          0          0          0          0          0   \n",
       "27077843102          0          0          0          0          0          0   \n",
       "27077843103          0          0          0          0          0          0   \n",
       "27077843105          0          0          0          0          0          0   \n",
       "27077843138          0          0          0          0          0          0   \n",
       "...                ...        ...        ...        ...        ...        ...   \n",
       "27115080010          0          0          0          0          0          0   \n",
       "27115081008          0          0          0          0          0          0   \n",
       "27115081009          0          0          0          0          0          0   \n",
       "27115081018          0          0          0          0          0          0   \n",
       "27115081024          0          0          0          0          0          0   \n",
       "\n",
       "item_id      074330551  074339036  074392905  \n",
       "order_id                                      \n",
       "27077843100          0          0          0  \n",
       "27077843102          0          0          0  \n",
       "27077843103          0          0          0  \n",
       "27077843105          0          0          0  \n",
       "27077843138          0          0          0  \n",
       "...                ...        ...        ...  \n",
       "27115080010          0          0          0  \n",
       "27115081008          0          0          0  \n",
       "27115081009          0          0          0  \n",
       "27115081018          0          0          0  \n",
       "27115081024          0          0          0  \n",
       "\n",
       "[496357 rows x 980 columns]"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# The following code first calls the 'dataframe_prep' function with 'basket' as its input, which returns a pandas DataFrame\n",
    "# containing a binary matrix representation of the input data, indicating the presence or absence of an item in each order.\n",
    "# Then, the 'applymap' function is used to apply the 'encode_units' function element-wise to the DataFrame, ensuring that all\n",
    "# the values in the DataFrame are either 0 or 1.\n",
    "# The resulting DataFrame is stored in the variable 'basket_final_df'.\n",
    "basket_final_df = dataframe_prep(basket).applymap(encode_units)\n",
    "basket_final_df"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "Jjdf-pa36E24"
   },
   "source": [
    "### Market Basket Metric Calculation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "2h-D5Oy3IInP"
   },
   "outputs": [],
   "source": [
    "### Import the packages need for the market basket calculation\n",
    "from mlxtend.frequent_patterns import apriori, association_rules"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "UKkQG0pN8vpl"
   },
   "outputs": [],
   "source": [
    "def support_calculate(df):\n",
    "    \"\"\"\n",
    "    This function takes in a pandas DataFrame 'df', which is expected to contain a binary matrix representation of item presence\n",
    "    in transactions/orders. It calculates the frequent itemsets using the Apriori algorithm with a minimum support threshold of 0.001.\n",
    "\n",
    "    Args:\n",
    "    df (pd.DataFrame): A pandas DataFrame containing a binary matrix representation of item presence in transactions/orders.\n",
    "\n",
    "    Returns:\n",
    "    pd.DataFrame: A pandas DataFrame containing the frequent itemsets along with their support values.\n",
    "    \"\"\"\n",
    "\n",
    "    frequent_itemsets = apriori(df, min_support=0.001, use_colnames=True)\n",
    "    return frequent_itemsets"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "YbMtImVvkRzd"
   },
   "outputs": [],
   "source": [
    "def basket_rules(df):\n",
    "    \"\"\"\n",
    "    This function takes in a pandas DataFrame 'df', which is expected to contain a binary matrix representation of item presence\n",
    "    in transactions/orders. It first calculates the frequent itemsets using the 'support_calculate' function and then computes\n",
    "    the association rules between items using the lift metric with a minimum threshold of 1.\n",
    "\n",
    "    Args:\n",
    "    df (pd.DataFrame): A pandas DataFrame containing a binary matrix representation of item presence in transactions/orders.\n",
    "\n",
    "    Returns:\n",
    "    pd.DataFrame: A pandas DataFrame containing the association rules between items, along with their support, confidence, lift, leverage, and conviction values.\n",
    "    \"\"\"\n",
    "\n",
    "    rules = association_rules(support_calculate(df), metric=\"lift\", min_threshold = 1)\n",
    "    return rules"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "2c-ITVsDgvSN",
    "outputId": "64ea2355-17b9-4651-aaf0-611094900a45"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "      support                itemsets\n",
      "78   0.200120             (002071037)\n",
      "63   0.068648             (001494066)\n",
      "2    0.065550             (000003247)\n",
      "105  0.064915             (003107116)\n",
      "223  0.049315             (072872314)\n",
      "..        ...                     ...\n",
      "199  0.001011             (072249072)\n",
      "389  0.001005  (073668478, 002071037)\n",
      "12   0.001003             (000012637)\n",
      "33   0.001003             (000198811)\n",
      "273  0.001001             (073815543)\n",
      "\n",
      "[424 rows x 2 columns]\n"
     ]
    }
   ],
   "source": [
    "### Call the support calculation functiona and view the calculation result\n",
    "### The result has been sorted in descending order, from highest support to lowest support\n",
    "print(support_calculate(basket_final_df).sort_values(by='support', ascending=False))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 424
    },
    "id": "MCXGDeKweEvU",
    "outputId": "fadf5f49-4fad-42f9-eb9b-64b0872891eb"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-a9492cc5-b067-4045-8b56-0acc39e14f6f\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>antecedents</th>\n",
       "      <th>consequents</th>\n",
       "      <th>antecedent support</th>\n",
       "      <th>consequent support</th>\n",
       "      <th>support</th>\n",
       "      <th>confidence</th>\n",
       "      <th>lift</th>\n",
       "      <th>leverage</th>\n",
       "      <th>conviction</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>(000003247)</td>\n",
       "      <td>(000003018)</td>\n",
       "      <td>0.065550</td>\n",
       "      <td>0.012848</td>\n",
       "      <td>0.003016</td>\n",
       "      <td>0.046011</td>\n",
       "      <td>3.581256</td>\n",
       "      <td>0.002174</td>\n",
       "      <td>1.034762</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>(000003018)</td>\n",
       "      <td>(000003247)</td>\n",
       "      <td>0.012848</td>\n",
       "      <td>0.065550</td>\n",
       "      <td>0.003016</td>\n",
       "      <td>0.234750</td>\n",
       "      <td>3.581256</td>\n",
       "      <td>0.002174</td>\n",
       "      <td>1.221105</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>(001048228)</td>\n",
       "      <td>(000003247)</td>\n",
       "      <td>0.006389</td>\n",
       "      <td>0.065550</td>\n",
       "      <td>0.001152</td>\n",
       "      <td>0.180385</td>\n",
       "      <td>2.751882</td>\n",
       "      <td>0.000734</td>\n",
       "      <td>1.140109</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>(000003247)</td>\n",
       "      <td>(001048228)</td>\n",
       "      <td>0.065550</td>\n",
       "      <td>0.006389</td>\n",
       "      <td>0.001152</td>\n",
       "      <td>0.017581</td>\n",
       "      <td>2.751882</td>\n",
       "      <td>0.000734</td>\n",
       "      <td>1.011392</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>(000003247)</td>\n",
       "      <td>(002943247)</td>\n",
       "      <td>0.065550</td>\n",
       "      <td>0.018203</td>\n",
       "      <td>0.004052</td>\n",
       "      <td>0.061808</td>\n",
       "      <td>3.395580</td>\n",
       "      <td>0.002858</td>\n",
       "      <td>1.046479</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99</th>\n",
       "      <td>(072515414)</td>\n",
       "      <td>(072607335)</td>\n",
       "      <td>0.015930</td>\n",
       "      <td>0.020614</td>\n",
       "      <td>0.001223</td>\n",
       "      <td>0.076767</td>\n",
       "      <td>3.724008</td>\n",
       "      <td>0.000895</td>\n",
       "      <td>1.060822</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>100</th>\n",
       "      <td>(073668478)</td>\n",
       "      <td>(072872314)</td>\n",
       "      <td>0.021672</td>\n",
       "      <td>0.049315</td>\n",
       "      <td>0.006522</td>\n",
       "      <td>0.300920</td>\n",
       "      <td>6.101966</td>\n",
       "      <td>0.005453</td>\n",
       "      <td>1.359909</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>101</th>\n",
       "      <td>(072872314)</td>\n",
       "      <td>(073668478)</td>\n",
       "      <td>0.049315</td>\n",
       "      <td>0.021672</td>\n",
       "      <td>0.006522</td>\n",
       "      <td>0.132241</td>\n",
       "      <td>6.101966</td>\n",
       "      <td>0.005453</td>\n",
       "      <td>1.127419</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>102</th>\n",
       "      <td>(074190660)</td>\n",
       "      <td>(074190695)</td>\n",
       "      <td>0.017600</td>\n",
       "      <td>0.018928</td>\n",
       "      <td>0.003189</td>\n",
       "      <td>0.181204</td>\n",
       "      <td>9.573388</td>\n",
       "      <td>0.002856</td>\n",
       "      <td>1.198189</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>103</th>\n",
       "      <td>(074190695)</td>\n",
       "      <td>(074190660)</td>\n",
       "      <td>0.018928</td>\n",
       "      <td>0.017600</td>\n",
       "      <td>0.003189</td>\n",
       "      <td>0.168494</td>\n",
       "      <td>9.573388</td>\n",
       "      <td>0.002856</td>\n",
       "      <td>1.181470</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>104 rows × 9 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a9492cc5-b067-4045-8b56-0acc39e14f6f')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-a9492cc5-b067-4045-8b56-0acc39e14f6f button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-a9492cc5-b067-4045-8b56-0acc39e14f6f');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "     antecedents  consequents  antecedent support  consequent support  \\\n",
       "0    (000003247)  (000003018)            0.065550            0.012848   \n",
       "1    (000003018)  (000003247)            0.012848            0.065550   \n",
       "2    (001048228)  (000003247)            0.006389            0.065550   \n",
       "3    (000003247)  (001048228)            0.065550            0.006389   \n",
       "4    (000003247)  (002943247)            0.065550            0.018203   \n",
       "..           ...          ...                 ...                 ...   \n",
       "99   (072515414)  (072607335)            0.015930            0.020614   \n",
       "100  (073668478)  (072872314)            0.021672            0.049315   \n",
       "101  (072872314)  (073668478)            0.049315            0.021672   \n",
       "102  (074190660)  (074190695)            0.017600            0.018928   \n",
       "103  (074190695)  (074190660)            0.018928            0.017600   \n",
       "\n",
       "      support  confidence      lift  leverage  conviction  \n",
       "0    0.003016    0.046011  3.581256  0.002174    1.034762  \n",
       "1    0.003016    0.234750  3.581256  0.002174    1.221105  \n",
       "2    0.001152    0.180385  2.751882  0.000734    1.140109  \n",
       "3    0.001152    0.017581  2.751882  0.000734    1.011392  \n",
       "4    0.004052    0.061808  3.395580  0.002858    1.046479  \n",
       "..        ...         ...       ...       ...         ...  \n",
       "99   0.001223    0.076767  3.724008  0.000895    1.060822  \n",
       "100  0.006522    0.300920  6.101966  0.005453    1.359909  \n",
       "101  0.006522    0.132241  6.101966  0.005453    1.127419  \n",
       "102  0.003189    0.181204  9.573388  0.002856    1.198189  \n",
       "103  0.003189    0.168494  9.573388  0.002856    1.181470  \n",
       "\n",
       "[104 rows x 9 columns]"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "### Call the function to find association rules\n",
    "basket_association_rules = basket_rules(basket_final_df)\n",
    "basket_association_rules"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "85WclpYDJKvx"
   },
   "outputs": [],
   "source": [
    "### Change the data type of generated antecedents and consequest for following item description mapping\n",
    "basket_association_rules[\"antecedents\"] = basket_association_rules[\"antecedents\"].apply(lambda x: ', '.join(list(x))).astype(\"unicode\")\n",
    "basket_association_rules[\"consequents\"] = basket_association_rules[\"consequents\"].apply(lambda x: ', '.join(list(x))).astype(\"unicode\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "gzojYFhOKXCn",
    "outputId": "9cab4246-db5f-40ed-a4db-e6ca2e0ee90a"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['000003247']\n",
      "['000003018']\n",
      "['001048228']\n",
      "['000003247']\n",
      "['000003247']\n",
      "['002943247']\n",
      "['003012166']\n",
      "['000003247']\n",
      "['000003247']\n",
      "['072515392']\n",
      "['072515414']\n",
      "['000003247']\n",
      "['072607335']\n",
      "['000003247']\n",
      "['000003247']\n",
      "['073089834']\n",
      "['001494066']\n",
      "['000120987']\n",
      "['072527811']\n",
      "['000120987']\n",
      "['001048228']\n",
      "['002071037']\n",
      "['001264966']\n",
      "['001264974']\n",
      "['001264966']\n",
      "['003107116']\n",
      "['001494066']\n",
      "['001494074']\n",
      "['003341844']\n",
      "['001494066']\n",
      "['001494066']\n",
      "['072298693']\n",
      "['001494066']\n",
      "['072486384']\n",
      "['001494066']\n",
      "['074190660']\n",
      "['001494066']\n",
      "['074330489']\n",
      "['004410025']\n",
      "['002071037']\n",
      "['002071037']\n",
      "['070594252']\n",
      "['070984840']\n",
      "['002071037']\n",
      "['071003096']\n",
      "['002071037']\n",
      "['002071037']\n",
      "['071123857']\n",
      "['072607335']\n",
      "['002071037']\n",
      "['073089834']\n",
      "['002071037']\n",
      "['073847755']\n",
      "['002071037']\n",
      "['002071037']\n",
      "['073848220']\n",
      "['074061216']\n",
      "['002071037']\n",
      "['002071738']\n",
      "['002071290']\n",
      "['002071290']\n",
      "['002071843']\n",
      "['002071290']\n",
      "['003187985']\n",
      "['002071738']\n",
      "['003187985']\n",
      "['074157663']\n",
      "['003187985']\n",
      "['003341844']\n",
      "['003341828']\n",
      "['003342166']\n",
      "['003341828']\n",
      "['072486384']\n",
      "['003341828']\n",
      "['003341844']\n",
      "['072486384']\n",
      "['003342166']\n",
      "['072486384']\n",
      "['004410025']\n",
      "['072515392']\n",
      "['004410025']\n",
      "['072515414']\n",
      "['004410025']\n",
      "['072607335']\n",
      "['072515392']\n",
      "['071003096']\n",
      "['072515414']\n",
      "['071003096']\n",
      "['072607335']\n",
      "['071003096']\n",
      "['074190660']\n",
      "['071123253']\n",
      "['074190695']\n",
      "['071123253']\n",
      "['072515414']\n",
      "['072515392']\n",
      "['072607335']\n",
      "['072515392']\n",
      "['072607335']\n",
      "['072515414']\n",
      "['073668478']\n",
      "['072872314']\n",
      "['074190660']\n",
      "['074190695']\n"
     ]
    }
   ],
   "source": [
    "for i in basket_association_rules[\"antecedents\"]:\n",
    "    i = i.split(\",\")\n",
    "    print(i)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "5QiZSu5FQXcj"
   },
   "source": [
    "## Preparation for mapping item description to item code"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "nhG84hBU6jVg"
   },
   "source": [
    "The simplest way to access the item description content is to load item_master txt file into the jupyter notebook\n",
    "In this code notebook our team randomly choose the file\"ITEM_MASTER_20200129.txt\" as our item description reference since all item_master file hold consistent content across time. In the future if new products updated to the database, just replace the item_master file should do the work."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "9UGIXrl3vGHU"
   },
   "outputs": [],
   "source": [
    "### Load the txt file by first load the column names manually\n",
    "\n",
    "col_names = ['item_code','item_number_type','format_id_','prefix','item_parent','item_grandparent','pack_ind','item_level','tran_level','item_aggregate_ind',\n",
    "'diff_1','diff_1_aggregate_ind','diff_2','diff_2_aggregate_ind','diff_3','diff_3_aggregate_ind','diff_4','diff_4_aggregate_ind','dept','class','subclass','status',\n",
    "'item_desc','short_desc','desc_up','primary_ref_item_ind','retail_zone_group_id','cost_zone_group_id','standard_uom','uom_conv_factor','package_size','package_uom',\n",
    "'merchandise_ind','store_ord_mult','forecast_ind','original_retail','mfg_rec_retail_','retail_label_type','retail_label_value','handling_temp','handling_sensitivity',\n",
    "'catch_weight_ind','first_received_','last_received_','qty_received','waste_type','waste_pct_','default_waste_pct','const_dimen_ind','simple_pack_ind','contains_inner_ind',\n",
    "'sellable_ind','orderable_ind','pack_type_','order_as_type','comments','item_service_level','gift_wrap_ind','ship_alone_ind','create_datetime','last_update_id','last_update_datetime',\n",
    "'check_uda_ind_']\n",
    "\n",
    "##file_path = \"/content/drive/MyDrive/CPGroupData/DH 1.1.2020/DH 1.1.2020 -30.6.2020/ITEM_MASTER_20220129.txt/\"\n",
    "#item_description_df = pd.read_csv(file_path, sep = '|', names = col_names, header = None, dtype = 'str', engine= 'python', encoding='utf-8')\n",
    "item_description_df = pd.read_csv('ITEM_MASTER_20200129.txt', sep = '|', names = col_names, header = None, dtype = 'str', engine= 'python', encoding='utf-8')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "eTDiFX75GCJP"
   },
   "outputs": [],
   "source": [
    "### Generate a smaller dataframe with the information required for us to mapp the item description\n",
    "item_descrp = item_description_df[['item_code', 'dept','item_desc']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 424
    },
    "id": "I303jSvzGVzD",
    "outputId": "d0746ad2-2ecc-4bfc-e262-0dfc14b162f9"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-bb4d2ab7-c04b-426a-997b-acc92e84224f\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>item_code</th>\n",
       "      <th>dept</th>\n",
       "      <th>item_desc</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>400008008</td>\n",
       "      <td>3</td>\n",
       "      <td>SAN REMO VEGERONI SPIRALS 375G</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>400008028</td>\n",
       "      <td>3</td>\n",
       "      <td>SAN REMO INST LASAGNA 250G</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>400008063</td>\n",
       "      <td>3</td>\n",
       "      <td>SAN REMO NO 18 PENNE RIGATE 500G</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>400008097</td>\n",
       "      <td>3</td>\n",
       "      <td>SAN REMO ANGEL HAIR SPAG 500G</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>400008127</td>\n",
       "      <td>3</td>\n",
       "      <td>SAN REMO LA PASTA ALFREDO 120G</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>523204</th>\n",
       "      <td>073065846</td>\n",
       "      <td>551</td>\n",
       "      <td>NAT PASSION J 1L FOC ACAI BERRY 200MLX2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>523205</th>\n",
       "      <td>404517188</td>\n",
       "      <td>54</td>\n",
       "      <td>PENSONIC PAK-25C / PAK-5002 ELEC KETTLE 5.0L</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>523206</th>\n",
       "      <td>073063975</td>\n",
       "      <td>54</td>\n",
       "      <td>PENSONIC PAK-25C / PAK-5002 ELEC KETTLE 5.0L</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>523207</th>\n",
       "      <td>404517271</td>\n",
       "      <td>56</td>\n",
       "      <td>PENSONIC PFF-1800 18INCH FLOOR FAN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>523208</th>\n",
       "      <td>073064092</td>\n",
       "      <td>56</td>\n",
       "      <td>PENSONIC PFF-1800 18INCH FLOOR FAN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>523209 rows × 3 columns</p>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bb4d2ab7-c04b-426a-997b-acc92e84224f')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-bb4d2ab7-c04b-426a-997b-acc92e84224f button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-bb4d2ab7-c04b-426a-997b-acc92e84224f');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "        item_code dept                                     item_desc\n",
       "0       400008008    3                SAN REMO VEGERONI SPIRALS 375G\n",
       "1       400008028    3                    SAN REMO INST LASAGNA 250G\n",
       "2       400008063    3              SAN REMO NO 18 PENNE RIGATE 500G\n",
       "3       400008097    3                 SAN REMO ANGEL HAIR SPAG 500G\n",
       "4       400008127    3                SAN REMO LA PASTA ALFREDO 120G\n",
       "...           ...  ...                                           ...\n",
       "523204  073065846  551       NAT PASSION J 1L FOC ACAI BERRY 200MLX2\n",
       "523205  404517188   54  PENSONIC PAK-25C / PAK-5002 ELEC KETTLE 5.0L\n",
       "523206  073063975   54  PENSONIC PAK-25C / PAK-5002 ELEC KETTLE 5.0L\n",
       "523207  404517271   56            PENSONIC PFF-1800 18INCH FLOOR FAN\n",
       "523208  073064092   56            PENSONIC PFF-1800 18INCH FLOOR FAN\n",
       "\n",
       "[523209 rows x 3 columns]"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "### Take a look at the smaller dataframe\n",
    "item_descrp"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "L_GkU0q-HUr4"
   },
   "outputs": [],
   "source": [
    "############## Mapping function ################\n",
    "def item_description_mapping(item_num):\n",
    "    \"\"\"\n",
    "    This function takes in an item code (item_num) and searches for the corresponding item description in the 'item_descrp' DataFrame,\n",
    "    It is assumed that the function is called for one item code at a time.\n",
    "\n",
    "    Args:\n",
    "    item_num (str or int): The item code for which the corresponding item description is to be retrieved.\n",
    "\n",
    "    Returns:\n",
    "    list: A list containing the item description(s) corresponding to the input item code. The list may be empty if no matching item code is found in 'item_descrp'.\n",
    "    \"\"\"\n",
    "    item_name = item_descrp.loc[item_descrp['item_code'] == item_num]['item_desc'].tolist()\n",
    "    return item_name"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "2QdTPAUQlLQE"
   },
   "outputs": [],
   "source": [
    "def antecedents_description_mapping(antecendents):\n",
    "    \"\"\"\n",
    "    This function takes in a list of antecedents as strings, where each string may represent one or more item codes.\n",
    "    The function processes the input antecedents and maps each item code to its corresponding item description using the\n",
    "    'item_description_mapping' function. The resulting list of item descriptions is returned.\n",
    "\n",
    "    Args:\n",
    "    antecedents (list): A list of strings, where each string represents one or more item codes separated by commas.\n",
    "\n",
    "    Returns:\n",
    "    list: A list containing the item descriptions corresponding to the input antecedents. Each element of the list is either a\n",
    "          single item description or a list of item descriptions (in case the input antecedent contained multiple item codes).\n",
    "    \"\"\"\n",
    "\n",
    "    ante_lis = []\n",
    "    for item in antecendents:\n",
    "        item = item.split(\",\")\n",
    "        # Handle the case when the rules had a product bundle\n",
    "        if len(item) > 1:\n",
    "            item_lis = []\n",
    "            for i in item:\n",
    "                i = i.strip()\n",
    "                i = item_description_mapping(i)\n",
    "                item_lis.append(i)\n",
    "            #print(item_lis)\n",
    "            ante_lis.append(item_lis)\n",
    "        else:\n",
    "            for i in item:\n",
    "                i = item_description_mapping(i)\n",
    "                ante_lis.append(i)\n",
    "                #print(i)\n",
    "    return ante_lis"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "QeyB7KrIk6Jh"
   },
   "outputs": [],
   "source": [
    "def consequents_description_mapping(consequents):\n",
    "    \"\"\"\n",
    "    This function takes in a list of consequents as strings, where each string may represent one or more item codes.\n",
    "    The function processes the input consequents and maps each item code to its corresponding item description using the\n",
    "    'item_description_mapping' function. The resulting list of item descriptions is returned.\n",
    "\n",
    "    Args:\n",
    "    consequents (list): A list of strings, where each string represents one or more item codes separated by commas.\n",
    "\n",
    "    Returns:\n",
    "    list: A list containing the item descriptions corresponding to the input consequents. Each element of the list is either a\n",
    "          single item description or a list of item descriptions (in case the input consequent contained multiple item codes).\n",
    "    \"\"\"\n",
    "\n",
    "    conse_lis = []\n",
    "    for item in consequents:\n",
    "        item = item.split(\",\")\n",
    "        # Handle the case when the rules had a product bundle\n",
    "        if len(item) > 1:\n",
    "            item_lis = []\n",
    "            for i in item:\n",
    "                i = i.strip()\n",
    "                i = item_description_mapping(i)\n",
    "                item_lis.append(i)\n",
    "            #print(item_lis)\n",
    "            conse_lis.append(item_lis)\n",
    "        else:\n",
    "            for i in item:\n",
    "                i = item_description_mapping(i)\n",
    "                #print(i)\n",
    "                conse_lis.append(i)\n",
    "    return conse_lis"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "VhA4pLkURusA"
   },
   "outputs": [],
   "source": [
    "### Make a copy of our associaltion rules dataframe\n",
    "association_rules_df = basket_association_rules.copy()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "hUsVZd8aGzUe"
   },
   "outputs": [],
   "source": [
    "### Call the function and map the item description to the item code\n",
    "ante = association_rules_df['antecedents']\n",
    "conse = association_rules_df['consequents']\n",
    "ante_mapped_list = antecedents_description_mapping(ante)\n",
    "conse_mapped_list = consequents_description_mapping(conse)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 354
    },
    "id": "VK8jL8jbadD6",
    "outputId": "265f3276-9177-4161-a356-290bb4fe9bf0"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-18b60c29-50a2-493d-9aa9-0d148b8e87f8\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>antecedents</th>\n",
       "      <th>consequents</th>\n",
       "      <th>antecedent support</th>\n",
       "      <th>consequent support</th>\n",
       "      <th>support</th>\n",
       "      <th>confidence</th>\n",
       "      <th>lift</th>\n",
       "      <th>leverage</th>\n",
       "      <th>conviction</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>[AYAMAS CHICKEN FRANKFURTER 340G]</td>\n",
       "      <td>[AYAMAS CRISPY NUGGET 850G]</td>\n",
       "      <td>0.065550</td>\n",
       "      <td>0.012848</td>\n",
       "      <td>0.003016</td>\n",
       "      <td>0.046011</td>\n",
       "      <td>3.581256</td>\n",
       "      <td>0.002174</td>\n",
       "      <td>1.034762</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>[AYAMAS CRISPY NUGGET 850G]</td>\n",
       "      <td>[AYAMAS CHICKEN FRANKFURTER 340G]</td>\n",
       "      <td>0.012848</td>\n",
       "      <td>0.065550</td>\n",
       "      <td>0.003016</td>\n",
       "      <td>0.234750</td>\n",
       "      <td>3.581256</td>\n",
       "      <td>0.002174</td>\n",
       "      <td>1.221105</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>[FARMS BEST GOLDEN CRUMB CHIC NUGGET 1KG]</td>\n",
       "      <td>[AYAMAS CHICKEN FRANKFURTER 340G]</td>\n",
       "      <td>0.006389</td>\n",
       "      <td>0.065550</td>\n",
       "      <td>0.001152</td>\n",
       "      <td>0.180385</td>\n",
       "      <td>2.751882</td>\n",
       "      <td>0.000734</td>\n",
       "      <td>1.140109</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>[AYAMAS CHICKEN FRANKFURTER 340G]</td>\n",
       "      <td>[FARMS BEST GOLDEN CRUMB CHIC NUGGET 1KG]</td>\n",
       "      <td>0.065550</td>\n",
       "      <td>0.006389</td>\n",
       "      <td>0.001152</td>\n",
       "      <td>0.017581</td>\n",
       "      <td>2.751882</td>\n",
       "      <td>0.000734</td>\n",
       "      <td>1.011392</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>[AYAMAS CHICKEN FRANKFURTER 340G]</td>\n",
       "      <td>[AYAMAS CRISPY TEMPURA NUGGET 850G]</td>\n",
       "      <td>0.065550</td>\n",
       "      <td>0.018203</td>\n",
       "      <td>0.004052</td>\n",
       "      <td>0.061808</td>\n",
       "      <td>3.395580</td>\n",
       "      <td>0.002858</td>\n",
       "      <td>1.046479</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-18b60c29-50a2-493d-9aa9-0d148b8e87f8')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-18b60c29-50a2-493d-9aa9-0d148b8e87f8 button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-18b60c29-50a2-493d-9aa9-0d148b8e87f8');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "                                 antecedents  \\\n",
       "0          [AYAMAS CHICKEN FRANKFURTER 340G]   \n",
       "1                [AYAMAS CRISPY NUGGET 850G]   \n",
       "2  [FARMS BEST GOLDEN CRUMB CHIC NUGGET 1KG]   \n",
       "3          [AYAMAS CHICKEN FRANKFURTER 340G]   \n",
       "4          [AYAMAS CHICKEN FRANKFURTER 340G]   \n",
       "\n",
       "                                 consequents  antecedent support  \\\n",
       "0                [AYAMAS CRISPY NUGGET 850G]            0.065550   \n",
       "1          [AYAMAS CHICKEN FRANKFURTER 340G]            0.012848   \n",
       "2          [AYAMAS CHICKEN FRANKFURTER 340G]            0.006389   \n",
       "3  [FARMS BEST GOLDEN CRUMB CHIC NUGGET 1KG]            0.065550   \n",
       "4        [AYAMAS CRISPY TEMPURA NUGGET 850G]            0.065550   \n",
       "\n",
       "   consequent support   support  confidence      lift  leverage  conviction  \n",
       "0            0.012848  0.003016    0.046011  3.581256  0.002174    1.034762  \n",
       "1            0.065550  0.003016    0.234750  3.581256  0.002174    1.221105  \n",
       "2            0.065550  0.001152    0.180385  2.751882  0.000734    1.140109  \n",
       "3            0.006389  0.001152    0.017581  2.751882  0.000734    1.011392  \n",
       "4            0.018203  0.004052    0.061808  3.395580  0.002858    1.046479  "
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "### Replace the item_code with its corresponding item_description in our association rule dataframe\n",
    "association_rules_df['antecedents'] = ante_mapped_list\n",
    "association_rules_df['consequents'] = conse_mapped_list\n",
    "association_rules_df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "O4iJ1QYZbeD_"
   },
   "outputs": [],
   "source": [
    "### Sort the rules dataframe with confidence metric value in descending order\n",
    "sorted_association_rules_df = association_rules_df.sort_values('confidence', ascending=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 1000
    },
    "id": "fBkpeh5cblNP",
    "outputId": "f9f436ea-65a3-453c-8e15-056fc4400eca"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-16516d3e-9dbd-48ed-8251-319c2e119f86\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>antecedents</th>\n",
       "      <th>consequents</th>\n",
       "      <th>antecedent support</th>\n",
       "      <th>consequent support</th>\n",
       "      <th>support</th>\n",
       "      <th>confidence</th>\n",
       "      <th>lift</th>\n",
       "      <th>leverage</th>\n",
       "      <th>conviction</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>41</th>\n",
       "      <td>[#INDIAN BUFFALO FQ SLICE 900GM]</td>\n",
       "      <td>[#WHOLE CHICKEN WITH HEAD &amp; FEET]</td>\n",
       "      <td>0.004922</td>\n",
       "      <td>0.200120</td>\n",
       "      <td>0.002557</td>\n",
       "      <td>0.519443</td>\n",
       "      <td>2.595658</td>\n",
       "      <td>0.001572</td>\n",
       "      <td>1.664486</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52</th>\n",
       "      <td>[IND DEFR BUFFALO BLOCK KG(5618)]</td>\n",
       "      <td>[#WHOLE CHICKEN WITH HEAD &amp; FEET]</td>\n",
       "      <td>0.005287</td>\n",
       "      <td>0.200120</td>\n",
       "      <td>0.002287</td>\n",
       "      <td>0.432546</td>\n",
       "      <td>2.161431</td>\n",
       "      <td>0.001229</td>\n",
       "      <td>1.409594</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>55</th>\n",
       "      <td>[BRAZIL DFZN BEEF MIX FQUARTER BLOCK KG(5632)]</td>\n",
       "      <td>[#WHOLE CHICKEN WITH HEAD &amp; FEET]</td>\n",
       "      <td>0.007116</td>\n",
       "      <td>0.200120</td>\n",
       "      <td>0.002754</td>\n",
       "      <td>0.387033</td>\n",
       "      <td>1.934003</td>\n",
       "      <td>0.001330</td>\n",
       "      <td>1.304931</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>[JULIES LOVE LETTER STRAWBERRY (TIN) 700G]</td>\n",
       "      <td>[JULIES LOVE LETTER CHOC (TIN) 700G]</td>\n",
       "      <td>0.024190</td>\n",
       "      <td>0.068648</td>\n",
       "      <td>0.009086</td>\n",
       "      <td>0.375614</td>\n",
       "      <td>5.471584</td>\n",
       "      <td>0.007426</td>\n",
       "      <td>1.491629</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44</th>\n",
       "      <td>[TESCO EDV CHICKEN FRANKFURTER 340G]</td>\n",
       "      <td>[#WHOLE CHICKEN WITH HEAD &amp; FEET]</td>\n",
       "      <td>0.019498</td>\n",
       "      <td>0.200120</td>\n",
       "      <td>0.006431</td>\n",
       "      <td>0.329820</td>\n",
       "      <td>1.648112</td>\n",
       "      <td>0.002529</td>\n",
       "      <td>1.193530</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>100</th>\n",
       "      <td>[ZESS WAFER ROLL TIRAMISU 700G]</td>\n",
       "      <td>[ZESS WAFER ROLL CHOCOLATE 700G]</td>\n",
       "      <td>0.021672</td>\n",
       "      <td>0.049315</td>\n",
       "      <td>0.006522</td>\n",
       "      <td>0.300920</td>\n",
       "      <td>6.101966</td>\n",
       "      <td>0.005453</td>\n",
       "      <td>1.359909</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38</th>\n",
       "      <td>[TESCO CHOICE SMOKED FRANK 340G]</td>\n",
       "      <td>[#WHOLE CHICKEN WITH HEAD &amp; FEET]</td>\n",
       "      <td>0.017381</td>\n",
       "      <td>0.200120</td>\n",
       "      <td>0.004340</td>\n",
       "      <td>0.249681</td>\n",
       "      <td>1.247657</td>\n",
       "      <td>0.000861</td>\n",
       "      <td>1.066053</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>[JULIE S CHEESE SANDWICH 330G]</td>\n",
       "      <td>[JULIE S P.BUTTER SANDWICH 360G]</td>\n",
       "      <td>0.004583</td>\n",
       "      <td>0.011192</td>\n",
       "      <td>0.001142</td>\n",
       "      <td>0.249231</td>\n",
       "      <td>22.269566</td>\n",
       "      <td>0.001091</td>\n",
       "      <td>1.317060</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>48</th>\n",
       "      <td>[TESCO GOLDEN CRUMB NUGGET 900G]</td>\n",
       "      <td>[#WHOLE CHICKEN WITH HEAD &amp; FEET]</td>\n",
       "      <td>0.020614</td>\n",
       "      <td>0.200120</td>\n",
       "      <td>0.004954</td>\n",
       "      <td>0.240324</td>\n",
       "      <td>1.200901</td>\n",
       "      <td>0.000829</td>\n",
       "      <td>1.052923</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>[AYAMAS CRISPY NUGGET 850G]</td>\n",
       "      <td>[AYAMAS CHICKEN FRANKFURTER 340G]</td>\n",
       "      <td>0.012848</td>\n",
       "      <td>0.065550</td>\n",
       "      <td>0.003016</td>\n",
       "      <td>0.234750</td>\n",
       "      <td>3.581256</td>\n",
       "      <td>0.002174</td>\n",
       "      <td>1.221105</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>47</th>\n",
       "      <td>[TESCO EDV MINCED MEAT 400G]</td>\n",
       "      <td>[#WHOLE CHICKEN WITH HEAD &amp; FEET]</td>\n",
       "      <td>0.006086</td>\n",
       "      <td>0.200120</td>\n",
       "      <td>0.001418</td>\n",
       "      <td>0.233035</td>\n",
       "      <td>1.164478</td>\n",
       "      <td>0.000200</td>\n",
       "      <td>1.042916</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>61</th>\n",
       "      <td>[CHICKEN WING KG]</td>\n",
       "      <td>[CHICKEN DRUMSTICK KG]</td>\n",
       "      <td>0.005673</td>\n",
       "      <td>0.010464</td>\n",
       "      <td>0.001281</td>\n",
       "      <td>0.225852</td>\n",
       "      <td>21.583242</td>\n",
       "      <td>0.001222</td>\n",
       "      <td>1.278226</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50</th>\n",
       "      <td>[TESCO CRINKLE CUT FRIES 1KG]</td>\n",
       "      <td>[#WHOLE CHICKEN WITH HEAD &amp; FEET]</td>\n",
       "      <td>0.007491</td>\n",
       "      <td>0.200120</td>\n",
       "      <td>0.001670</td>\n",
       "      <td>0.222969</td>\n",
       "      <td>1.114178</td>\n",
       "      <td>0.000171</td>\n",
       "      <td>1.029406</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>[AYAMAS CRISPY TEMPURA NUGGET 850G]</td>\n",
       "      <td>[AYAMAS CHICKEN FRANKFURTER 340G]</td>\n",
       "      <td>0.018203</td>\n",
       "      <td>0.065550</td>\n",
       "      <td>0.004052</td>\n",
       "      <td>0.222579</td>\n",
       "      <td>3.395580</td>\n",
       "      <td>0.002858</td>\n",
       "      <td>1.201987</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>56</th>\n",
       "      <td>[FB GOLDEN TEMPURA CHICKEN NUGGET 800G]</td>\n",
       "      <td>[#WHOLE CHICKEN WITH HEAD &amp; FEET]</td>\n",
       "      <td>0.005893</td>\n",
       "      <td>0.200120</td>\n",
       "      <td>0.001257</td>\n",
       "      <td>0.213333</td>\n",
       "      <td>1.066027</td>\n",
       "      <td>0.000078</td>\n",
       "      <td>1.016797</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>[FARMS BEST GOLDEN CRUMB CHIC NUGGET 1KG]</td>\n",
       "      <td>[#WHOLE CHICKEN WITH HEAD &amp; FEET]</td>\n",
       "      <td>0.006389</td>\n",
       "      <td>0.200120</td>\n",
       "      <td>0.001338</td>\n",
       "      <td>0.209398</td>\n",
       "      <td>1.046360</td>\n",
       "      <td>0.000059</td>\n",
       "      <td>1.011735</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>42</th>\n",
       "      <td>[TESCO EDV FILAMENT STICKS 250G]</td>\n",
       "      <td>[#WHOLE CHICKEN WITH HEAD &amp; FEET]</td>\n",
       "      <td>0.006534</td>\n",
       "      <td>0.200120</td>\n",
       "      <td>0.001344</td>\n",
       "      <td>0.205674</td>\n",
       "      <td>1.027752</td>\n",
       "      <td>0.000036</td>\n",
       "      <td>1.006992</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>102</th>\n",
       "      <td>[CHIPSMORE ORI HANDY MP 8X28G]</td>\n",
       "      <td>[CHIPSMORE DOUBLE CHOC HANDY MP 8X28G]</td>\n",
       "      <td>0.017600</td>\n",
       "      <td>0.018928</td>\n",
       "      <td>0.003189</td>\n",
       "      <td>0.181204</td>\n",
       "      <td>9.573388</td>\n",
       "      <td>0.002856</td>\n",
       "      <td>1.198189</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>[FARMS BEST GOLDEN CRUMB CHIC NUGGET 1KG]</td>\n",
       "      <td>[AYAMAS CHICKEN FRANKFURTER 340G]</td>\n",
       "      <td>0.006389</td>\n",
       "      <td>0.065550</td>\n",
       "      <td>0.001152</td>\n",
       "      <td>0.180385</td>\n",
       "      <td>2.751882</td>\n",
       "      <td>0.000734</td>\n",
       "      <td>1.140109</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76</th>\n",
       "      <td>[MUNCHYS OATKRUNCH ORGANIC HAZELNUT 416G]</td>\n",
       "      <td>[MUNCHYS OAT KRUNCH NUTTY CHOCOLATE 416G]</td>\n",
       "      <td>0.006729</td>\n",
       "      <td>0.018634</td>\n",
       "      <td>0.001175</td>\n",
       "      <td>0.174551</td>\n",
       "      <td>9.367452</td>\n",
       "      <td>0.001049</td>\n",
       "      <td>1.188888</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>[LP FILAMENT STICKS 250G]</td>\n",
       "      <td>[AYAMAS CHICKEN FRANKFURTER 340G]</td>\n",
       "      <td>0.014103</td>\n",
       "      <td>0.065550</td>\n",
       "      <td>0.002404</td>\n",
       "      <td>0.170429</td>\n",
       "      <td>2.599994</td>\n",
       "      <td>0.001479</td>\n",
       "      <td>1.126425</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>70</th>\n",
       "      <td>[MUNCHYS OATKRUNCH ORGANIC HAZELNUT 416G]</td>\n",
       "      <td>[MUNCHYS OATKRUNCH S/BERRY B/CURRANT 416G]</td>\n",
       "      <td>0.006729</td>\n",
       "      <td>0.013841</td>\n",
       "      <td>0.001136</td>\n",
       "      <td>0.168862</td>\n",
       "      <td>12.200287</td>\n",
       "      <td>0.001043</td>\n",
       "      <td>1.186517</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>103</th>\n",
       "      <td>[CHIPSMORE DOUBLE CHOC HANDY MP 8X28G]</td>\n",
       "      <td>[CHIPSMORE ORI HANDY MP 8X28G]</td>\n",
       "      <td>0.018928</td>\n",
       "      <td>0.017600</td>\n",
       "      <td>0.003189</td>\n",
       "      <td>0.168494</td>\n",
       "      <td>9.573388</td>\n",
       "      <td>0.002856</td>\n",
       "      <td>1.181470</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>58</th>\n",
       "      <td>[CHICKEN THIGH KG]</td>\n",
       "      <td>[CHICKEN DRUMSTICK KG]</td>\n",
       "      <td>0.009147</td>\n",
       "      <td>0.010464</td>\n",
       "      <td>0.001525</td>\n",
       "      <td>0.166740</td>\n",
       "      <td>15.934272</td>\n",
       "      <td>0.001429</td>\n",
       "      <td>1.187548</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>[HPG HK EGG ROLL(EXCLUSIVE) 400G]</td>\n",
       "      <td>[JULIES LOVE LETTER CHOC (TIN) 700G]</td>\n",
       "      <td>0.009070</td>\n",
       "      <td>0.068648</td>\n",
       "      <td>0.001372</td>\n",
       "      <td>0.151266</td>\n",
       "      <td>2.203498</td>\n",
       "      <td>0.000749</td>\n",
       "      <td>1.097343</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>[TESCO CRINKLE CUT FRIES 1KG]</td>\n",
       "      <td>[AYAMAS CHICKEN FRANKFURTER 340G]</td>\n",
       "      <td>0.007491</td>\n",
       "      <td>0.065550</td>\n",
       "      <td>0.001132</td>\n",
       "      <td>0.151157</td>\n",
       "      <td>2.305987</td>\n",
       "      <td>0.000641</td>\n",
       "      <td>1.100851</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>[TESCO GOLDEN CRUMB NUGGET 900G]</td>\n",
       "      <td>[AYAMAS CHICKEN FRANKFURTER 340G]</td>\n",
       "      <td>0.020614</td>\n",
       "      <td>0.065550</td>\n",
       "      <td>0.003008</td>\n",
       "      <td>0.145915</td>\n",
       "      <td>2.226021</td>\n",
       "      <td>0.001657</td>\n",
       "      <td>1.094095</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>59</th>\n",
       "      <td>[CHICKEN DRUMSTICK KG]</td>\n",
       "      <td>[CHICKEN THIGH KG]</td>\n",
       "      <td>0.010464</td>\n",
       "      <td>0.009147</td>\n",
       "      <td>0.001525</td>\n",
       "      <td>0.145745</td>\n",
       "      <td>15.934272</td>\n",
       "      <td>0.001429</td>\n",
       "      <td>1.159904</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>[TESCO ORIGINAL TEMPURA NUGGET 850G]</td>\n",
       "      <td>[AYAMAS CHICKEN FRANKFURTER 340G]</td>\n",
       "      <td>0.018646</td>\n",
       "      <td>0.065550</td>\n",
       "      <td>0.002708</td>\n",
       "      <td>0.145219</td>\n",
       "      <td>2.215403</td>\n",
       "      <td>0.001486</td>\n",
       "      <td>1.093204</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>62</th>\n",
       "      <td>[CHICKEN DRUMSTICK KG]</td>\n",
       "      <td>[CHICKEN BONE IN CUBE]</td>\n",
       "      <td>0.010464</td>\n",
       "      <td>0.036103</td>\n",
       "      <td>0.001453</td>\n",
       "      <td>0.138814</td>\n",
       "      <td>3.844939</td>\n",
       "      <td>0.001075</td>\n",
       "      <td>1.119267</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69</th>\n",
       "      <td>[MUNCHYS OATKRUNCH S/BERRY B/CURRANT 416G]</td>\n",
       "      <td>[MUNCHYS OATKRUNCH DARK CHOC 416G]</td>\n",
       "      <td>0.013841</td>\n",
       "      <td>0.019754</td>\n",
       "      <td>0.001886</td>\n",
       "      <td>0.136245</td>\n",
       "      <td>6.897086</td>\n",
       "      <td>0.001612</td>\n",
       "      <td>1.134865</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73</th>\n",
       "      <td>[MUNCHYS OATKRUNCH S/BERRY B/CURRANT 416G]</td>\n",
       "      <td>[MUNCHYS OAT KRUNCH NUTTY CHOCOLATE 416G]</td>\n",
       "      <td>0.013841</td>\n",
       "      <td>0.018634</td>\n",
       "      <td>0.001839</td>\n",
       "      <td>0.132897</td>\n",
       "      <td>7.132034</td>\n",
       "      <td>0.001581</td>\n",
       "      <td>1.131775</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>[JULIES LOVE LETTER CHOC (TIN) 700G]</td>\n",
       "      <td>[JULIES LOVE LETTER STRAWBERRY (TIN) 700G]</td>\n",
       "      <td>0.068648</td>\n",
       "      <td>0.024190</td>\n",
       "      <td>0.009086</td>\n",
       "      <td>0.132359</td>\n",
       "      <td>5.471584</td>\n",
       "      <td>0.007426</td>\n",
       "      <td>1.124670</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>101</th>\n",
       "      <td>[ZESS WAFER ROLL CHOCOLATE 700G]</td>\n",
       "      <td>[ZESS WAFER ROLL TIRAMISU 700G]</td>\n",
       "      <td>0.049315</td>\n",
       "      <td>0.021672</td>\n",
       "      <td>0.006522</td>\n",
       "      <td>0.132241</td>\n",
       "      <td>6.101966</td>\n",
       "      <td>0.005453</td>\n",
       "      <td>1.127419</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>64</th>\n",
       "      <td>[CHICKEN THIGH KG]</td>\n",
       "      <td>[CHICKEN BONE IN CUBE]</td>\n",
       "      <td>0.009147</td>\n",
       "      <td>0.036103</td>\n",
       "      <td>0.001205</td>\n",
       "      <td>0.131718</td>\n",
       "      <td>3.648392</td>\n",
       "      <td>0.000875</td>\n",
       "      <td>1.110120</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>[TESCO HOT + SPICY TEMPURA NUGGET 850G]</td>\n",
       "      <td>[AYAMAS CHICKEN FRANKFURTER 340G]</td>\n",
       "      <td>0.015930</td>\n",
       "      <td>0.065550</td>\n",
       "      <td>0.002057</td>\n",
       "      <td>0.129126</td>\n",
       "      <td>1.969899</td>\n",
       "      <td>0.001013</td>\n",
       "      <td>1.073003</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>60</th>\n",
       "      <td>[CHICKEN DRUMSTICK KG]</td>\n",
       "      <td>[CHICKEN WING KG]</td>\n",
       "      <td>0.010464</td>\n",
       "      <td>0.005673</td>\n",
       "      <td>0.001281</td>\n",
       "      <td>0.122449</td>\n",
       "      <td>21.583242</td>\n",
       "      <td>0.001222</td>\n",
       "      <td>1.133070</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>66</th>\n",
       "      <td>[CHICKEN WHOLE LEG PCS (6239)]</td>\n",
       "      <td>[CHICKEN BONE IN CUBE]</td>\n",
       "      <td>0.008397</td>\n",
       "      <td>0.036103</td>\n",
       "      <td>0.001025</td>\n",
       "      <td>0.122121</td>\n",
       "      <td>3.382566</td>\n",
       "      <td>0.000722</td>\n",
       "      <td>1.097984</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>94</th>\n",
       "      <td>[TESCO HOT + SPICY TEMPURA NUGGET 850G]</td>\n",
       "      <td>[TESCO ORIGINAL TEMPURA NUGGET 850G]</td>\n",
       "      <td>0.015930</td>\n",
       "      <td>0.018646</td>\n",
       "      <td>0.001892</td>\n",
       "      <td>0.118756</td>\n",
       "      <td>6.369005</td>\n",
       "      <td>0.001595</td>\n",
       "      <td>1.113600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75</th>\n",
       "      <td>[MUNCHYS OAT KRUNCH NUTTY CHOCOLATE 416G]</td>\n",
       "      <td>[MUNCHYS OATKRUNCH DARK CHOC 416G]</td>\n",
       "      <td>0.018634</td>\n",
       "      <td>0.019754</td>\n",
       "      <td>0.002212</td>\n",
       "      <td>0.118716</td>\n",
       "      <td>6.009718</td>\n",
       "      <td>0.001844</td>\n",
       "      <td>1.112292</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>74</th>\n",
       "      <td>[MUNCHYS OATKRUNCH DARK CHOC 416G]</td>\n",
       "      <td>[MUNCHYS OAT KRUNCH NUTTY CHOCOLATE 416G]</td>\n",
       "      <td>0.019754</td>\n",
       "      <td>0.018634</td>\n",
       "      <td>0.002212</td>\n",
       "      <td>0.111984</td>\n",
       "      <td>6.009718</td>\n",
       "      <td>0.001844</td>\n",
       "      <td>1.105122</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37</th>\n",
       "      <td>[QUAKER INSTANT OAT 1.35KG FREE CONTAINER]</td>\n",
       "      <td>[JULIES LOVE LETTER CHOC (TIN) 700G]</td>\n",
       "      <td>0.012503</td>\n",
       "      <td>0.068648</td>\n",
       "      <td>0.001279</td>\n",
       "      <td>0.102320</td>\n",
       "      <td>1.490503</td>\n",
       "      <td>0.000421</td>\n",
       "      <td>1.037510</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>[JULIE S P.BUTTER SANDWICH 360G]</td>\n",
       "      <td>[JULIE S CHEESE SANDWICH 330G]</td>\n",
       "      <td>0.011192</td>\n",
       "      <td>0.004583</td>\n",
       "      <td>0.001142</td>\n",
       "      <td>0.102070</td>\n",
       "      <td>22.269566</td>\n",
       "      <td>0.001091</td>\n",
       "      <td>1.108568</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95</th>\n",
       "      <td>[TESCO ORIGINAL TEMPURA NUGGET 850G]</td>\n",
       "      <td>[TESCO HOT + SPICY TEMPURA NUGGET 850G]</td>\n",
       "      <td>0.018646</td>\n",
       "      <td>0.015930</td>\n",
       "      <td>0.001892</td>\n",
       "      <td>0.101459</td>\n",
       "      <td>6.369005</td>\n",
       "      <td>0.001595</td>\n",
       "      <td>1.095186</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>82</th>\n",
       "      <td>[TESCO CHOICE SMOKED FRANK 340G]</td>\n",
       "      <td>[TESCO GOLDEN CRUMB NUGGET 900G]</td>\n",
       "      <td>0.017381</td>\n",
       "      <td>0.020614</td>\n",
       "      <td>0.001761</td>\n",
       "      <td>0.101310</td>\n",
       "      <td>4.914567</td>\n",
       "      <td>0.001403</td>\n",
       "      <td>1.089793</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>91</th>\n",
       "      <td>[OREO VANILLA MP 256.5G]</td>\n",
       "      <td>[CHIPSMORE ORI HANDY MP 8X28G]</td>\n",
       "      <td>0.016365</td>\n",
       "      <td>0.017600</td>\n",
       "      <td>0.001642</td>\n",
       "      <td>0.100332</td>\n",
       "      <td>5.700628</td>\n",
       "      <td>0.001354</td>\n",
       "      <td>1.091959</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>72</th>\n",
       "      <td>[MUNCHYS OAT KRUNCH NUTTY CHOCOLATE 416G]</td>\n",
       "      <td>[MUNCHYS OATKRUNCH S/BERRY B/CURRANT 416G]</td>\n",
       "      <td>0.018634</td>\n",
       "      <td>0.013841</td>\n",
       "      <td>0.001839</td>\n",
       "      <td>0.098713</td>\n",
       "      <td>7.132034</td>\n",
       "      <td>0.001581</td>\n",
       "      <td>1.094168</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>[JULIE S P.BUTTER SANDWICH 360G]</td>\n",
       "      <td>[HS PING PONG CREAM CREAKER 428G]</td>\n",
       "      <td>0.011192</td>\n",
       "      <td>0.064915</td>\n",
       "      <td>0.001096</td>\n",
       "      <td>0.097930</td>\n",
       "      <td>1.508586</td>\n",
       "      <td>0.000369</td>\n",
       "      <td>1.036599</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>78</th>\n",
       "      <td>[TESCO CHOICE SMOKED FRANK 340G]</td>\n",
       "      <td>[TESCO ORIGINAL TEMPURA NUGGET 850G]</td>\n",
       "      <td>0.017381</td>\n",
       "      <td>0.018646</td>\n",
       "      <td>0.001662</td>\n",
       "      <td>0.095630</td>\n",
       "      <td>5.128754</td>\n",
       "      <td>0.001338</td>\n",
       "      <td>1.085125</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>68</th>\n",
       "      <td>[MUNCHYS OATKRUNCH DARK CHOC 416G]</td>\n",
       "      <td>[MUNCHYS OATKRUNCH S/BERRY B/CURRANT 416G]</td>\n",
       "      <td>0.019754</td>\n",
       "      <td>0.013841</td>\n",
       "      <td>0.001886</td>\n",
       "      <td>0.095461</td>\n",
       "      <td>6.897086</td>\n",
       "      <td>0.001612</td>\n",
       "      <td>1.090235</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-16516d3e-9dbd-48ed-8251-319c2e119f86')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-16516d3e-9dbd-48ed-8251-319c2e119f86 button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-16516d3e-9dbd-48ed-8251-319c2e119f86');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "                                        antecedents  \\\n",
       "41                 [#INDIAN BUFFALO FQ SLICE 900GM]   \n",
       "52                [IND DEFR BUFFALO BLOCK KG(5618)]   \n",
       "55   [BRAZIL DFZN BEEF MIX FQUARTER BLOCK KG(5632)]   \n",
       "27       [JULIES LOVE LETTER STRAWBERRY (TIN) 700G]   \n",
       "44             [TESCO EDV CHICKEN FRANKFURTER 340G]   \n",
       "100                 [ZESS WAFER ROLL TIRAMISU 700G]   \n",
       "38                 [TESCO CHOICE SMOKED FRANK 340G]   \n",
       "23                   [JULIE S CHEESE SANDWICH 330G]   \n",
       "48                 [TESCO GOLDEN CRUMB NUGGET 900G]   \n",
       "1                       [AYAMAS CRISPY NUGGET 850G]   \n",
       "47                     [TESCO EDV MINCED MEAT 400G]   \n",
       "61                                [CHICKEN WING KG]   \n",
       "50                    [TESCO CRINKLE CUT FRIES 1KG]   \n",
       "5               [AYAMAS CRISPY TEMPURA NUGGET 850G]   \n",
       "56          [FB GOLDEN TEMPURA CHICKEN NUGGET 800G]   \n",
       "20        [FARMS BEST GOLDEN CRUMB CHIC NUGGET 1KG]   \n",
       "42                 [TESCO EDV FILAMENT STICKS 250G]   \n",
       "102                  [CHIPSMORE ORI HANDY MP 8X28G]   \n",
       "2         [FARMS BEST GOLDEN CRUMB CHIC NUGGET 1KG]   \n",
       "76        [MUNCHYS OATKRUNCH ORGANIC HAZELNUT 416G]   \n",
       "6                         [LP FILAMENT STICKS 250G]   \n",
       "70        [MUNCHYS OATKRUNCH ORGANIC HAZELNUT 416G]   \n",
       "103          [CHIPSMORE DOUBLE CHOC HANDY MP 8X28G]   \n",
       "58                               [CHICKEN THIGH KG]   \n",
       "31                [HPG HK EGG ROLL(EXCLUSIVE) 400G]   \n",
       "15                    [TESCO CRINKLE CUT FRIES 1KG]   \n",
       "12                 [TESCO GOLDEN CRUMB NUGGET 900G]   \n",
       "59                           [CHICKEN DRUMSTICK KG]   \n",
       "9              [TESCO ORIGINAL TEMPURA NUGGET 850G]   \n",
       "62                           [CHICKEN DRUMSTICK KG]   \n",
       "69       [MUNCHYS OATKRUNCH S/BERRY B/CURRANT 416G]   \n",
       "73       [MUNCHYS OATKRUNCH S/BERRY B/CURRANT 416G]   \n",
       "26             [JULIES LOVE LETTER CHOC (TIN) 700G]   \n",
       "101                [ZESS WAFER ROLL CHOCOLATE 700G]   \n",
       "64                               [CHICKEN THIGH KG]   \n",
       "10          [TESCO HOT + SPICY TEMPURA NUGGET 850G]   \n",
       "60                           [CHICKEN DRUMSTICK KG]   \n",
       "66                   [CHICKEN WHOLE LEG PCS (6239)]   \n",
       "94          [TESCO HOT + SPICY TEMPURA NUGGET 850G]   \n",
       "75        [MUNCHYS OAT KRUNCH NUTTY CHOCOLATE 416G]   \n",
       "74               [MUNCHYS OATKRUNCH DARK CHOC 416G]   \n",
       "37       [QUAKER INSTANT OAT 1.35KG FREE CONTAINER]   \n",
       "22                 [JULIE S P.BUTTER SANDWICH 360G]   \n",
       "95             [TESCO ORIGINAL TEMPURA NUGGET 850G]   \n",
       "82                 [TESCO CHOICE SMOKED FRANK 340G]   \n",
       "91                         [OREO VANILLA MP 256.5G]   \n",
       "72        [MUNCHYS OAT KRUNCH NUTTY CHOCOLATE 416G]   \n",
       "24                 [JULIE S P.BUTTER SANDWICH 360G]   \n",
       "78                 [TESCO CHOICE SMOKED FRANK 340G]   \n",
       "68               [MUNCHYS OATKRUNCH DARK CHOC 416G]   \n",
       "\n",
       "                                    consequents  antecedent support  \\\n",
       "41            [#WHOLE CHICKEN WITH HEAD & FEET]            0.004922   \n",
       "52            [#WHOLE CHICKEN WITH HEAD & FEET]            0.005287   \n",
       "55            [#WHOLE CHICKEN WITH HEAD & FEET]            0.007116   \n",
       "27         [JULIES LOVE LETTER CHOC (TIN) 700G]            0.024190   \n",
       "44            [#WHOLE CHICKEN WITH HEAD & FEET]            0.019498   \n",
       "100            [ZESS WAFER ROLL CHOCOLATE 700G]            0.021672   \n",
       "38            [#WHOLE CHICKEN WITH HEAD & FEET]            0.017381   \n",
       "23             [JULIE S P.BUTTER SANDWICH 360G]            0.004583   \n",
       "48            [#WHOLE CHICKEN WITH HEAD & FEET]            0.020614   \n",
       "1             [AYAMAS CHICKEN FRANKFURTER 340G]            0.012848   \n",
       "47            [#WHOLE CHICKEN WITH HEAD & FEET]            0.006086   \n",
       "61                       [CHICKEN DRUMSTICK KG]            0.005673   \n",
       "50            [#WHOLE CHICKEN WITH HEAD & FEET]            0.007491   \n",
       "5             [AYAMAS CHICKEN FRANKFURTER 340G]            0.018203   \n",
       "56            [#WHOLE CHICKEN WITH HEAD & FEET]            0.005893   \n",
       "20            [#WHOLE CHICKEN WITH HEAD & FEET]            0.006389   \n",
       "42            [#WHOLE CHICKEN WITH HEAD & FEET]            0.006534   \n",
       "102      [CHIPSMORE DOUBLE CHOC HANDY MP 8X28G]            0.017600   \n",
       "2             [AYAMAS CHICKEN FRANKFURTER 340G]            0.006389   \n",
       "76    [MUNCHYS OAT KRUNCH NUTTY CHOCOLATE 416G]            0.006729   \n",
       "6             [AYAMAS CHICKEN FRANKFURTER 340G]            0.014103   \n",
       "70   [MUNCHYS OATKRUNCH S/BERRY B/CURRANT 416G]            0.006729   \n",
       "103              [CHIPSMORE ORI HANDY MP 8X28G]            0.018928   \n",
       "58                       [CHICKEN DRUMSTICK KG]            0.009147   \n",
       "31         [JULIES LOVE LETTER CHOC (TIN) 700G]            0.009070   \n",
       "15            [AYAMAS CHICKEN FRANKFURTER 340G]            0.007491   \n",
       "12            [AYAMAS CHICKEN FRANKFURTER 340G]            0.020614   \n",
       "59                           [CHICKEN THIGH KG]            0.010464   \n",
       "9             [AYAMAS CHICKEN FRANKFURTER 340G]            0.018646   \n",
       "62                       [CHICKEN BONE IN CUBE]            0.010464   \n",
       "69           [MUNCHYS OATKRUNCH DARK CHOC 416G]            0.013841   \n",
       "73    [MUNCHYS OAT KRUNCH NUTTY CHOCOLATE 416G]            0.013841   \n",
       "26   [JULIES LOVE LETTER STRAWBERRY (TIN) 700G]            0.068648   \n",
       "101             [ZESS WAFER ROLL TIRAMISU 700G]            0.049315   \n",
       "64                       [CHICKEN BONE IN CUBE]            0.009147   \n",
       "10            [AYAMAS CHICKEN FRANKFURTER 340G]            0.015930   \n",
       "60                            [CHICKEN WING KG]            0.010464   \n",
       "66                       [CHICKEN BONE IN CUBE]            0.008397   \n",
       "94         [TESCO ORIGINAL TEMPURA NUGGET 850G]            0.015930   \n",
       "75           [MUNCHYS OATKRUNCH DARK CHOC 416G]            0.018634   \n",
       "74    [MUNCHYS OAT KRUNCH NUTTY CHOCOLATE 416G]            0.019754   \n",
       "37         [JULIES LOVE LETTER CHOC (TIN) 700G]            0.012503   \n",
       "22               [JULIE S CHEESE SANDWICH 330G]            0.011192   \n",
       "95      [TESCO HOT + SPICY TEMPURA NUGGET 850G]            0.018646   \n",
       "82             [TESCO GOLDEN CRUMB NUGGET 900G]            0.017381   \n",
       "91               [CHIPSMORE ORI HANDY MP 8X28G]            0.016365   \n",
       "72   [MUNCHYS OATKRUNCH S/BERRY B/CURRANT 416G]            0.018634   \n",
       "24            [HS PING PONG CREAM CREAKER 428G]            0.011192   \n",
       "78         [TESCO ORIGINAL TEMPURA NUGGET 850G]            0.017381   \n",
       "68   [MUNCHYS OATKRUNCH S/BERRY B/CURRANT 416G]            0.019754   \n",
       "\n",
       "     consequent support   support  confidence       lift  leverage  conviction  \n",
       "41             0.200120  0.002557    0.519443   2.595658  0.001572    1.664486  \n",
       "52             0.200120  0.002287    0.432546   2.161431  0.001229    1.409594  \n",
       "55             0.200120  0.002754    0.387033   1.934003  0.001330    1.304931  \n",
       "27             0.068648  0.009086    0.375614   5.471584  0.007426    1.491629  \n",
       "44             0.200120  0.006431    0.329820   1.648112  0.002529    1.193530  \n",
       "100            0.049315  0.006522    0.300920   6.101966  0.005453    1.359909  \n",
       "38             0.200120  0.004340    0.249681   1.247657  0.000861    1.066053  \n",
       "23             0.011192  0.001142    0.249231  22.269566  0.001091    1.317060  \n",
       "48             0.200120  0.004954    0.240324   1.200901  0.000829    1.052923  \n",
       "1              0.065550  0.003016    0.234750   3.581256  0.002174    1.221105  \n",
       "47             0.200120  0.001418    0.233035   1.164478  0.000200    1.042916  \n",
       "61             0.010464  0.001281    0.225852  21.583242  0.001222    1.278226  \n",
       "50             0.200120  0.001670    0.222969   1.114178  0.000171    1.029406  \n",
       "5              0.065550  0.004052    0.222579   3.395580  0.002858    1.201987  \n",
       "56             0.200120  0.001257    0.213333   1.066027  0.000078    1.016797  \n",
       "20             0.200120  0.001338    0.209398   1.046360  0.000059    1.011735  \n",
       "42             0.200120  0.001344    0.205674   1.027752  0.000036    1.006992  \n",
       "102            0.018928  0.003189    0.181204   9.573388  0.002856    1.198189  \n",
       "2              0.065550  0.001152    0.180385   2.751882  0.000734    1.140109  \n",
       "76             0.018634  0.001175    0.174551   9.367452  0.001049    1.188888  \n",
       "6              0.065550  0.002404    0.170429   2.599994  0.001479    1.126425  \n",
       "70             0.013841  0.001136    0.168862  12.200287  0.001043    1.186517  \n",
       "103            0.017600  0.003189    0.168494   9.573388  0.002856    1.181470  \n",
       "58             0.010464  0.001525    0.166740  15.934272  0.001429    1.187548  \n",
       "31             0.068648  0.001372    0.151266   2.203498  0.000749    1.097343  \n",
       "15             0.065550  0.001132    0.151157   2.305987  0.000641    1.100851  \n",
       "12             0.065550  0.003008    0.145915   2.226021  0.001657    1.094095  \n",
       "59             0.009147  0.001525    0.145745  15.934272  0.001429    1.159904  \n",
       "9              0.065550  0.002708    0.145219   2.215403  0.001486    1.093204  \n",
       "62             0.036103  0.001453    0.138814   3.844939  0.001075    1.119267  \n",
       "69             0.019754  0.001886    0.136245   6.897086  0.001612    1.134865  \n",
       "73             0.018634  0.001839    0.132897   7.132034  0.001581    1.131775  \n",
       "26             0.024190  0.009086    0.132359   5.471584  0.007426    1.124670  \n",
       "101            0.021672  0.006522    0.132241   6.101966  0.005453    1.127419  \n",
       "64             0.036103  0.001205    0.131718   3.648392  0.000875    1.110120  \n",
       "10             0.065550  0.002057    0.129126   1.969899  0.001013    1.073003  \n",
       "60             0.005673  0.001281    0.122449  21.583242  0.001222    1.133070  \n",
       "66             0.036103  0.001025    0.122121   3.382566  0.000722    1.097984  \n",
       "94             0.018646  0.001892    0.118756   6.369005  0.001595    1.113600  \n",
       "75             0.019754  0.002212    0.118716   6.009718  0.001844    1.112292  \n",
       "74             0.018634  0.002212    0.111984   6.009718  0.001844    1.105122  \n",
       "37             0.068648  0.001279    0.102320   1.490503  0.000421    1.037510  \n",
       "22             0.004583  0.001142    0.102070  22.269566  0.001091    1.108568  \n",
       "95             0.015930  0.001892    0.101459   6.369005  0.001595    1.095186  \n",
       "82             0.020614  0.001761    0.101310   4.914567  0.001403    1.089793  \n",
       "91             0.017600  0.001642    0.100332   5.700628  0.001354    1.091959  \n",
       "72             0.013841  0.001839    0.098713   7.132034  0.001581    1.094168  \n",
       "24             0.064915  0.001096    0.097930   1.508586  0.000369    1.036599  \n",
       "78             0.018646  0.001662    0.095630   5.128754  0.001338    1.085125  \n",
       "68             0.013841  0.001886    0.095461   6.897086  0.001612    1.090235  "
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sorted_association_rules_df.head(50)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 1000
    },
    "id": "XaIh_6g0cfAc",
    "outputId": "d974551b-3613-4f55-d4cd-c0bc009314a2"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-19ed4200-116a-4c89-9318-f4f5e638e00c\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>antecedents</th>\n",
       "      <th>consequents</th>\n",
       "      <th>antecedent support</th>\n",
       "      <th>consequent support</th>\n",
       "      <th>support</th>\n",
       "      <th>confidence</th>\n",
       "      <th>lift</th>\n",
       "      <th>leverage</th>\n",
       "      <th>conviction</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>[JULIE S P.BUTTER SANDWICH 360G]</td>\n",
       "      <td>[JULIE S CHEESE SANDWICH 330G]</td>\n",
       "      <td>0.011192</td>\n",
       "      <td>0.004583</td>\n",
       "      <td>0.001142</td>\n",
       "      <td>0.102070</td>\n",
       "      <td>22.269566</td>\n",
       "      <td>0.001091</td>\n",
       "      <td>1.108568</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>[JULIE S CHEESE SANDWICH 330G]</td>\n",
       "      <td>[JULIE S P.BUTTER SANDWICH 360G]</td>\n",
       "      <td>0.004583</td>\n",
       "      <td>0.011192</td>\n",
       "      <td>0.001142</td>\n",
       "      <td>0.249231</td>\n",
       "      <td>22.269566</td>\n",
       "      <td>0.001091</td>\n",
       "      <td>1.317060</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>60</th>\n",
       "      <td>[CHICKEN DRUMSTICK KG]</td>\n",
       "      <td>[CHICKEN WING KG]</td>\n",
       "      <td>0.010464</td>\n",
       "      <td>0.005673</td>\n",
       "      <td>0.001281</td>\n",
       "      <td>0.122449</td>\n",
       "      <td>21.583242</td>\n",
       "      <td>0.001222</td>\n",
       "      <td>1.133070</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>61</th>\n",
       "      <td>[CHICKEN WING KG]</td>\n",
       "      <td>[CHICKEN DRUMSTICK KG]</td>\n",
       "      <td>0.005673</td>\n",
       "      <td>0.010464</td>\n",
       "      <td>0.001281</td>\n",
       "      <td>0.225852</td>\n",
       "      <td>21.583242</td>\n",
       "      <td>0.001222</td>\n",
       "      <td>1.278226</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>59</th>\n",
       "      <td>[CHICKEN DRUMSTICK KG]</td>\n",
       "      <td>[CHICKEN THIGH KG]</td>\n",
       "      <td>0.010464</td>\n",
       "      <td>0.009147</td>\n",
       "      <td>0.001525</td>\n",
       "      <td>0.145745</td>\n",
       "      <td>15.934272</td>\n",
       "      <td>0.001429</td>\n",
       "      <td>1.159904</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>58</th>\n",
       "      <td>[CHICKEN THIGH KG]</td>\n",
       "      <td>[CHICKEN DRUMSTICK KG]</td>\n",
       "      <td>0.009147</td>\n",
       "      <td>0.010464</td>\n",
       "      <td>0.001525</td>\n",
       "      <td>0.166740</td>\n",
       "      <td>15.934272</td>\n",
       "      <td>0.001429</td>\n",
       "      <td>1.187548</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>71</th>\n",
       "      <td>[MUNCHYS OATKRUNCH S/BERRY B/CURRANT 416G]</td>\n",
       "      <td>[MUNCHYS OATKRUNCH ORGANIC HAZELNUT 416G]</td>\n",
       "      <td>0.013841</td>\n",
       "      <td>0.006729</td>\n",
       "      <td>0.001136</td>\n",
       "      <td>0.082096</td>\n",
       "      <td>12.200287</td>\n",
       "      <td>0.001043</td>\n",
       "      <td>1.082108</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>70</th>\n",
       "      <td>[MUNCHYS OATKRUNCH ORGANIC HAZELNUT 416G]</td>\n",
       "      <td>[MUNCHYS OATKRUNCH S/BERRY B/CURRANT 416G]</td>\n",
       "      <td>0.006729</td>\n",
       "      <td>0.013841</td>\n",
       "      <td>0.001136</td>\n",
       "      <td>0.168862</td>\n",
       "      <td>12.200287</td>\n",
       "      <td>0.001043</td>\n",
       "      <td>1.186517</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>103</th>\n",
       "      <td>[CHIPSMORE DOUBLE CHOC HANDY MP 8X28G]</td>\n",
       "      <td>[CHIPSMORE ORI HANDY MP 8X28G]</td>\n",
       "      <td>0.018928</td>\n",
       "      <td>0.017600</td>\n",
       "      <td>0.003189</td>\n",
       "      <td>0.168494</td>\n",
       "      <td>9.573388</td>\n",
       "      <td>0.002856</td>\n",
       "      <td>1.181470</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>102</th>\n",
       "      <td>[CHIPSMORE ORI HANDY MP 8X28G]</td>\n",
       "      <td>[CHIPSMORE DOUBLE CHOC HANDY MP 8X28G]</td>\n",
       "      <td>0.017600</td>\n",
       "      <td>0.018928</td>\n",
       "      <td>0.003189</td>\n",
       "      <td>0.181204</td>\n",
       "      <td>9.573388</td>\n",
       "      <td>0.002856</td>\n",
       "      <td>1.198189</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>76</th>\n",
       "      <td>[MUNCHYS OATKRUNCH ORGANIC HAZELNUT 416G]</td>\n",
       "      <td>[MUNCHYS OAT KRUNCH NUTTY CHOCOLATE 416G]</td>\n",
       "      <td>0.006729</td>\n",
       "      <td>0.018634</td>\n",
       "      <td>0.001175</td>\n",
       "      <td>0.174551</td>\n",
       "      <td>9.367452</td>\n",
       "      <td>0.001049</td>\n",
       "      <td>1.188888</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>77</th>\n",
       "      <td>[MUNCHYS OAT KRUNCH NUTTY CHOCOLATE 416G]</td>\n",
       "      <td>[MUNCHYS OATKRUNCH ORGANIC HAZELNUT 416G]</td>\n",
       "      <td>0.018634</td>\n",
       "      <td>0.006729</td>\n",
       "      <td>0.001175</td>\n",
       "      <td>0.063034</td>\n",
       "      <td>9.367452</td>\n",
       "      <td>0.001049</td>\n",
       "      <td>1.060093</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>72</th>\n",
       "      <td>[MUNCHYS OAT KRUNCH NUTTY CHOCOLATE 416G]</td>\n",
       "      <td>[MUNCHYS OATKRUNCH S/BERRY B/CURRANT 416G]</td>\n",
       "      <td>0.018634</td>\n",
       "      <td>0.013841</td>\n",
       "      <td>0.001839</td>\n",
       "      <td>0.098713</td>\n",
       "      <td>7.132034</td>\n",
       "      <td>0.001581</td>\n",
       "      <td>1.094168</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73</th>\n",
       "      <td>[MUNCHYS OATKRUNCH S/BERRY B/CURRANT 416G]</td>\n",
       "      <td>[MUNCHYS OAT KRUNCH NUTTY CHOCOLATE 416G]</td>\n",
       "      <td>0.013841</td>\n",
       "      <td>0.018634</td>\n",
       "      <td>0.001839</td>\n",
       "      <td>0.132897</td>\n",
       "      <td>7.132034</td>\n",
       "      <td>0.001581</td>\n",
       "      <td>1.131775</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>68</th>\n",
       "      <td>[MUNCHYS OATKRUNCH DARK CHOC 416G]</td>\n",
       "      <td>[MUNCHYS OATKRUNCH S/BERRY B/CURRANT 416G]</td>\n",
       "      <td>0.019754</td>\n",
       "      <td>0.013841</td>\n",
       "      <td>0.001886</td>\n",
       "      <td>0.095461</td>\n",
       "      <td>6.897086</td>\n",
       "      <td>0.001612</td>\n",
       "      <td>1.090235</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69</th>\n",
       "      <td>[MUNCHYS OATKRUNCH S/BERRY B/CURRANT 416G]</td>\n",
       "      <td>[MUNCHYS OATKRUNCH DARK CHOC 416G]</td>\n",
       "      <td>0.013841</td>\n",
       "      <td>0.019754</td>\n",
       "      <td>0.001886</td>\n",
       "      <td>0.136245</td>\n",
       "      <td>6.897086</td>\n",
       "      <td>0.001612</td>\n",
       "      <td>1.134865</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95</th>\n",
       "      <td>[TESCO ORIGINAL TEMPURA NUGGET 850G]</td>\n",
       "      <td>[TESCO HOT + SPICY TEMPURA NUGGET 850G]</td>\n",
       "      <td>0.018646</td>\n",
       "      <td>0.015930</td>\n",
       "      <td>0.001892</td>\n",
       "      <td>0.101459</td>\n",
       "      <td>6.369005</td>\n",
       "      <td>0.001595</td>\n",
       "      <td>1.095186</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>94</th>\n",
       "      <td>[TESCO HOT + SPICY TEMPURA NUGGET 850G]</td>\n",
       "      <td>[TESCO ORIGINAL TEMPURA NUGGET 850G]</td>\n",
       "      <td>0.015930</td>\n",
       "      <td>0.018646</td>\n",
       "      <td>0.001892</td>\n",
       "      <td>0.118756</td>\n",
       "      <td>6.369005</td>\n",
       "      <td>0.001595</td>\n",
       "      <td>1.113600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>100</th>\n",
       "      <td>[ZESS WAFER ROLL TIRAMISU 700G]</td>\n",
       "      <td>[ZESS WAFER ROLL CHOCOLATE 700G]</td>\n",
       "      <td>0.021672</td>\n",
       "      <td>0.049315</td>\n",
       "      <td>0.006522</td>\n",
       "      <td>0.300920</td>\n",
       "      <td>6.101966</td>\n",
       "      <td>0.005453</td>\n",
       "      <td>1.359909</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>101</th>\n",
       "      <td>[ZESS WAFER ROLL CHOCOLATE 700G]</td>\n",
       "      <td>[ZESS WAFER ROLL TIRAMISU 700G]</td>\n",
       "      <td>0.049315</td>\n",
       "      <td>0.021672</td>\n",
       "      <td>0.006522</td>\n",
       "      <td>0.132241</td>\n",
       "      <td>6.101966</td>\n",
       "      <td>0.005453</td>\n",
       "      <td>1.127419</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>74</th>\n",
       "      <td>[MUNCHYS OATKRUNCH DARK CHOC 416G]</td>\n",
       "      <td>[MUNCHYS OAT KRUNCH NUTTY CHOCOLATE 416G]</td>\n",
       "      <td>0.019754</td>\n",
       "      <td>0.018634</td>\n",
       "      <td>0.002212</td>\n",
       "      <td>0.111984</td>\n",
       "      <td>6.009718</td>\n",
       "      <td>0.001844</td>\n",
       "      <td>1.105122</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75</th>\n",
       "      <td>[MUNCHYS OAT KRUNCH NUTTY CHOCOLATE 416G]</td>\n",
       "      <td>[MUNCHYS OATKRUNCH DARK CHOC 416G]</td>\n",
       "      <td>0.018634</td>\n",
       "      <td>0.019754</td>\n",
       "      <td>0.002212</td>\n",
       "      <td>0.118716</td>\n",
       "      <td>6.009718</td>\n",
       "      <td>0.001844</td>\n",
       "      <td>1.112292</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>91</th>\n",
       "      <td>[OREO VANILLA MP 256.5G]</td>\n",
       "      <td>[CHIPSMORE ORI HANDY MP 8X28G]</td>\n",
       "      <td>0.016365</td>\n",
       "      <td>0.017600</td>\n",
       "      <td>0.001642</td>\n",
       "      <td>0.100332</td>\n",
       "      <td>5.700628</td>\n",
       "      <td>0.001354</td>\n",
       "      <td>1.091959</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>90</th>\n",
       "      <td>[CHIPSMORE ORI HANDY MP 8X28G]</td>\n",
       "      <td>[OREO VANILLA MP 256.5G]</td>\n",
       "      <td>0.017600</td>\n",
       "      <td>0.016365</td>\n",
       "      <td>0.001642</td>\n",
       "      <td>0.093292</td>\n",
       "      <td>5.700628</td>\n",
       "      <td>0.001354</td>\n",
       "      <td>1.084842</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>[JULIES LOVE LETTER CHOC (TIN) 700G]</td>\n",
       "      <td>[JULIES LOVE LETTER STRAWBERRY (TIN) 700G]</td>\n",
       "      <td>0.068648</td>\n",
       "      <td>0.024190</td>\n",
       "      <td>0.009086</td>\n",
       "      <td>0.132359</td>\n",
       "      <td>5.471584</td>\n",
       "      <td>0.007426</td>\n",
       "      <td>1.124670</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>[JULIES LOVE LETTER STRAWBERRY (TIN) 700G]</td>\n",
       "      <td>[JULIES LOVE LETTER CHOC (TIN) 700G]</td>\n",
       "      <td>0.024190</td>\n",
       "      <td>0.068648</td>\n",
       "      <td>0.009086</td>\n",
       "      <td>0.375614</td>\n",
       "      <td>5.471584</td>\n",
       "      <td>0.007426</td>\n",
       "      <td>1.491629</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>78</th>\n",
       "      <td>[TESCO CHOICE SMOKED FRANK 340G]</td>\n",
       "      <td>[TESCO ORIGINAL TEMPURA NUGGET 850G]</td>\n",
       "      <td>0.017381</td>\n",
       "      <td>0.018646</td>\n",
       "      <td>0.001662</td>\n",
       "      <td>0.095630</td>\n",
       "      <td>5.128754</td>\n",
       "      <td>0.001338</td>\n",
       "      <td>1.085125</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>79</th>\n",
       "      <td>[TESCO ORIGINAL TEMPURA NUGGET 850G]</td>\n",
       "      <td>[TESCO CHOICE SMOKED FRANK 340G]</td>\n",
       "      <td>0.018646</td>\n",
       "      <td>0.017381</td>\n",
       "      <td>0.001662</td>\n",
       "      <td>0.089141</td>\n",
       "      <td>5.128754</td>\n",
       "      <td>0.001338</td>\n",
       "      <td>1.078783</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>92</th>\n",
       "      <td>[CHIPSMORE DOUBLE CHOC HANDY MP 8X28G]</td>\n",
       "      <td>[OREO VANILLA MP 256.5G]</td>\n",
       "      <td>0.018928</td>\n",
       "      <td>0.016365</td>\n",
       "      <td>0.001533</td>\n",
       "      <td>0.081001</td>\n",
       "      <td>4.949548</td>\n",
       "      <td>0.001223</td>\n",
       "      <td>1.070332</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>93</th>\n",
       "      <td>[OREO VANILLA MP 256.5G]</td>\n",
       "      <td>[CHIPSMORE DOUBLE CHOC HANDY MP 8X28G]</td>\n",
       "      <td>0.016365</td>\n",
       "      <td>0.018928</td>\n",
       "      <td>0.001533</td>\n",
       "      <td>0.093685</td>\n",
       "      <td>4.949548</td>\n",
       "      <td>0.001223</td>\n",
       "      <td>1.082484</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>82</th>\n",
       "      <td>[TESCO CHOICE SMOKED FRANK 340G]</td>\n",
       "      <td>[TESCO GOLDEN CRUMB NUGGET 900G]</td>\n",
       "      <td>0.017381</td>\n",
       "      <td>0.020614</td>\n",
       "      <td>0.001761</td>\n",
       "      <td>0.101310</td>\n",
       "      <td>4.914567</td>\n",
       "      <td>0.001403</td>\n",
       "      <td>1.089793</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>83</th>\n",
       "      <td>[TESCO GOLDEN CRUMB NUGGET 900G]</td>\n",
       "      <td>[TESCO CHOICE SMOKED FRANK 340G]</td>\n",
       "      <td>0.020614</td>\n",
       "      <td>0.017381</td>\n",
       "      <td>0.001761</td>\n",
       "      <td>0.085418</td>\n",
       "      <td>4.914567</td>\n",
       "      <td>0.001403</td>\n",
       "      <td>1.074392</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>80</th>\n",
       "      <td>[TESCO CHOICE SMOKED FRANK 340G]</td>\n",
       "      <td>[TESCO HOT + SPICY TEMPURA NUGGET 850G]</td>\n",
       "      <td>0.017381</td>\n",
       "      <td>0.015930</td>\n",
       "      <td>0.001269</td>\n",
       "      <td>0.073027</td>\n",
       "      <td>4.584196</td>\n",
       "      <td>0.000992</td>\n",
       "      <td>1.061595</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>81</th>\n",
       "      <td>[TESCO HOT + SPICY TEMPURA NUGGET 850G]</td>\n",
       "      <td>[TESCO CHOICE SMOKED FRANK 340G]</td>\n",
       "      <td>0.015930</td>\n",
       "      <td>0.017381</td>\n",
       "      <td>0.001269</td>\n",
       "      <td>0.079676</td>\n",
       "      <td>4.584196</td>\n",
       "      <td>0.000992</td>\n",
       "      <td>1.067689</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>88</th>\n",
       "      <td>[TESCO GOLDEN CRUMB NUGGET 900G]</td>\n",
       "      <td>[TESCO EDV CHICKEN FRANKFURTER 340G]</td>\n",
       "      <td>0.020614</td>\n",
       "      <td>0.019498</td>\n",
       "      <td>0.001791</td>\n",
       "      <td>0.086884</td>\n",
       "      <td>4.456047</td>\n",
       "      <td>0.001389</td>\n",
       "      <td>1.073798</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>89</th>\n",
       "      <td>[TESCO EDV CHICKEN FRANKFURTER 340G]</td>\n",
       "      <td>[TESCO GOLDEN CRUMB NUGGET 900G]</td>\n",
       "      <td>0.019498</td>\n",
       "      <td>0.020614</td>\n",
       "      <td>0.001791</td>\n",
       "      <td>0.091858</td>\n",
       "      <td>4.456047</td>\n",
       "      <td>0.001389</td>\n",
       "      <td>1.078450</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>62</th>\n",
       "      <td>[CHICKEN DRUMSTICK KG]</td>\n",
       "      <td>[CHICKEN BONE IN CUBE]</td>\n",
       "      <td>0.010464</td>\n",
       "      <td>0.036103</td>\n",
       "      <td>0.001453</td>\n",
       "      <td>0.138814</td>\n",
       "      <td>3.844939</td>\n",
       "      <td>0.001075</td>\n",
       "      <td>1.119267</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>63</th>\n",
       "      <td>[CHICKEN BONE IN CUBE]</td>\n",
       "      <td>[CHICKEN DRUMSTICK KG]</td>\n",
       "      <td>0.036103</td>\n",
       "      <td>0.010464</td>\n",
       "      <td>0.001453</td>\n",
       "      <td>0.040234</td>\n",
       "      <td>3.844939</td>\n",
       "      <td>0.001075</td>\n",
       "      <td>1.031018</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>[JACOBS WEETAMEAL 700G]</td>\n",
       "      <td>[JACOBS CREAM CRACKER 700G]</td>\n",
       "      <td>0.023795</td>\n",
       "      <td>0.018134</td>\n",
       "      <td>0.001628</td>\n",
       "      <td>0.068411</td>\n",
       "      <td>3.772490</td>\n",
       "      <td>0.001196</td>\n",
       "      <td>1.053969</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>[JACOBS CREAM CRACKER 700G]</td>\n",
       "      <td>[JACOBS WEETAMEAL 700G]</td>\n",
       "      <td>0.018134</td>\n",
       "      <td>0.023795</td>\n",
       "      <td>0.001628</td>\n",
       "      <td>0.089768</td>\n",
       "      <td>3.772490</td>\n",
       "      <td>0.001196</td>\n",
       "      <td>1.072479</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99</th>\n",
       "      <td>[TESCO HOT + SPICY TEMPURA NUGGET 850G]</td>\n",
       "      <td>[TESCO GOLDEN CRUMB NUGGET 900G]</td>\n",
       "      <td>0.015930</td>\n",
       "      <td>0.020614</td>\n",
       "      <td>0.001223</td>\n",
       "      <td>0.076767</td>\n",
       "      <td>3.724008</td>\n",
       "      <td>0.000895</td>\n",
       "      <td>1.060822</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98</th>\n",
       "      <td>[TESCO GOLDEN CRUMB NUGGET 900G]</td>\n",
       "      <td>[TESCO HOT + SPICY TEMPURA NUGGET 850G]</td>\n",
       "      <td>0.020614</td>\n",
       "      <td>0.015930</td>\n",
       "      <td>0.001223</td>\n",
       "      <td>0.059324</td>\n",
       "      <td>3.724008</td>\n",
       "      <td>0.000895</td>\n",
       "      <td>1.046130</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>64</th>\n",
       "      <td>[CHICKEN THIGH KG]</td>\n",
       "      <td>[CHICKEN BONE IN CUBE]</td>\n",
       "      <td>0.009147</td>\n",
       "      <td>0.036103</td>\n",
       "      <td>0.001205</td>\n",
       "      <td>0.131718</td>\n",
       "      <td>3.648392</td>\n",
       "      <td>0.000875</td>\n",
       "      <td>1.110120</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>65</th>\n",
       "      <td>[CHICKEN BONE IN CUBE]</td>\n",
       "      <td>[CHICKEN THIGH KG]</td>\n",
       "      <td>0.036103</td>\n",
       "      <td>0.009147</td>\n",
       "      <td>0.001205</td>\n",
       "      <td>0.033371</td>\n",
       "      <td>3.648392</td>\n",
       "      <td>0.000875</td>\n",
       "      <td>1.025060</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>[AYAMAS CRISPY NUGGET 850G]</td>\n",
       "      <td>[AYAMAS CHICKEN FRANKFURTER 340G]</td>\n",
       "      <td>0.012848</td>\n",
       "      <td>0.065550</td>\n",
       "      <td>0.003016</td>\n",
       "      <td>0.234750</td>\n",
       "      <td>3.581256</td>\n",
       "      <td>0.002174</td>\n",
       "      <td>1.221105</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>[AYAMAS CHICKEN FRANKFURTER 340G]</td>\n",
       "      <td>[AYAMAS CRISPY NUGGET 850G]</td>\n",
       "      <td>0.065550</td>\n",
       "      <td>0.012848</td>\n",
       "      <td>0.003016</td>\n",
       "      <td>0.046011</td>\n",
       "      <td>3.581256</td>\n",
       "      <td>0.002174</td>\n",
       "      <td>1.034762</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>87</th>\n",
       "      <td>[TESCO EDV CHICKEN FRANKFURTER 340G]</td>\n",
       "      <td>[TESCO HOT + SPICY TEMPURA NUGGET 850G]</td>\n",
       "      <td>0.019498</td>\n",
       "      <td>0.015930</td>\n",
       "      <td>0.001072</td>\n",
       "      <td>0.054970</td>\n",
       "      <td>3.450710</td>\n",
       "      <td>0.000761</td>\n",
       "      <td>1.041311</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>86</th>\n",
       "      <td>[TESCO HOT + SPICY TEMPURA NUGGET 850G]</td>\n",
       "      <td>[TESCO EDV CHICKEN FRANKFURTER 340G]</td>\n",
       "      <td>0.015930</td>\n",
       "      <td>0.019498</td>\n",
       "      <td>0.001072</td>\n",
       "      <td>0.067282</td>\n",
       "      <td>3.450710</td>\n",
       "      <td>0.000761</td>\n",
       "      <td>1.051231</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>[AYAMAS CHICKEN FRANKFURTER 340G]</td>\n",
       "      <td>[AYAMAS CRISPY TEMPURA NUGGET 850G]</td>\n",
       "      <td>0.065550</td>\n",
       "      <td>0.018203</td>\n",
       "      <td>0.004052</td>\n",
       "      <td>0.061808</td>\n",
       "      <td>3.395580</td>\n",
       "      <td>0.002858</td>\n",
       "      <td>1.046479</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>[AYAMAS CRISPY TEMPURA NUGGET 850G]</td>\n",
       "      <td>[AYAMAS CHICKEN FRANKFURTER 340G]</td>\n",
       "      <td>0.018203</td>\n",
       "      <td>0.065550</td>\n",
       "      <td>0.004052</td>\n",
       "      <td>0.222579</td>\n",
       "      <td>3.395580</td>\n",
       "      <td>0.002858</td>\n",
       "      <td>1.201987</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-19ed4200-116a-4c89-9318-f4f5e638e00c')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-19ed4200-116a-4c89-9318-f4f5e638e00c button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-19ed4200-116a-4c89-9318-f4f5e638e00c');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "                                    antecedents  \\\n",
       "22             [JULIE S P.BUTTER SANDWICH 360G]   \n",
       "23               [JULIE S CHEESE SANDWICH 330G]   \n",
       "60                       [CHICKEN DRUMSTICK KG]   \n",
       "61                            [CHICKEN WING KG]   \n",
       "59                       [CHICKEN DRUMSTICK KG]   \n",
       "58                           [CHICKEN THIGH KG]   \n",
       "71   [MUNCHYS OATKRUNCH S/BERRY B/CURRANT 416G]   \n",
       "70    [MUNCHYS OATKRUNCH ORGANIC HAZELNUT 416G]   \n",
       "103      [CHIPSMORE DOUBLE CHOC HANDY MP 8X28G]   \n",
       "102              [CHIPSMORE ORI HANDY MP 8X28G]   \n",
       "76    [MUNCHYS OATKRUNCH ORGANIC HAZELNUT 416G]   \n",
       "77    [MUNCHYS OAT KRUNCH NUTTY CHOCOLATE 416G]   \n",
       "72    [MUNCHYS OAT KRUNCH NUTTY CHOCOLATE 416G]   \n",
       "73   [MUNCHYS OATKRUNCH S/BERRY B/CURRANT 416G]   \n",
       "68           [MUNCHYS OATKRUNCH DARK CHOC 416G]   \n",
       "69   [MUNCHYS OATKRUNCH S/BERRY B/CURRANT 416G]   \n",
       "95         [TESCO ORIGINAL TEMPURA NUGGET 850G]   \n",
       "94      [TESCO HOT + SPICY TEMPURA NUGGET 850G]   \n",
       "100             [ZESS WAFER ROLL TIRAMISU 700G]   \n",
       "101            [ZESS WAFER ROLL CHOCOLATE 700G]   \n",
       "74           [MUNCHYS OATKRUNCH DARK CHOC 416G]   \n",
       "75    [MUNCHYS OAT KRUNCH NUTTY CHOCOLATE 416G]   \n",
       "91                     [OREO VANILLA MP 256.5G]   \n",
       "90               [CHIPSMORE ORI HANDY MP 8X28G]   \n",
       "26         [JULIES LOVE LETTER CHOC (TIN) 700G]   \n",
       "27   [JULIES LOVE LETTER STRAWBERRY (TIN) 700G]   \n",
       "78             [TESCO CHOICE SMOKED FRANK 340G]   \n",
       "79         [TESCO ORIGINAL TEMPURA NUGGET 850G]   \n",
       "92       [CHIPSMORE DOUBLE CHOC HANDY MP 8X28G]   \n",
       "93                     [OREO VANILLA MP 256.5G]   \n",
       "82             [TESCO CHOICE SMOKED FRANK 340G]   \n",
       "83             [TESCO GOLDEN CRUMB NUGGET 900G]   \n",
       "80             [TESCO CHOICE SMOKED FRANK 340G]   \n",
       "81      [TESCO HOT + SPICY TEMPURA NUGGET 850G]   \n",
       "88             [TESCO GOLDEN CRUMB NUGGET 900G]   \n",
       "89         [TESCO EDV CHICKEN FRANKFURTER 340G]   \n",
       "62                       [CHICKEN DRUMSTICK KG]   \n",
       "63                       [CHICKEN BONE IN CUBE]   \n",
       "19                      [JACOBS WEETAMEAL 700G]   \n",
       "18                  [JACOBS CREAM CRACKER 700G]   \n",
       "99      [TESCO HOT + SPICY TEMPURA NUGGET 850G]   \n",
       "98             [TESCO GOLDEN CRUMB NUGGET 900G]   \n",
       "64                           [CHICKEN THIGH KG]   \n",
       "65                       [CHICKEN BONE IN CUBE]   \n",
       "1                   [AYAMAS CRISPY NUGGET 850G]   \n",
       "0             [AYAMAS CHICKEN FRANKFURTER 340G]   \n",
       "87         [TESCO EDV CHICKEN FRANKFURTER 340G]   \n",
       "86      [TESCO HOT + SPICY TEMPURA NUGGET 850G]   \n",
       "4             [AYAMAS CHICKEN FRANKFURTER 340G]   \n",
       "5           [AYAMAS CRISPY TEMPURA NUGGET 850G]   \n",
       "\n",
       "                                    consequents  antecedent support  \\\n",
       "22               [JULIE S CHEESE SANDWICH 330G]            0.011192   \n",
       "23             [JULIE S P.BUTTER SANDWICH 360G]            0.004583   \n",
       "60                            [CHICKEN WING KG]            0.010464   \n",
       "61                       [CHICKEN DRUMSTICK KG]            0.005673   \n",
       "59                           [CHICKEN THIGH KG]            0.010464   \n",
       "58                       [CHICKEN DRUMSTICK KG]            0.009147   \n",
       "71    [MUNCHYS OATKRUNCH ORGANIC HAZELNUT 416G]            0.013841   \n",
       "70   [MUNCHYS OATKRUNCH S/BERRY B/CURRANT 416G]            0.006729   \n",
       "103              [CHIPSMORE ORI HANDY MP 8X28G]            0.018928   \n",
       "102      [CHIPSMORE DOUBLE CHOC HANDY MP 8X28G]            0.017600   \n",
       "76    [MUNCHYS OAT KRUNCH NUTTY CHOCOLATE 416G]            0.006729   \n",
       "77    [MUNCHYS OATKRUNCH ORGANIC HAZELNUT 416G]            0.018634   \n",
       "72   [MUNCHYS OATKRUNCH S/BERRY B/CURRANT 416G]            0.018634   \n",
       "73    [MUNCHYS OAT KRUNCH NUTTY CHOCOLATE 416G]            0.013841   \n",
       "68   [MUNCHYS OATKRUNCH S/BERRY B/CURRANT 416G]            0.019754   \n",
       "69           [MUNCHYS OATKRUNCH DARK CHOC 416G]            0.013841   \n",
       "95      [TESCO HOT + SPICY TEMPURA NUGGET 850G]            0.018646   \n",
       "94         [TESCO ORIGINAL TEMPURA NUGGET 850G]            0.015930   \n",
       "100            [ZESS WAFER ROLL CHOCOLATE 700G]            0.021672   \n",
       "101             [ZESS WAFER ROLL TIRAMISU 700G]            0.049315   \n",
       "74    [MUNCHYS OAT KRUNCH NUTTY CHOCOLATE 416G]            0.019754   \n",
       "75           [MUNCHYS OATKRUNCH DARK CHOC 416G]            0.018634   \n",
       "91               [CHIPSMORE ORI HANDY MP 8X28G]            0.016365   \n",
       "90                     [OREO VANILLA MP 256.5G]            0.017600   \n",
       "26   [JULIES LOVE LETTER STRAWBERRY (TIN) 700G]            0.068648   \n",
       "27         [JULIES LOVE LETTER CHOC (TIN) 700G]            0.024190   \n",
       "78         [TESCO ORIGINAL TEMPURA NUGGET 850G]            0.017381   \n",
       "79             [TESCO CHOICE SMOKED FRANK 340G]            0.018646   \n",
       "92                     [OREO VANILLA MP 256.5G]            0.018928   \n",
       "93       [CHIPSMORE DOUBLE CHOC HANDY MP 8X28G]            0.016365   \n",
       "82             [TESCO GOLDEN CRUMB NUGGET 900G]            0.017381   \n",
       "83             [TESCO CHOICE SMOKED FRANK 340G]            0.020614   \n",
       "80      [TESCO HOT + SPICY TEMPURA NUGGET 850G]            0.017381   \n",
       "81             [TESCO CHOICE SMOKED FRANK 340G]            0.015930   \n",
       "88         [TESCO EDV CHICKEN FRANKFURTER 340G]            0.020614   \n",
       "89             [TESCO GOLDEN CRUMB NUGGET 900G]            0.019498   \n",
       "62                       [CHICKEN BONE IN CUBE]            0.010464   \n",
       "63                       [CHICKEN DRUMSTICK KG]            0.036103   \n",
       "19                  [JACOBS CREAM CRACKER 700G]            0.023795   \n",
       "18                      [JACOBS WEETAMEAL 700G]            0.018134   \n",
       "99             [TESCO GOLDEN CRUMB NUGGET 900G]            0.015930   \n",
       "98      [TESCO HOT + SPICY TEMPURA NUGGET 850G]            0.020614   \n",
       "64                       [CHICKEN BONE IN CUBE]            0.009147   \n",
       "65                           [CHICKEN THIGH KG]            0.036103   \n",
       "1             [AYAMAS CHICKEN FRANKFURTER 340G]            0.012848   \n",
       "0                   [AYAMAS CRISPY NUGGET 850G]            0.065550   \n",
       "87      [TESCO HOT + SPICY TEMPURA NUGGET 850G]            0.019498   \n",
       "86         [TESCO EDV CHICKEN FRANKFURTER 340G]            0.015930   \n",
       "4           [AYAMAS CRISPY TEMPURA NUGGET 850G]            0.065550   \n",
       "5             [AYAMAS CHICKEN FRANKFURTER 340G]            0.018203   \n",
       "\n",
       "     consequent support   support  confidence       lift  leverage  conviction  \n",
       "22             0.004583  0.001142    0.102070  22.269566  0.001091    1.108568  \n",
       "23             0.011192  0.001142    0.249231  22.269566  0.001091    1.317060  \n",
       "60             0.005673  0.001281    0.122449  21.583242  0.001222    1.133070  \n",
       "61             0.010464  0.001281    0.225852  21.583242  0.001222    1.278226  \n",
       "59             0.009147  0.001525    0.145745  15.934272  0.001429    1.159904  \n",
       "58             0.010464  0.001525    0.166740  15.934272  0.001429    1.187548  \n",
       "71             0.006729  0.001136    0.082096  12.200287  0.001043    1.082108  \n",
       "70             0.013841  0.001136    0.168862  12.200287  0.001043    1.186517  \n",
       "103            0.017600  0.003189    0.168494   9.573388  0.002856    1.181470  \n",
       "102            0.018928  0.003189    0.181204   9.573388  0.002856    1.198189  \n",
       "76             0.018634  0.001175    0.174551   9.367452  0.001049    1.188888  \n",
       "77             0.006729  0.001175    0.063034   9.367452  0.001049    1.060093  \n",
       "72             0.013841  0.001839    0.098713   7.132034  0.001581    1.094168  \n",
       "73             0.018634  0.001839    0.132897   7.132034  0.001581    1.131775  \n",
       "68             0.013841  0.001886    0.095461   6.897086  0.001612    1.090235  \n",
       "69             0.019754  0.001886    0.136245   6.897086  0.001612    1.134865  \n",
       "95             0.015930  0.001892    0.101459   6.369005  0.001595    1.095186  \n",
       "94             0.018646  0.001892    0.118756   6.369005  0.001595    1.113600  \n",
       "100            0.049315  0.006522    0.300920   6.101966  0.005453    1.359909  \n",
       "101            0.021672  0.006522    0.132241   6.101966  0.005453    1.127419  \n",
       "74             0.018634  0.002212    0.111984   6.009718  0.001844    1.105122  \n",
       "75             0.019754  0.002212    0.118716   6.009718  0.001844    1.112292  \n",
       "91             0.017600  0.001642    0.100332   5.700628  0.001354    1.091959  \n",
       "90             0.016365  0.001642    0.093292   5.700628  0.001354    1.084842  \n",
       "26             0.024190  0.009086    0.132359   5.471584  0.007426    1.124670  \n",
       "27             0.068648  0.009086    0.375614   5.471584  0.007426    1.491629  \n",
       "78             0.018646  0.001662    0.095630   5.128754  0.001338    1.085125  \n",
       "79             0.017381  0.001662    0.089141   5.128754  0.001338    1.078783  \n",
       "92             0.016365  0.001533    0.081001   4.949548  0.001223    1.070332  \n",
       "93             0.018928  0.001533    0.093685   4.949548  0.001223    1.082484  \n",
       "82             0.020614  0.001761    0.101310   4.914567  0.001403    1.089793  \n",
       "83             0.017381  0.001761    0.085418   4.914567  0.001403    1.074392  \n",
       "80             0.015930  0.001269    0.073027   4.584196  0.000992    1.061595  \n",
       "81             0.017381  0.001269    0.079676   4.584196  0.000992    1.067689  \n",
       "88             0.019498  0.001791    0.086884   4.456047  0.001389    1.073798  \n",
       "89             0.020614  0.001791    0.091858   4.456047  0.001389    1.078450  \n",
       "62             0.036103  0.001453    0.138814   3.844939  0.001075    1.119267  \n",
       "63             0.010464  0.001453    0.040234   3.844939  0.001075    1.031018  \n",
       "19             0.018134  0.001628    0.068411   3.772490  0.001196    1.053969  \n",
       "18             0.023795  0.001628    0.089768   3.772490  0.001196    1.072479  \n",
       "99             0.020614  0.001223    0.076767   3.724008  0.000895    1.060822  \n",
       "98             0.015930  0.001223    0.059324   3.724008  0.000895    1.046130  \n",
       "64             0.036103  0.001205    0.131718   3.648392  0.000875    1.110120  \n",
       "65             0.009147  0.001205    0.033371   3.648392  0.000875    1.025060  \n",
       "1              0.065550  0.003016    0.234750   3.581256  0.002174    1.221105  \n",
       "0              0.012848  0.003016    0.046011   3.581256  0.002174    1.034762  \n",
       "87             0.015930  0.001072    0.054970   3.450710  0.000761    1.041311  \n",
       "86             0.019498  0.001072    0.067282   3.450710  0.000761    1.051231  \n",
       "4              0.018203  0.004052    0.061808   3.395580  0.002858    1.046479  \n",
       "5              0.065550  0.004052    0.222579   3.395580  0.002858    1.201987  "
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "### Sort the rules dataframe with lift metric value in descending order\n",
    "sorted_association_rules_df2 = association_rules_df.sort_values('lift', ascending=False)\n",
    "sorted_association_rules_df2.head(50)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 1000
    },
    "id": "34KD1hClc-FJ",
    "outputId": "727ec712-659f-4d5c-9374-d7a8d2f0c241"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-1a546f98-1dd5-4d56-801a-82c466adaceb\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>antecedents</th>\n",
       "      <th>consequents</th>\n",
       "      <th>antecedent support</th>\n",
       "      <th>consequent support</th>\n",
       "      <th>support</th>\n",
       "      <th>confidence</th>\n",
       "      <th>lift</th>\n",
       "      <th>leverage</th>\n",
       "      <th>conviction</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>[JULIES LOVE LETTER CHOC (TIN) 700G]</td>\n",
       "      <td>[JULIES LOVE LETTER STRAWBERRY (TIN) 700G]</td>\n",
       "      <td>0.068648</td>\n",
       "      <td>0.024190</td>\n",
       "      <td>0.009086</td>\n",
       "      <td>0.132359</td>\n",
       "      <td>5.471584</td>\n",
       "      <td>0.007426</td>\n",
       "      <td>1.124670</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>[JULIES LOVE LETTER STRAWBERRY (TIN) 700G]</td>\n",
       "      <td>[JULIES LOVE LETTER CHOC (TIN) 700G]</td>\n",
       "      <td>0.024190</td>\n",
       "      <td>0.068648</td>\n",
       "      <td>0.009086</td>\n",
       "      <td>0.375614</td>\n",
       "      <td>5.471584</td>\n",
       "      <td>0.007426</td>\n",
       "      <td>1.491629</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>101</th>\n",
       "      <td>[ZESS WAFER ROLL CHOCOLATE 700G]</td>\n",
       "      <td>[ZESS WAFER ROLL TIRAMISU 700G]</td>\n",
       "      <td>0.049315</td>\n",
       "      <td>0.021672</td>\n",
       "      <td>0.006522</td>\n",
       "      <td>0.132241</td>\n",
       "      <td>6.101966</td>\n",
       "      <td>0.005453</td>\n",
       "      <td>1.127419</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>100</th>\n",
       "      <td>[ZESS WAFER ROLL TIRAMISU 700G]</td>\n",
       "      <td>[ZESS WAFER ROLL CHOCOLATE 700G]</td>\n",
       "      <td>0.021672</td>\n",
       "      <td>0.049315</td>\n",
       "      <td>0.006522</td>\n",
       "      <td>0.300920</td>\n",
       "      <td>6.101966</td>\n",
       "      <td>0.005453</td>\n",
       "      <td>1.359909</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45</th>\n",
       "      <td>[#WHOLE CHICKEN WITH HEAD &amp; FEET]</td>\n",
       "      <td>[TESCO EDV CHICKEN FRANKFURTER 340G]</td>\n",
       "      <td>0.200120</td>\n",
       "      <td>0.019498</td>\n",
       "      <td>0.006431</td>\n",
       "      <td>0.032135</td>\n",
       "      <td>1.648112</td>\n",
       "      <td>0.002529</td>\n",
       "      <td>1.013056</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44</th>\n",
       "      <td>[TESCO EDV CHICKEN FRANKFURTER 340G]</td>\n",
       "      <td>[#WHOLE CHICKEN WITH HEAD &amp; FEET]</td>\n",
       "      <td>0.019498</td>\n",
       "      <td>0.200120</td>\n",
       "      <td>0.006431</td>\n",
       "      <td>0.329820</td>\n",
       "      <td>1.648112</td>\n",
       "      <td>0.002529</td>\n",
       "      <td>1.193530</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>49</th>\n",
       "      <td>[#WHOLE CHICKEN WITH HEAD &amp; FEET]</td>\n",
       "      <td>[TESCO GOLDEN CRUMB NUGGET 900G]</td>\n",
       "      <td>0.200120</td>\n",
       "      <td>0.020614</td>\n",
       "      <td>0.004954</td>\n",
       "      <td>0.024756</td>\n",
       "      <td>1.200901</td>\n",
       "      <td>0.000829</td>\n",
       "      <td>1.004247</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>48</th>\n",
       "      <td>[TESCO GOLDEN CRUMB NUGGET 900G]</td>\n",
       "      <td>[#WHOLE CHICKEN WITH HEAD &amp; FEET]</td>\n",
       "      <td>0.020614</td>\n",
       "      <td>0.200120</td>\n",
       "      <td>0.004954</td>\n",
       "      <td>0.240324</td>\n",
       "      <td>1.200901</td>\n",
       "      <td>0.000829</td>\n",
       "      <td>1.052923</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39</th>\n",
       "      <td>[#WHOLE CHICKEN WITH HEAD &amp; FEET]</td>\n",
       "      <td>[TESCO CHOICE SMOKED FRANK 340G]</td>\n",
       "      <td>0.200120</td>\n",
       "      <td>0.017381</td>\n",
       "      <td>0.004340</td>\n",
       "      <td>0.021685</td>\n",
       "      <td>1.247657</td>\n",
       "      <td>0.000861</td>\n",
       "      <td>1.004400</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38</th>\n",
       "      <td>[TESCO CHOICE SMOKED FRANK 340G]</td>\n",
       "      <td>[#WHOLE CHICKEN WITH HEAD &amp; FEET]</td>\n",
       "      <td>0.017381</td>\n",
       "      <td>0.200120</td>\n",
       "      <td>0.004340</td>\n",
       "      <td>0.249681</td>\n",
       "      <td>1.247657</td>\n",
       "      <td>0.000861</td>\n",
       "      <td>1.066053</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>[AYAMAS CHICKEN FRANKFURTER 340G]</td>\n",
       "      <td>[AYAMAS CRISPY TEMPURA NUGGET 850G]</td>\n",
       "      <td>0.065550</td>\n",
       "      <td>0.018203</td>\n",
       "      <td>0.004052</td>\n",
       "      <td>0.061808</td>\n",
       "      <td>3.395580</td>\n",
       "      <td>0.002858</td>\n",
       "      <td>1.046479</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>[AYAMAS CRISPY TEMPURA NUGGET 850G]</td>\n",
       "      <td>[AYAMAS CHICKEN FRANKFURTER 340G]</td>\n",
       "      <td>0.018203</td>\n",
       "      <td>0.065550</td>\n",
       "      <td>0.004052</td>\n",
       "      <td>0.222579</td>\n",
       "      <td>3.395580</td>\n",
       "      <td>0.002858</td>\n",
       "      <td>1.201987</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>103</th>\n",
       "      <td>[CHIPSMORE DOUBLE CHOC HANDY MP 8X28G]</td>\n",
       "      <td>[CHIPSMORE ORI HANDY MP 8X28G]</td>\n",
       "      <td>0.018928</td>\n",
       "      <td>0.017600</td>\n",
       "      <td>0.003189</td>\n",
       "      <td>0.168494</td>\n",
       "      <td>9.573388</td>\n",
       "      <td>0.002856</td>\n",
       "      <td>1.181470</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>102</th>\n",
       "      <td>[CHIPSMORE ORI HANDY MP 8X28G]</td>\n",
       "      <td>[CHIPSMORE DOUBLE CHOC HANDY MP 8X28G]</td>\n",
       "      <td>0.017600</td>\n",
       "      <td>0.018928</td>\n",
       "      <td>0.003189</td>\n",
       "      <td>0.181204</td>\n",
       "      <td>9.573388</td>\n",
       "      <td>0.002856</td>\n",
       "      <td>1.198189</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>[AYAMAS CRISPY NUGGET 850G]</td>\n",
       "      <td>[AYAMAS CHICKEN FRANKFURTER 340G]</td>\n",
       "      <td>0.012848</td>\n",
       "      <td>0.065550</td>\n",
       "      <td>0.003016</td>\n",
       "      <td>0.234750</td>\n",
       "      <td>3.581256</td>\n",
       "      <td>0.002174</td>\n",
       "      <td>1.221105</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>[AYAMAS CHICKEN FRANKFURTER 340G]</td>\n",
       "      <td>[AYAMAS CRISPY NUGGET 850G]</td>\n",
       "      <td>0.065550</td>\n",
       "      <td>0.012848</td>\n",
       "      <td>0.003016</td>\n",
       "      <td>0.046011</td>\n",
       "      <td>3.581256</td>\n",
       "      <td>0.002174</td>\n",
       "      <td>1.034762</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>[TESCO GOLDEN CRUMB NUGGET 900G]</td>\n",
       "      <td>[AYAMAS CHICKEN FRANKFURTER 340G]</td>\n",
       "      <td>0.020614</td>\n",
       "      <td>0.065550</td>\n",
       "      <td>0.003008</td>\n",
       "      <td>0.145915</td>\n",
       "      <td>2.226021</td>\n",
       "      <td>0.001657</td>\n",
       "      <td>1.094095</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>[AYAMAS CHICKEN FRANKFURTER 340G]</td>\n",
       "      <td>[TESCO GOLDEN CRUMB NUGGET 900G]</td>\n",
       "      <td>0.065550</td>\n",
       "      <td>0.020614</td>\n",
       "      <td>0.003008</td>\n",
       "      <td>0.045888</td>\n",
       "      <td>2.226021</td>\n",
       "      <td>0.001657</td>\n",
       "      <td>1.026489</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>55</th>\n",
       "      <td>[BRAZIL DFZN BEEF MIX FQUARTER BLOCK KG(5632)]</td>\n",
       "      <td>[#WHOLE CHICKEN WITH HEAD &amp; FEET]</td>\n",
       "      <td>0.007116</td>\n",
       "      <td>0.200120</td>\n",
       "      <td>0.002754</td>\n",
       "      <td>0.387033</td>\n",
       "      <td>1.934003</td>\n",
       "      <td>0.001330</td>\n",
       "      <td>1.304931</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>54</th>\n",
       "      <td>[#WHOLE CHICKEN WITH HEAD &amp; FEET]</td>\n",
       "      <td>[BRAZIL DFZN BEEF MIX FQUARTER BLOCK KG(5632)]</td>\n",
       "      <td>0.200120</td>\n",
       "      <td>0.007116</td>\n",
       "      <td>0.002754</td>\n",
       "      <td>0.013762</td>\n",
       "      <td>1.934003</td>\n",
       "      <td>0.001330</td>\n",
       "      <td>1.006739</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>[AYAMAS CHICKEN FRANKFURTER 340G]</td>\n",
       "      <td>[TESCO ORIGINAL TEMPURA NUGGET 850G]</td>\n",
       "      <td>0.065550</td>\n",
       "      <td>0.018646</td>\n",
       "      <td>0.002708</td>\n",
       "      <td>0.041308</td>\n",
       "      <td>2.215403</td>\n",
       "      <td>0.001486</td>\n",
       "      <td>1.023639</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>[TESCO ORIGINAL TEMPURA NUGGET 850G]</td>\n",
       "      <td>[AYAMAS CHICKEN FRANKFURTER 340G]</td>\n",
       "      <td>0.018646</td>\n",
       "      <td>0.065550</td>\n",
       "      <td>0.002708</td>\n",
       "      <td>0.145219</td>\n",
       "      <td>2.215403</td>\n",
       "      <td>0.001486</td>\n",
       "      <td>1.093204</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40</th>\n",
       "      <td>[#WHOLE CHICKEN WITH HEAD &amp; FEET]</td>\n",
       "      <td>[#INDIAN BUFFALO FQ SLICE 900GM]</td>\n",
       "      <td>0.200120</td>\n",
       "      <td>0.004922</td>\n",
       "      <td>0.002557</td>\n",
       "      <td>0.012775</td>\n",
       "      <td>2.595658</td>\n",
       "      <td>0.001572</td>\n",
       "      <td>1.007955</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41</th>\n",
       "      <td>[#INDIAN BUFFALO FQ SLICE 900GM]</td>\n",
       "      <td>[#WHOLE CHICKEN WITH HEAD &amp; FEET]</td>\n",
       "      <td>0.004922</td>\n",
       "      <td>0.200120</td>\n",
       "      <td>0.002557</td>\n",
       "      <td>0.519443</td>\n",
       "      <td>2.595658</td>\n",
       "      <td>0.001572</td>\n",
       "      <td>1.664486</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>[LP FILAMENT STICKS 250G]</td>\n",
       "      <td>[AYAMAS CHICKEN FRANKFURTER 340G]</td>\n",
       "      <td>0.014103</td>\n",
       "      <td>0.065550</td>\n",
       "      <td>0.002404</td>\n",
       "      <td>0.170429</td>\n",
       "      <td>2.599994</td>\n",
       "      <td>0.001479</td>\n",
       "      <td>1.126425</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>[AYAMAS CHICKEN FRANKFURTER 340G]</td>\n",
       "      <td>[LP FILAMENT STICKS 250G]</td>\n",
       "      <td>0.065550</td>\n",
       "      <td>0.014103</td>\n",
       "      <td>0.002404</td>\n",
       "      <td>0.036667</td>\n",
       "      <td>2.599994</td>\n",
       "      <td>0.001479</td>\n",
       "      <td>1.023423</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52</th>\n",
       "      <td>[IND DEFR BUFFALO BLOCK KG(5618)]</td>\n",
       "      <td>[#WHOLE CHICKEN WITH HEAD &amp; FEET]</td>\n",
       "      <td>0.005287</td>\n",
       "      <td>0.200120</td>\n",
       "      <td>0.002287</td>\n",
       "      <td>0.432546</td>\n",
       "      <td>2.161431</td>\n",
       "      <td>0.001229</td>\n",
       "      <td>1.409594</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>53</th>\n",
       "      <td>[#WHOLE CHICKEN WITH HEAD &amp; FEET]</td>\n",
       "      <td>[IND DEFR BUFFALO BLOCK KG(5618)]</td>\n",
       "      <td>0.200120</td>\n",
       "      <td>0.005287</td>\n",
       "      <td>0.002287</td>\n",
       "      <td>0.011426</td>\n",
       "      <td>2.161431</td>\n",
       "      <td>0.001229</td>\n",
       "      <td>1.006211</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>74</th>\n",
       "      <td>[MUNCHYS OATKRUNCH DARK CHOC 416G]</td>\n",
       "      <td>[MUNCHYS OAT KRUNCH NUTTY CHOCOLATE 416G]</td>\n",
       "      <td>0.019754</td>\n",
       "      <td>0.018634</td>\n",
       "      <td>0.002212</td>\n",
       "      <td>0.111984</td>\n",
       "      <td>6.009718</td>\n",
       "      <td>0.001844</td>\n",
       "      <td>1.105122</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75</th>\n",
       "      <td>[MUNCHYS OAT KRUNCH NUTTY CHOCOLATE 416G]</td>\n",
       "      <td>[MUNCHYS OATKRUNCH DARK CHOC 416G]</td>\n",
       "      <td>0.018634</td>\n",
       "      <td>0.019754</td>\n",
       "      <td>0.002212</td>\n",
       "      <td>0.118716</td>\n",
       "      <td>6.009718</td>\n",
       "      <td>0.001844</td>\n",
       "      <td>1.112292</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>[TESCO HOT + SPICY TEMPURA NUGGET 850G]</td>\n",
       "      <td>[AYAMAS CHICKEN FRANKFURTER 340G]</td>\n",
       "      <td>0.015930</td>\n",
       "      <td>0.065550</td>\n",
       "      <td>0.002057</td>\n",
       "      <td>0.129126</td>\n",
       "      <td>1.969899</td>\n",
       "      <td>0.001013</td>\n",
       "      <td>1.073003</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>[AYAMAS CHICKEN FRANKFURTER 340G]</td>\n",
       "      <td>[TESCO HOT + SPICY TEMPURA NUGGET 850G]</td>\n",
       "      <td>0.065550</td>\n",
       "      <td>0.015930</td>\n",
       "      <td>0.002057</td>\n",
       "      <td>0.031381</td>\n",
       "      <td>1.969899</td>\n",
       "      <td>0.001013</td>\n",
       "      <td>1.015951</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>[JACOBS WEETAMEAL 700G]</td>\n",
       "      <td>[JULIES LOVE LETTER CHOC (TIN) 700G]</td>\n",
       "      <td>0.023795</td>\n",
       "      <td>0.068648</td>\n",
       "      <td>0.001970</td>\n",
       "      <td>0.082804</td>\n",
       "      <td>1.206211</td>\n",
       "      <td>0.000337</td>\n",
       "      <td>1.015434</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>[JULIES LOVE LETTER CHOC (TIN) 700G]</td>\n",
       "      <td>[JACOBS WEETAMEAL 700G]</td>\n",
       "      <td>0.068648</td>\n",
       "      <td>0.023795</td>\n",
       "      <td>0.001970</td>\n",
       "      <td>0.028702</td>\n",
       "      <td>1.206211</td>\n",
       "      <td>0.000337</td>\n",
       "      <td>1.005052</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>94</th>\n",
       "      <td>[TESCO HOT + SPICY TEMPURA NUGGET 850G]</td>\n",
       "      <td>[TESCO ORIGINAL TEMPURA NUGGET 850G]</td>\n",
       "      <td>0.015930</td>\n",
       "      <td>0.018646</td>\n",
       "      <td>0.001892</td>\n",
       "      <td>0.118756</td>\n",
       "      <td>6.369005</td>\n",
       "      <td>0.001595</td>\n",
       "      <td>1.113600</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95</th>\n",
       "      <td>[TESCO ORIGINAL TEMPURA NUGGET 850G]</td>\n",
       "      <td>[TESCO HOT + SPICY TEMPURA NUGGET 850G]</td>\n",
       "      <td>0.018646</td>\n",
       "      <td>0.015930</td>\n",
       "      <td>0.001892</td>\n",
       "      <td>0.101459</td>\n",
       "      <td>6.369005</td>\n",
       "      <td>0.001595</td>\n",
       "      <td>1.095186</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>69</th>\n",
       "      <td>[MUNCHYS OATKRUNCH S/BERRY B/CURRANT 416G]</td>\n",
       "      <td>[MUNCHYS OATKRUNCH DARK CHOC 416G]</td>\n",
       "      <td>0.013841</td>\n",
       "      <td>0.019754</td>\n",
       "      <td>0.001886</td>\n",
       "      <td>0.136245</td>\n",
       "      <td>6.897086</td>\n",
       "      <td>0.001612</td>\n",
       "      <td>1.134865</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>68</th>\n",
       "      <td>[MUNCHYS OATKRUNCH DARK CHOC 416G]</td>\n",
       "      <td>[MUNCHYS OATKRUNCH S/BERRY B/CURRANT 416G]</td>\n",
       "      <td>0.019754</td>\n",
       "      <td>0.013841</td>\n",
       "      <td>0.001886</td>\n",
       "      <td>0.095461</td>\n",
       "      <td>6.897086</td>\n",
       "      <td>0.001612</td>\n",
       "      <td>1.090235</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>72</th>\n",
       "      <td>[MUNCHYS OAT KRUNCH NUTTY CHOCOLATE 416G]</td>\n",
       "      <td>[MUNCHYS OATKRUNCH S/BERRY B/CURRANT 416G]</td>\n",
       "      <td>0.018634</td>\n",
       "      <td>0.013841</td>\n",
       "      <td>0.001839</td>\n",
       "      <td>0.098713</td>\n",
       "      <td>7.132034</td>\n",
       "      <td>0.001581</td>\n",
       "      <td>1.094168</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>73</th>\n",
       "      <td>[MUNCHYS OATKRUNCH S/BERRY B/CURRANT 416G]</td>\n",
       "      <td>[MUNCHYS OAT KRUNCH NUTTY CHOCOLATE 416G]</td>\n",
       "      <td>0.013841</td>\n",
       "      <td>0.018634</td>\n",
       "      <td>0.001839</td>\n",
       "      <td>0.132897</td>\n",
       "      <td>7.132034</td>\n",
       "      <td>0.001581</td>\n",
       "      <td>1.131775</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>89</th>\n",
       "      <td>[TESCO EDV CHICKEN FRANKFURTER 340G]</td>\n",
       "      <td>[TESCO GOLDEN CRUMB NUGGET 900G]</td>\n",
       "      <td>0.019498</td>\n",
       "      <td>0.020614</td>\n",
       "      <td>0.001791</td>\n",
       "      <td>0.091858</td>\n",
       "      <td>4.456047</td>\n",
       "      <td>0.001389</td>\n",
       "      <td>1.078450</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>88</th>\n",
       "      <td>[TESCO GOLDEN CRUMB NUGGET 900G]</td>\n",
       "      <td>[TESCO EDV CHICKEN FRANKFURTER 340G]</td>\n",
       "      <td>0.020614</td>\n",
       "      <td>0.019498</td>\n",
       "      <td>0.001791</td>\n",
       "      <td>0.086884</td>\n",
       "      <td>4.456047</td>\n",
       "      <td>0.001389</td>\n",
       "      <td>1.073798</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>82</th>\n",
       "      <td>[TESCO CHOICE SMOKED FRANK 340G]</td>\n",
       "      <td>[TESCO GOLDEN CRUMB NUGGET 900G]</td>\n",
       "      <td>0.017381</td>\n",
       "      <td>0.020614</td>\n",
       "      <td>0.001761</td>\n",
       "      <td>0.101310</td>\n",
       "      <td>4.914567</td>\n",
       "      <td>0.001403</td>\n",
       "      <td>1.089793</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>83</th>\n",
       "      <td>[TESCO GOLDEN CRUMB NUGGET 900G]</td>\n",
       "      <td>[TESCO CHOICE SMOKED FRANK 340G]</td>\n",
       "      <td>0.020614</td>\n",
       "      <td>0.017381</td>\n",
       "      <td>0.001761</td>\n",
       "      <td>0.085418</td>\n",
       "      <td>4.914567</td>\n",
       "      <td>0.001403</td>\n",
       "      <td>1.074392</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50</th>\n",
       "      <td>[TESCO CRINKLE CUT FRIES 1KG]</td>\n",
       "      <td>[#WHOLE CHICKEN WITH HEAD &amp; FEET]</td>\n",
       "      <td>0.007491</td>\n",
       "      <td>0.200120</td>\n",
       "      <td>0.001670</td>\n",
       "      <td>0.222969</td>\n",
       "      <td>1.114178</td>\n",
       "      <td>0.000171</td>\n",
       "      <td>1.029406</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>51</th>\n",
       "      <td>[#WHOLE CHICKEN WITH HEAD &amp; FEET]</td>\n",
       "      <td>[TESCO CRINKLE CUT FRIES 1KG]</td>\n",
       "      <td>0.200120</td>\n",
       "      <td>0.007491</td>\n",
       "      <td>0.001670</td>\n",
       "      <td>0.008346</td>\n",
       "      <td>1.114178</td>\n",
       "      <td>0.000171</td>\n",
       "      <td>1.000862</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>78</th>\n",
       "      <td>[TESCO CHOICE SMOKED FRANK 340G]</td>\n",
       "      <td>[TESCO ORIGINAL TEMPURA NUGGET 850G]</td>\n",
       "      <td>0.017381</td>\n",
       "      <td>0.018646</td>\n",
       "      <td>0.001662</td>\n",
       "      <td>0.095630</td>\n",
       "      <td>5.128754</td>\n",
       "      <td>0.001338</td>\n",
       "      <td>1.085125</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>79</th>\n",
       "      <td>[TESCO ORIGINAL TEMPURA NUGGET 850G]</td>\n",
       "      <td>[TESCO CHOICE SMOKED FRANK 340G]</td>\n",
       "      <td>0.018646</td>\n",
       "      <td>0.017381</td>\n",
       "      <td>0.001662</td>\n",
       "      <td>0.089141</td>\n",
       "      <td>5.128754</td>\n",
       "      <td>0.001338</td>\n",
       "      <td>1.078783</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>90</th>\n",
       "      <td>[CHIPSMORE ORI HANDY MP 8X28G]</td>\n",
       "      <td>[OREO VANILLA MP 256.5G]</td>\n",
       "      <td>0.017600</td>\n",
       "      <td>0.016365</td>\n",
       "      <td>0.001642</td>\n",
       "      <td>0.093292</td>\n",
       "      <td>5.700628</td>\n",
       "      <td>0.001354</td>\n",
       "      <td>1.084842</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>91</th>\n",
       "      <td>[OREO VANILLA MP 256.5G]</td>\n",
       "      <td>[CHIPSMORE ORI HANDY MP 8X28G]</td>\n",
       "      <td>0.016365</td>\n",
       "      <td>0.017600</td>\n",
       "      <td>0.001642</td>\n",
       "      <td>0.100332</td>\n",
       "      <td>5.700628</td>\n",
       "      <td>0.001354</td>\n",
       "      <td>1.091959</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1a546f98-1dd5-4d56-801a-82c466adaceb')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-1a546f98-1dd5-4d56-801a-82c466adaceb button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-1a546f98-1dd5-4d56-801a-82c466adaceb');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "                                        antecedents  \\\n",
       "26             [JULIES LOVE LETTER CHOC (TIN) 700G]   \n",
       "27       [JULIES LOVE LETTER STRAWBERRY (TIN) 700G]   \n",
       "101                [ZESS WAFER ROLL CHOCOLATE 700G]   \n",
       "100                 [ZESS WAFER ROLL TIRAMISU 700G]   \n",
       "45                [#WHOLE CHICKEN WITH HEAD & FEET]   \n",
       "44             [TESCO EDV CHICKEN FRANKFURTER 340G]   \n",
       "49                [#WHOLE CHICKEN WITH HEAD & FEET]   \n",
       "48                 [TESCO GOLDEN CRUMB NUGGET 900G]   \n",
       "39                [#WHOLE CHICKEN WITH HEAD & FEET]   \n",
       "38                 [TESCO CHOICE SMOKED FRANK 340G]   \n",
       "4                 [AYAMAS CHICKEN FRANKFURTER 340G]   \n",
       "5               [AYAMAS CRISPY TEMPURA NUGGET 850G]   \n",
       "103          [CHIPSMORE DOUBLE CHOC HANDY MP 8X28G]   \n",
       "102                  [CHIPSMORE ORI HANDY MP 8X28G]   \n",
       "1                       [AYAMAS CRISPY NUGGET 850G]   \n",
       "0                 [AYAMAS CHICKEN FRANKFURTER 340G]   \n",
       "12                 [TESCO GOLDEN CRUMB NUGGET 900G]   \n",
       "13                [AYAMAS CHICKEN FRANKFURTER 340G]   \n",
       "55   [BRAZIL DFZN BEEF MIX FQUARTER BLOCK KG(5632)]   \n",
       "54                [#WHOLE CHICKEN WITH HEAD & FEET]   \n",
       "8                 [AYAMAS CHICKEN FRANKFURTER 340G]   \n",
       "9              [TESCO ORIGINAL TEMPURA NUGGET 850G]   \n",
       "40                [#WHOLE CHICKEN WITH HEAD & FEET]   \n",
       "41                 [#INDIAN BUFFALO FQ SLICE 900GM]   \n",
       "6                         [LP FILAMENT STICKS 250G]   \n",
       "7                 [AYAMAS CHICKEN FRANKFURTER 340G]   \n",
       "52                [IND DEFR BUFFALO BLOCK KG(5618)]   \n",
       "53                [#WHOLE CHICKEN WITH HEAD & FEET]   \n",
       "74               [MUNCHYS OATKRUNCH DARK CHOC 416G]   \n",
       "75        [MUNCHYS OAT KRUNCH NUTTY CHOCOLATE 416G]   \n",
       "10          [TESCO HOT + SPICY TEMPURA NUGGET 850G]   \n",
       "11                [AYAMAS CHICKEN FRANKFURTER 340G]   \n",
       "17                          [JACOBS WEETAMEAL 700G]   \n",
       "16             [JULIES LOVE LETTER CHOC (TIN) 700G]   \n",
       "94          [TESCO HOT + SPICY TEMPURA NUGGET 850G]   \n",
       "95             [TESCO ORIGINAL TEMPURA NUGGET 850G]   \n",
       "69       [MUNCHYS OATKRUNCH S/BERRY B/CURRANT 416G]   \n",
       "68               [MUNCHYS OATKRUNCH DARK CHOC 416G]   \n",
       "72        [MUNCHYS OAT KRUNCH NUTTY CHOCOLATE 416G]   \n",
       "73       [MUNCHYS OATKRUNCH S/BERRY B/CURRANT 416G]   \n",
       "89             [TESCO EDV CHICKEN FRANKFURTER 340G]   \n",
       "88                 [TESCO GOLDEN CRUMB NUGGET 900G]   \n",
       "82                 [TESCO CHOICE SMOKED FRANK 340G]   \n",
       "83                 [TESCO GOLDEN CRUMB NUGGET 900G]   \n",
       "50                    [TESCO CRINKLE CUT FRIES 1KG]   \n",
       "51                [#WHOLE CHICKEN WITH HEAD & FEET]   \n",
       "78                 [TESCO CHOICE SMOKED FRANK 340G]   \n",
       "79             [TESCO ORIGINAL TEMPURA NUGGET 850G]   \n",
       "90                   [CHIPSMORE ORI HANDY MP 8X28G]   \n",
       "91                         [OREO VANILLA MP 256.5G]   \n",
       "\n",
       "                                        consequents  antecedent support  \\\n",
       "26       [JULIES LOVE LETTER STRAWBERRY (TIN) 700G]            0.068648   \n",
       "27             [JULIES LOVE LETTER CHOC (TIN) 700G]            0.024190   \n",
       "101                 [ZESS WAFER ROLL TIRAMISU 700G]            0.049315   \n",
       "100                [ZESS WAFER ROLL CHOCOLATE 700G]            0.021672   \n",
       "45             [TESCO EDV CHICKEN FRANKFURTER 340G]            0.200120   \n",
       "44                [#WHOLE CHICKEN WITH HEAD & FEET]            0.019498   \n",
       "49                 [TESCO GOLDEN CRUMB NUGGET 900G]            0.200120   \n",
       "48                [#WHOLE CHICKEN WITH HEAD & FEET]            0.020614   \n",
       "39                 [TESCO CHOICE SMOKED FRANK 340G]            0.200120   \n",
       "38                [#WHOLE CHICKEN WITH HEAD & FEET]            0.017381   \n",
       "4               [AYAMAS CRISPY TEMPURA NUGGET 850G]            0.065550   \n",
       "5                 [AYAMAS CHICKEN FRANKFURTER 340G]            0.018203   \n",
       "103                  [CHIPSMORE ORI HANDY MP 8X28G]            0.018928   \n",
       "102          [CHIPSMORE DOUBLE CHOC HANDY MP 8X28G]            0.017600   \n",
       "1                 [AYAMAS CHICKEN FRANKFURTER 340G]            0.012848   \n",
       "0                       [AYAMAS CRISPY NUGGET 850G]            0.065550   \n",
       "12                [AYAMAS CHICKEN FRANKFURTER 340G]            0.020614   \n",
       "13                 [TESCO GOLDEN CRUMB NUGGET 900G]            0.065550   \n",
       "55                [#WHOLE CHICKEN WITH HEAD & FEET]            0.007116   \n",
       "54   [BRAZIL DFZN BEEF MIX FQUARTER BLOCK KG(5632)]            0.200120   \n",
       "8              [TESCO ORIGINAL TEMPURA NUGGET 850G]            0.065550   \n",
       "9                 [AYAMAS CHICKEN FRANKFURTER 340G]            0.018646   \n",
       "40                 [#INDIAN BUFFALO FQ SLICE 900GM]            0.200120   \n",
       "41                [#WHOLE CHICKEN WITH HEAD & FEET]            0.004922   \n",
       "6                 [AYAMAS CHICKEN FRANKFURTER 340G]            0.014103   \n",
       "7                         [LP FILAMENT STICKS 250G]            0.065550   \n",
       "52                [#WHOLE CHICKEN WITH HEAD & FEET]            0.005287   \n",
       "53                [IND DEFR BUFFALO BLOCK KG(5618)]            0.200120   \n",
       "74        [MUNCHYS OAT KRUNCH NUTTY CHOCOLATE 416G]            0.019754   \n",
       "75               [MUNCHYS OATKRUNCH DARK CHOC 416G]            0.018634   \n",
       "10                [AYAMAS CHICKEN FRANKFURTER 340G]            0.015930   \n",
       "11          [TESCO HOT + SPICY TEMPURA NUGGET 850G]            0.065550   \n",
       "17             [JULIES LOVE LETTER CHOC (TIN) 700G]            0.023795   \n",
       "16                          [JACOBS WEETAMEAL 700G]            0.068648   \n",
       "94             [TESCO ORIGINAL TEMPURA NUGGET 850G]            0.015930   \n",
       "95          [TESCO HOT + SPICY TEMPURA NUGGET 850G]            0.018646   \n",
       "69               [MUNCHYS OATKRUNCH DARK CHOC 416G]            0.013841   \n",
       "68       [MUNCHYS OATKRUNCH S/BERRY B/CURRANT 416G]            0.019754   \n",
       "72       [MUNCHYS OATKRUNCH S/BERRY B/CURRANT 416G]            0.018634   \n",
       "73        [MUNCHYS OAT KRUNCH NUTTY CHOCOLATE 416G]            0.013841   \n",
       "89                 [TESCO GOLDEN CRUMB NUGGET 900G]            0.019498   \n",
       "88             [TESCO EDV CHICKEN FRANKFURTER 340G]            0.020614   \n",
       "82                 [TESCO GOLDEN CRUMB NUGGET 900G]            0.017381   \n",
       "83                 [TESCO CHOICE SMOKED FRANK 340G]            0.020614   \n",
       "50                [#WHOLE CHICKEN WITH HEAD & FEET]            0.007491   \n",
       "51                    [TESCO CRINKLE CUT FRIES 1KG]            0.200120   \n",
       "78             [TESCO ORIGINAL TEMPURA NUGGET 850G]            0.017381   \n",
       "79                 [TESCO CHOICE SMOKED FRANK 340G]            0.018646   \n",
       "90                         [OREO VANILLA MP 256.5G]            0.017600   \n",
       "91                   [CHIPSMORE ORI HANDY MP 8X28G]            0.016365   \n",
       "\n",
       "     consequent support   support  confidence      lift  leverage  conviction  \n",
       "26             0.024190  0.009086    0.132359  5.471584  0.007426    1.124670  \n",
       "27             0.068648  0.009086    0.375614  5.471584  0.007426    1.491629  \n",
       "101            0.021672  0.006522    0.132241  6.101966  0.005453    1.127419  \n",
       "100            0.049315  0.006522    0.300920  6.101966  0.005453    1.359909  \n",
       "45             0.019498  0.006431    0.032135  1.648112  0.002529    1.013056  \n",
       "44             0.200120  0.006431    0.329820  1.648112  0.002529    1.193530  \n",
       "49             0.020614  0.004954    0.024756  1.200901  0.000829    1.004247  \n",
       "48             0.200120  0.004954    0.240324  1.200901  0.000829    1.052923  \n",
       "39             0.017381  0.004340    0.021685  1.247657  0.000861    1.004400  \n",
       "38             0.200120  0.004340    0.249681  1.247657  0.000861    1.066053  \n",
       "4              0.018203  0.004052    0.061808  3.395580  0.002858    1.046479  \n",
       "5              0.065550  0.004052    0.222579  3.395580  0.002858    1.201987  \n",
       "103            0.017600  0.003189    0.168494  9.573388  0.002856    1.181470  \n",
       "102            0.018928  0.003189    0.181204  9.573388  0.002856    1.198189  \n",
       "1              0.065550  0.003016    0.234750  3.581256  0.002174    1.221105  \n",
       "0              0.012848  0.003016    0.046011  3.581256  0.002174    1.034762  \n",
       "12             0.065550  0.003008    0.145915  2.226021  0.001657    1.094095  \n",
       "13             0.020614  0.003008    0.045888  2.226021  0.001657    1.026489  \n",
       "55             0.200120  0.002754    0.387033  1.934003  0.001330    1.304931  \n",
       "54             0.007116  0.002754    0.013762  1.934003  0.001330    1.006739  \n",
       "8              0.018646  0.002708    0.041308  2.215403  0.001486    1.023639  \n",
       "9              0.065550  0.002708    0.145219  2.215403  0.001486    1.093204  \n",
       "40             0.004922  0.002557    0.012775  2.595658  0.001572    1.007955  \n",
       "41             0.200120  0.002557    0.519443  2.595658  0.001572    1.664486  \n",
       "6              0.065550  0.002404    0.170429  2.599994  0.001479    1.126425  \n",
       "7              0.014103  0.002404    0.036667  2.599994  0.001479    1.023423  \n",
       "52             0.200120  0.002287    0.432546  2.161431  0.001229    1.409594  \n",
       "53             0.005287  0.002287    0.011426  2.161431  0.001229    1.006211  \n",
       "74             0.018634  0.002212    0.111984  6.009718  0.001844    1.105122  \n",
       "75             0.019754  0.002212    0.118716  6.009718  0.001844    1.112292  \n",
       "10             0.065550  0.002057    0.129126  1.969899  0.001013    1.073003  \n",
       "11             0.015930  0.002057    0.031381  1.969899  0.001013    1.015951  \n",
       "17             0.068648  0.001970    0.082804  1.206211  0.000337    1.015434  \n",
       "16             0.023795  0.001970    0.028702  1.206211  0.000337    1.005052  \n",
       "94             0.018646  0.001892    0.118756  6.369005  0.001595    1.113600  \n",
       "95             0.015930  0.001892    0.101459  6.369005  0.001595    1.095186  \n",
       "69             0.019754  0.001886    0.136245  6.897086  0.001612    1.134865  \n",
       "68             0.013841  0.001886    0.095461  6.897086  0.001612    1.090235  \n",
       "72             0.013841  0.001839    0.098713  7.132034  0.001581    1.094168  \n",
       "73             0.018634  0.001839    0.132897  7.132034  0.001581    1.131775  \n",
       "89             0.020614  0.001791    0.091858  4.456047  0.001389    1.078450  \n",
       "88             0.019498  0.001791    0.086884  4.456047  0.001389    1.073798  \n",
       "82             0.020614  0.001761    0.101310  4.914567  0.001403    1.089793  \n",
       "83             0.017381  0.001761    0.085418  4.914567  0.001403    1.074392  \n",
       "50             0.200120  0.001670    0.222969  1.114178  0.000171    1.029406  \n",
       "51             0.007491  0.001670    0.008346  1.114178  0.000171    1.000862  \n",
       "78             0.018646  0.001662    0.095630  5.128754  0.001338    1.085125  \n",
       "79             0.017381  0.001662    0.089141  5.128754  0.001338    1.078783  \n",
       "90             0.016365  0.001642    0.093292  5.700628  0.001354    1.084842  \n",
       "91             0.017600  0.001642    0.100332  5.700628  0.001354    1.091959  "
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "### Sort the rules dataframe with support metric value in descending order\n",
    "sorted_association_rules_df3 = association_rules_df.sort_values('support', ascending=False)\n",
    "sorted_association_rules_df3.head(50)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "7pPAIFcyLPoT"
   },
   "source": [
    "### Preparation for final visulation and result output\n",
    "\n",
    "Now the function could allowed us to search target item is poped in the association rules we built from the market basket analysis"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "xZ8GeNNBtvPd"
   },
   "outputs": [],
   "source": [
    "def match_string(product_list, product_string):\n",
    "    \"\"\"\n",
    "    This function checks if a given product string is present in a list of product strings.\n",
    "\n",
    "    Args:\n",
    "    product_list (list): A list of product strings.\n",
    "    product_string (str): A product string to be checked for its presence in the product list.\n",
    "\n",
    "    Returns:\n",
    "    bool: True if the product_string is found in the product_list, False otherwise.\n",
    "    \"\"\"\n",
    "    return product_string in product_list"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "SlREAm4gkTS-"
   },
   "outputs": [],
   "source": [
    "def check_product_in_rules(product_name, df):\n",
    "    \"\"\"\n",
    "    This function checks if the input product name is present in the given association rules dataframe, either as an antecedent or consequent.\n",
    "    If the product name is found in the dataframe, the filtered dataframe containing the relevant association rules is returned.\n",
    "    Otherwise, a message is printed to inform that the product is not in the association rules built with the basket data.\n",
    "\n",
    "    Args:\n",
    "    product_name (str): The product name to be checked for its presence in the association rules dataframe.\n",
    "    df (pd.DataFrame): A pandas DataFrame containing association rules with 'antecedents' and 'consequents' columns.\n",
    "\n",
    "    Returns:\n",
    "    pd.DataFrame or None: A filtered dataframe containing the association rules with the input product name, either as an antecedent or consequent,\n",
    "                          or None if the product name is not found in the dataframe.\n",
    "    \"\"\"\n",
    "    filtered_df = df[df['antecedents'].apply(lambda x: match_string(x, product_name)) | df['consequents'].apply(lambda x: match_string(x, product_name))]\n",
    "    if filtered_df.empty:\n",
    "      print('Given product is not in the association rules build with basket data.')\n",
    "    else:\n",
    "      return filtered_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "kJb29RgUmRfm",
    "outputId": "cb244eea-37b7-486f-f241-7bfa1c37be85"
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Given product is not in the association rules build with basket data.\n"
     ]
    }
   ],
   "source": [
    "### Example with chocolate cake\n",
    "check_product_in_rules(\"Chocolate Cake\", association_rules_df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 354
    },
    "id": "OHmqK-3RmdCD",
    "outputId": "a5804f86-bb50-4734-9910-fd40aa8988b1"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-3b175b95-f08e-4404-9966-5e9f5ee7076a\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>antecedents</th>\n",
       "      <th>consequents</th>\n",
       "      <th>antecedent support</th>\n",
       "      <th>consequent support</th>\n",
       "      <th>support</th>\n",
       "      <th>confidence</th>\n",
       "      <th>lift</th>\n",
       "      <th>leverage</th>\n",
       "      <th>conviction</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>[FARMS BEST GOLDEN CRUMB CHIC NUGGET 1KG]</td>\n",
       "      <td>[#WHOLE CHICKEN WITH HEAD &amp; FEET]</td>\n",
       "      <td>0.006389</td>\n",
       "      <td>0.200120</td>\n",
       "      <td>0.001338</td>\n",
       "      <td>0.209398</td>\n",
       "      <td>1.046360</td>\n",
       "      <td>0.000059</td>\n",
       "      <td>1.011735</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>[#WHOLE CHICKEN WITH HEAD &amp; FEET]</td>\n",
       "      <td>[FARMS BEST GOLDEN CRUMB CHIC NUGGET 1KG]</td>\n",
       "      <td>0.200120</td>\n",
       "      <td>0.006389</td>\n",
       "      <td>0.001338</td>\n",
       "      <td>0.006685</td>\n",
       "      <td>1.046360</td>\n",
       "      <td>0.000059</td>\n",
       "      <td>1.000298</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38</th>\n",
       "      <td>[TESCO CHOICE SMOKED FRANK 340G]</td>\n",
       "      <td>[#WHOLE CHICKEN WITH HEAD &amp; FEET]</td>\n",
       "      <td>0.017381</td>\n",
       "      <td>0.200120</td>\n",
       "      <td>0.004340</td>\n",
       "      <td>0.249681</td>\n",
       "      <td>1.247657</td>\n",
       "      <td>0.000861</td>\n",
       "      <td>1.066053</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39</th>\n",
       "      <td>[#WHOLE CHICKEN WITH HEAD &amp; FEET]</td>\n",
       "      <td>[TESCO CHOICE SMOKED FRANK 340G]</td>\n",
       "      <td>0.200120</td>\n",
       "      <td>0.017381</td>\n",
       "      <td>0.004340</td>\n",
       "      <td>0.021685</td>\n",
       "      <td>1.247657</td>\n",
       "      <td>0.000861</td>\n",
       "      <td>1.004400</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40</th>\n",
       "      <td>[#WHOLE CHICKEN WITH HEAD &amp; FEET]</td>\n",
       "      <td>[#INDIAN BUFFALO FQ SLICE 900GM]</td>\n",
       "      <td>0.200120</td>\n",
       "      <td>0.004922</td>\n",
       "      <td>0.002557</td>\n",
       "      <td>0.012775</td>\n",
       "      <td>2.595658</td>\n",
       "      <td>0.001572</td>\n",
       "      <td>1.007955</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3b175b95-f08e-4404-9966-5e9f5ee7076a')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-3b175b95-f08e-4404-9966-5e9f5ee7076a button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-3b175b95-f08e-4404-9966-5e9f5ee7076a');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "                                  antecedents  \\\n",
       "20  [FARMS BEST GOLDEN CRUMB CHIC NUGGET 1KG]   \n",
       "21          [#WHOLE CHICKEN WITH HEAD & FEET]   \n",
       "38           [TESCO CHOICE SMOKED FRANK 340G]   \n",
       "39          [#WHOLE CHICKEN WITH HEAD & FEET]   \n",
       "40          [#WHOLE CHICKEN WITH HEAD & FEET]   \n",
       "\n",
       "                                  consequents  antecedent support  \\\n",
       "20          [#WHOLE CHICKEN WITH HEAD & FEET]            0.006389   \n",
       "21  [FARMS BEST GOLDEN CRUMB CHIC NUGGET 1KG]            0.200120   \n",
       "38          [#WHOLE CHICKEN WITH HEAD & FEET]            0.017381   \n",
       "39           [TESCO CHOICE SMOKED FRANK 340G]            0.200120   \n",
       "40           [#INDIAN BUFFALO FQ SLICE 900GM]            0.200120   \n",
       "\n",
       "    consequent support   support  confidence      lift  leverage  conviction  \n",
       "20            0.200120  0.001338    0.209398  1.046360  0.000059    1.011735  \n",
       "21            0.006389  0.001338    0.006685  1.046360  0.000059    1.000298  \n",
       "38            0.200120  0.004340    0.249681  1.247657  0.000861    1.066053  \n",
       "39            0.017381  0.004340    0.021685  1.247657  0.000861    1.004400  \n",
       "40            0.004922  0.002557    0.012775  2.595658  0.001572    1.007955  "
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "### Example with whole chicken\n",
    "product_filtered_df = check_product_in_rules(\"#WHOLE CHICKEN WITH HEAD & FEET\", association_rules_df)\n",
    "product_filtered_df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "K5psWGNt06-n"
   },
   "source": [
    "## Visualize Result"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "tTzLUNft06c7"
   },
   "outputs": [],
   "source": [
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "vNx8SQ2h1DFM"
   },
   "outputs": [],
   "source": [
    "# Transform antecedent, consequent, and support columns into matrix\n",
    "# Heat map is a great way to communicate\n",
    "def plot_heatmap_support(product_filtered_df):\n",
    "    \"\"\"\n",
    "    This function takes a product_filtered_df DataFrame and creates a heatmap visualization of support values\n",
    "    for the association rules between antecedents and consequents.\n",
    "\n",
    "    Args:\n",
    "    product_filtered_df (pd.DataFrame): A pandas DataFrame containing 'antecedents', 'consequents', and 'support' columns.\n",
    "\n",
    "    Returns:\n",
    "    None: This function does not return a value; instead, it displays a heatmap plot showing the support values of the rules.\n",
    "    \"\"\"\n",
    "    product_filtered_df['consequents'] = product_filtered_df['consequents'].apply(lambda x: ''.join(x))\n",
    "    product_filtered_df['antecedents'] = product_filtered_df['antecedents'].apply(lambda x: ''.join(x))\n",
    "    support_table = product_filtered_df.pivot(index='consequents', columns='antecedents', values='support')\n",
    "\n",
    "    plt.figure(figsize=(16, 8))\n",
    "    sns.heatmap(support_table, annot=True, cbar=False)\n",
    "    b, t = plt.ylim()\n",
    "    b += 0.5\n",
    "    t -= 0.5\n",
    "    plt.ylim(b, t)\n",
    "    plt.yticks(rotation=0)\n",
    "    plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 970
    },
    "id": "6UGQosrlN-n8",
    "outputId": "1c85b877-94b4-4500-ac6d-e000d433dd54"
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "<ipython-input-42-a302752c0445>:14: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  product_filtered_df['consequents'] = product_filtered_df['consequents'].apply(lambda x: ''.join(x))\n",
      "<ipython-input-42-a302752c0445>:15: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  product_filtered_df['antecedents'] = product_filtered_df['antecedents'].apply(lambda x: ''.join(x))\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1600x800 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_heatmap_support(product_filtered_df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 647
    },
    "id": "Ne-uaPt5J8tq",
    "outputId": "6ad56cb2-dca2-4148-a3b7-8e0d91aa156c"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-faa4f23c-d926-4e21-9899-828d0a6fd675\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>antecedents</th>\n",
       "      <th>consequents</th>\n",
       "      <th>antecedent support</th>\n",
       "      <th>consequent support</th>\n",
       "      <th>support</th>\n",
       "      <th>confidence</th>\n",
       "      <th>lift</th>\n",
       "      <th>leverage</th>\n",
       "      <th>conviction</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>45</th>\n",
       "      <td>#WHOLE CHICKEN WITH HEAD &amp; FEET</td>\n",
       "      <td>TESCO EDV CHICKEN FRANKFURTER 340G</td>\n",
       "      <td>0.20012</td>\n",
       "      <td>0.019498</td>\n",
       "      <td>0.006431</td>\n",
       "      <td>0.032135</td>\n",
       "      <td>1.648112</td>\n",
       "      <td>0.002529</td>\n",
       "      <td>1.013056</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>49</th>\n",
       "      <td>#WHOLE CHICKEN WITH HEAD &amp; FEET</td>\n",
       "      <td>TESCO GOLDEN CRUMB NUGGET 900G</td>\n",
       "      <td>0.20012</td>\n",
       "      <td>0.020614</td>\n",
       "      <td>0.004954</td>\n",
       "      <td>0.024756</td>\n",
       "      <td>1.200901</td>\n",
       "      <td>0.000829</td>\n",
       "      <td>1.004247</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39</th>\n",
       "      <td>#WHOLE CHICKEN WITH HEAD &amp; FEET</td>\n",
       "      <td>TESCO CHOICE SMOKED FRANK 340G</td>\n",
       "      <td>0.20012</td>\n",
       "      <td>0.017381</td>\n",
       "      <td>0.004340</td>\n",
       "      <td>0.021685</td>\n",
       "      <td>1.247657</td>\n",
       "      <td>0.000861</td>\n",
       "      <td>1.004400</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>54</th>\n",
       "      <td>#WHOLE CHICKEN WITH HEAD &amp; FEET</td>\n",
       "      <td>BRAZIL DFZN BEEF MIX FQUARTER BLOCK KG(5632)</td>\n",
       "      <td>0.20012</td>\n",
       "      <td>0.007116</td>\n",
       "      <td>0.002754</td>\n",
       "      <td>0.013762</td>\n",
       "      <td>1.934003</td>\n",
       "      <td>0.001330</td>\n",
       "      <td>1.006739</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40</th>\n",
       "      <td>#WHOLE CHICKEN WITH HEAD &amp; FEET</td>\n",
       "      <td>#INDIAN BUFFALO FQ SLICE 900GM</td>\n",
       "      <td>0.20012</td>\n",
       "      <td>0.004922</td>\n",
       "      <td>0.002557</td>\n",
       "      <td>0.012775</td>\n",
       "      <td>2.595658</td>\n",
       "      <td>0.001572</td>\n",
       "      <td>1.007955</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>53</th>\n",
       "      <td>#WHOLE CHICKEN WITH HEAD &amp; FEET</td>\n",
       "      <td>IND DEFR BUFFALO BLOCK KG(5618)</td>\n",
       "      <td>0.20012</td>\n",
       "      <td>0.005287</td>\n",
       "      <td>0.002287</td>\n",
       "      <td>0.011426</td>\n",
       "      <td>2.161431</td>\n",
       "      <td>0.001229</td>\n",
       "      <td>1.006211</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>51</th>\n",
       "      <td>#WHOLE CHICKEN WITH HEAD &amp; FEET</td>\n",
       "      <td>TESCO CRINKLE CUT FRIES 1KG</td>\n",
       "      <td>0.20012</td>\n",
       "      <td>0.007491</td>\n",
       "      <td>0.001670</td>\n",
       "      <td>0.008346</td>\n",
       "      <td>1.114178</td>\n",
       "      <td>0.000171</td>\n",
       "      <td>1.000862</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46</th>\n",
       "      <td>#WHOLE CHICKEN WITH HEAD &amp; FEET</td>\n",
       "      <td>TESCO EDV MINCED MEAT 400G</td>\n",
       "      <td>0.20012</td>\n",
       "      <td>0.006086</td>\n",
       "      <td>0.001418</td>\n",
       "      <td>0.007087</td>\n",
       "      <td>1.164478</td>\n",
       "      <td>0.000200</td>\n",
       "      <td>1.001008</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43</th>\n",
       "      <td>#WHOLE CHICKEN WITH HEAD &amp; FEET</td>\n",
       "      <td>TESCO EDV FILAMENT STICKS 250G</td>\n",
       "      <td>0.20012</td>\n",
       "      <td>0.006534</td>\n",
       "      <td>0.001344</td>\n",
       "      <td>0.006715</td>\n",
       "      <td>1.027752</td>\n",
       "      <td>0.000036</td>\n",
       "      <td>1.000183</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>#WHOLE CHICKEN WITH HEAD &amp; FEET</td>\n",
       "      <td>FARMS BEST GOLDEN CRUMB CHIC NUGGET 1KG</td>\n",
       "      <td>0.20012</td>\n",
       "      <td>0.006389</td>\n",
       "      <td>0.001338</td>\n",
       "      <td>0.006685</td>\n",
       "      <td>1.046360</td>\n",
       "      <td>0.000059</td>\n",
       "      <td>1.000298</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>57</th>\n",
       "      <td>#WHOLE CHICKEN WITH HEAD &amp; FEET</td>\n",
       "      <td>FB GOLDEN TEMPURA CHICKEN NUGGET 800G</td>\n",
       "      <td>0.20012</td>\n",
       "      <td>0.005893</td>\n",
       "      <td>0.001257</td>\n",
       "      <td>0.006282</td>\n",
       "      <td>1.066027</td>\n",
       "      <td>0.000078</td>\n",
       "      <td>1.000392</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-faa4f23c-d926-4e21-9899-828d0a6fd675')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-faa4f23c-d926-4e21-9899-828d0a6fd675 button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-faa4f23c-d926-4e21-9899-828d0a6fd675');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "                        antecedents  \\\n",
       "45  #WHOLE CHICKEN WITH HEAD & FEET   \n",
       "49  #WHOLE CHICKEN WITH HEAD & FEET   \n",
       "39  #WHOLE CHICKEN WITH HEAD & FEET   \n",
       "54  #WHOLE CHICKEN WITH HEAD & FEET   \n",
       "40  #WHOLE CHICKEN WITH HEAD & FEET   \n",
       "53  #WHOLE CHICKEN WITH HEAD & FEET   \n",
       "51  #WHOLE CHICKEN WITH HEAD & FEET   \n",
       "46  #WHOLE CHICKEN WITH HEAD & FEET   \n",
       "43  #WHOLE CHICKEN WITH HEAD & FEET   \n",
       "21  #WHOLE CHICKEN WITH HEAD & FEET   \n",
       "57  #WHOLE CHICKEN WITH HEAD & FEET   \n",
       "\n",
       "                                     consequents  antecedent support  \\\n",
       "45            TESCO EDV CHICKEN FRANKFURTER 340G             0.20012   \n",
       "49                TESCO GOLDEN CRUMB NUGGET 900G             0.20012   \n",
       "39                TESCO CHOICE SMOKED FRANK 340G             0.20012   \n",
       "54  BRAZIL DFZN BEEF MIX FQUARTER BLOCK KG(5632)             0.20012   \n",
       "40                #INDIAN BUFFALO FQ SLICE 900GM             0.20012   \n",
       "53               IND DEFR BUFFALO BLOCK KG(5618)             0.20012   \n",
       "51                   TESCO CRINKLE CUT FRIES 1KG             0.20012   \n",
       "46                    TESCO EDV MINCED MEAT 400G             0.20012   \n",
       "43                TESCO EDV FILAMENT STICKS 250G             0.20012   \n",
       "21       FARMS BEST GOLDEN CRUMB CHIC NUGGET 1KG             0.20012   \n",
       "57         FB GOLDEN TEMPURA CHICKEN NUGGET 800G             0.20012   \n",
       "\n",
       "    consequent support   support  confidence      lift  leverage  conviction  \n",
       "45            0.019498  0.006431    0.032135  1.648112  0.002529    1.013056  \n",
       "49            0.020614  0.004954    0.024756  1.200901  0.000829    1.004247  \n",
       "39            0.017381  0.004340    0.021685  1.247657  0.000861    1.004400  \n",
       "54            0.007116  0.002754    0.013762  1.934003  0.001330    1.006739  \n",
       "40            0.004922  0.002557    0.012775  2.595658  0.001572    1.007955  \n",
       "53            0.005287  0.002287    0.011426  2.161431  0.001229    1.006211  \n",
       "51            0.007491  0.001670    0.008346  1.114178  0.000171    1.000862  \n",
       "46            0.006086  0.001418    0.007087  1.164478  0.000200    1.001008  \n",
       "43            0.006534  0.001344    0.006715  1.027752  0.000036    1.000183  \n",
       "21            0.006389  0.001338    0.006685  1.046360  0.000059    1.000298  \n",
       "57            0.005893  0.001257    0.006282  1.066027  0.000078    1.000392  "
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "### Example with target product is whole chicken\n",
    "product_filtered_df[(product_filtered_df['antecedents'] == '#WHOLE CHICKEN WITH HEAD & FEET')].sort_values('support', ascending=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "id": "LtO0xnkGrA2w"
   },
   "outputs": [],
   "source": [
    "def visualize_item_with_high_support(target, df):\n",
    "    \"\"\"\n",
    "    This function takes a target item and an association rules DataFrame, then visualizes the support values of the\n",
    "    association rules where the target item is an antecedent. The resulting bar plot is sorted by support values in descending order.\n",
    "\n",
    "    Args:\n",
    "    target (str): The target item to be checked for its presence in the association rules dataframe as an antecedent.\n",
    "    df (pd.DataFrame): A pandas DataFrame containing association rules with 'antecedents', 'consequents', and 'support' columns.\n",
    "\n",
    "    Returns:\n",
    "    None: This function does not return a value; instead, it displays a bar plot showing the support values of the rules\n",
    "          where the target item is an antecedent.\n",
    "    \"\"\"\n",
    "    target_item_df = df[(df['antecedents'] == target)]\n",
    "    target_support_df = target_item_df[['consequents', 'support']]\n",
    "    target_support_df = target_support_df.sort_values('support', ascending=False)\n",
    "    sns.barplot(x = 'consequents', y = 'support', data = target_support_df)\n",
    "    sns.set(rc={'figure.figsize':(12,10)})\n",
    "    sns.set(font_scale = 1)\n",
    "    plt.xticks(rotation=90)\n",
    "    plt.tight_layout()\n",
    "    plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 480
    },
    "id": "LLeOwocBtCim",
    "outputId": "de2d8a99-e6f6-48d6-aaa0-92ad90fcf6b4"
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "visualize_item_with_high_support('#WHOLE CHICKEN WITH HEAD & FEET', product_filtered_df)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "id": "qHW4j3ImycSv"
   },
   "source": [
    "Exmaple with Frozen Drumstick 2KG"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 354
    },
    "id": "AeqDMXjUyClf",
    "outputId": "eb01005a-0043-4f62-85b1-ee6bb6bf7c27"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-568fec5a-3cd8-4325-bfb7-ce7b8b8ba826\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>antecedents</th>\n",
       "      <th>consequents</th>\n",
       "      <th>antecedent support</th>\n",
       "      <th>consequent support</th>\n",
       "      <th>support</th>\n",
       "      <th>confidence</th>\n",
       "      <th>lift</th>\n",
       "      <th>leverage</th>\n",
       "      <th>conviction</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>[AYAMAS CHICKEN FRANKFURTER 340G]</td>\n",
       "      <td>[AYAMAS CRISPY NUGGET 850G]</td>\n",
       "      <td>0.065550</td>\n",
       "      <td>0.012848</td>\n",
       "      <td>0.003016</td>\n",
       "      <td>0.046011</td>\n",
       "      <td>3.581256</td>\n",
       "      <td>0.002174</td>\n",
       "      <td>1.034762</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>[AYAMAS CRISPY NUGGET 850G]</td>\n",
       "      <td>[AYAMAS CHICKEN FRANKFURTER 340G]</td>\n",
       "      <td>0.012848</td>\n",
       "      <td>0.065550</td>\n",
       "      <td>0.003016</td>\n",
       "      <td>0.234750</td>\n",
       "      <td>3.581256</td>\n",
       "      <td>0.002174</td>\n",
       "      <td>1.221105</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>[FARMS BEST GOLDEN CRUMB CHIC NUGGET 1KG]</td>\n",
       "      <td>[AYAMAS CHICKEN FRANKFURTER 340G]</td>\n",
       "      <td>0.006389</td>\n",
       "      <td>0.065550</td>\n",
       "      <td>0.001152</td>\n",
       "      <td>0.180385</td>\n",
       "      <td>2.751882</td>\n",
       "      <td>0.000734</td>\n",
       "      <td>1.140109</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>[AYAMAS CHICKEN FRANKFURTER 340G]</td>\n",
       "      <td>[FARMS BEST GOLDEN CRUMB CHIC NUGGET 1KG]</td>\n",
       "      <td>0.065550</td>\n",
       "      <td>0.006389</td>\n",
       "      <td>0.001152</td>\n",
       "      <td>0.017581</td>\n",
       "      <td>2.751882</td>\n",
       "      <td>0.000734</td>\n",
       "      <td>1.011392</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>[AYAMAS CHICKEN FRANKFURTER 340G]</td>\n",
       "      <td>[AYAMAS CRISPY TEMPURA NUGGET 850G]</td>\n",
       "      <td>0.065550</td>\n",
       "      <td>0.018203</td>\n",
       "      <td>0.004052</td>\n",
       "      <td>0.061808</td>\n",
       "      <td>3.395580</td>\n",
       "      <td>0.002858</td>\n",
       "      <td>1.046479</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-568fec5a-3cd8-4325-bfb7-ce7b8b8ba826')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-568fec5a-3cd8-4325-bfb7-ce7b8b8ba826 button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-568fec5a-3cd8-4325-bfb7-ce7b8b8ba826');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "                                 antecedents  \\\n",
       "0          [AYAMAS CHICKEN FRANKFURTER 340G]   \n",
       "1                [AYAMAS CRISPY NUGGET 850G]   \n",
       "2  [FARMS BEST GOLDEN CRUMB CHIC NUGGET 1KG]   \n",
       "3          [AYAMAS CHICKEN FRANKFURTER 340G]   \n",
       "4          [AYAMAS CHICKEN FRANKFURTER 340G]   \n",
       "\n",
       "                                 consequents  antecedent support  \\\n",
       "0                [AYAMAS CRISPY NUGGET 850G]            0.065550   \n",
       "1          [AYAMAS CHICKEN FRANKFURTER 340G]            0.012848   \n",
       "2          [AYAMAS CHICKEN FRANKFURTER 340G]            0.006389   \n",
       "3  [FARMS BEST GOLDEN CRUMB CHIC NUGGET 1KG]            0.065550   \n",
       "4        [AYAMAS CRISPY TEMPURA NUGGET 850G]            0.065550   \n",
       "\n",
       "   consequent support   support  confidence      lift  leverage  conviction  \n",
       "0            0.012848  0.003016    0.046011  3.581256  0.002174    1.034762  \n",
       "1            0.065550  0.003016    0.234750  3.581256  0.002174    1.221105  \n",
       "2            0.065550  0.001152    0.180385  2.751882  0.000734    1.140109  \n",
       "3            0.006389  0.001152    0.017581  2.751882  0.000734    1.011392  \n",
       "4            0.018203  0.004052    0.061808  3.395580  0.002858    1.046479  "
      ]
     },
     "execution_count": 77,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "### Example with whole chicken\n",
    "product_filtered_df2 = check_product_in_rules(\"AYAMAS CHICKEN FRANKFURTER 340G\", association_rules_df)\n",
    "product_filtered_df2.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/"
    },
    "id": "9LvArlKWaYG5",
    "outputId": "ac790bf8-9f13-4d8f-e506-db1a5a4ecfaf"
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "<ipython-input-78-50c743d441b0>:1: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  product_filtered_df2['consequents'] = product_filtered_df2['consequents'].apply(lambda x: ''.join(x))\n",
      "<ipython-input-78-50c743d441b0>:2: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  product_filtered_df2['antecedents'] = product_filtered_df2['antecedents'].apply(lambda x: ''.join(x))\n"
     ]
    }
   ],
   "source": [
    "product_filtered_df2['consequents'] = product_filtered_df2['consequents'].apply(lambda x: ''.join(x))\n",
    "product_filtered_df2['antecedents'] = product_filtered_df2['antecedents'].apply(lambda x: ''.join(x))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 500
    },
    "id": "ZCM0IvohyDG0",
    "outputId": "356a20ff-b06c-400e-b445-593360020a5f"
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "  <div id=\"df-6cd54373-3799-47bb-838c-f8961b3cc181\">\n",
       "    <div class=\"colab-df-container\">\n",
       "      <div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>antecedents</th>\n",
       "      <th>consequents</th>\n",
       "      <th>antecedent support</th>\n",
       "      <th>consequent support</th>\n",
       "      <th>support</th>\n",
       "      <th>confidence</th>\n",
       "      <th>lift</th>\n",
       "      <th>leverage</th>\n",
       "      <th>conviction</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>AYAMAS CHICKEN FRANKFURTER 340G</td>\n",
       "      <td>AYAMAS CRISPY TEMPURA NUGGET 850G</td>\n",
       "      <td>0.06555</td>\n",
       "      <td>0.018203</td>\n",
       "      <td>0.004052</td>\n",
       "      <td>0.061808</td>\n",
       "      <td>3.395580</td>\n",
       "      <td>0.002858</td>\n",
       "      <td>1.046479</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>AYAMAS CHICKEN FRANKFURTER 340G</td>\n",
       "      <td>AYAMAS CRISPY NUGGET 850G</td>\n",
       "      <td>0.06555</td>\n",
       "      <td>0.012848</td>\n",
       "      <td>0.003016</td>\n",
       "      <td>0.046011</td>\n",
       "      <td>3.581256</td>\n",
       "      <td>0.002174</td>\n",
       "      <td>1.034762</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>AYAMAS CHICKEN FRANKFURTER 340G</td>\n",
       "      <td>TESCO GOLDEN CRUMB NUGGET 900G</td>\n",
       "      <td>0.06555</td>\n",
       "      <td>0.020614</td>\n",
       "      <td>0.003008</td>\n",
       "      <td>0.045888</td>\n",
       "      <td>2.226021</td>\n",
       "      <td>0.001657</td>\n",
       "      <td>1.026489</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>AYAMAS CHICKEN FRANKFURTER 340G</td>\n",
       "      <td>TESCO ORIGINAL TEMPURA NUGGET 850G</td>\n",
       "      <td>0.06555</td>\n",
       "      <td>0.018646</td>\n",
       "      <td>0.002708</td>\n",
       "      <td>0.041308</td>\n",
       "      <td>2.215403</td>\n",
       "      <td>0.001486</td>\n",
       "      <td>1.023639</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>AYAMAS CHICKEN FRANKFURTER 340G</td>\n",
       "      <td>LP FILAMENT STICKS 250G</td>\n",
       "      <td>0.06555</td>\n",
       "      <td>0.014103</td>\n",
       "      <td>0.002404</td>\n",
       "      <td>0.036667</td>\n",
       "      <td>2.599994</td>\n",
       "      <td>0.001479</td>\n",
       "      <td>1.023423</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>AYAMAS CHICKEN FRANKFURTER 340G</td>\n",
       "      <td>TESCO HOT + SPICY TEMPURA NUGGET 850G</td>\n",
       "      <td>0.06555</td>\n",
       "      <td>0.015930</td>\n",
       "      <td>0.002057</td>\n",
       "      <td>0.031381</td>\n",
       "      <td>1.969899</td>\n",
       "      <td>0.001013</td>\n",
       "      <td>1.015951</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>AYAMAS CHICKEN FRANKFURTER 340G</td>\n",
       "      <td>FARMS BEST GOLDEN CRUMB CHIC NUGGET 1KG</td>\n",
       "      <td>0.06555</td>\n",
       "      <td>0.006389</td>\n",
       "      <td>0.001152</td>\n",
       "      <td>0.017581</td>\n",
       "      <td>2.751882</td>\n",
       "      <td>0.000734</td>\n",
       "      <td>1.011392</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>AYAMAS CHICKEN FRANKFURTER 340G</td>\n",
       "      <td>TESCO CRINKLE CUT FRIES 1KG</td>\n",
       "      <td>0.06555</td>\n",
       "      <td>0.007491</td>\n",
       "      <td>0.001132</td>\n",
       "      <td>0.017273</td>\n",
       "      <td>2.305987</td>\n",
       "      <td>0.000641</td>\n",
       "      <td>1.009955</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>\n",
       "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6cd54373-3799-47bb-838c-f8961b3cc181')\"\n",
       "              title=\"Convert this dataframe to an interactive table.\"\n",
       "              style=\"display:none;\">\n",
       "        \n",
       "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
       "       width=\"24px\">\n",
       "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
       "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
       "  </svg>\n",
       "      </button>\n",
       "      \n",
       "  <style>\n",
       "    .colab-df-container {\n",
       "      display:flex;\n",
       "      flex-wrap:wrap;\n",
       "      gap: 12px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert {\n",
       "      background-color: #E8F0FE;\n",
       "      border: none;\n",
       "      border-radius: 50%;\n",
       "      cursor: pointer;\n",
       "      display: none;\n",
       "      fill: #1967D2;\n",
       "      height: 32px;\n",
       "      padding: 0 0 0 0;\n",
       "      width: 32px;\n",
       "    }\n",
       "\n",
       "    .colab-df-convert:hover {\n",
       "      background-color: #E2EBFA;\n",
       "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
       "      fill: #174EA6;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert {\n",
       "      background-color: #3B4455;\n",
       "      fill: #D2E3FC;\n",
       "    }\n",
       "\n",
       "    [theme=dark] .colab-df-convert:hover {\n",
       "      background-color: #434B5C;\n",
       "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
       "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
       "      fill: #FFFFFF;\n",
       "    }\n",
       "  </style>\n",
       "\n",
       "      <script>\n",
       "        const buttonEl =\n",
       "          document.querySelector('#df-6cd54373-3799-47bb-838c-f8961b3cc181 button.colab-df-convert');\n",
       "        buttonEl.style.display =\n",
       "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
       "\n",
       "        async function convertToInteractive(key) {\n",
       "          const element = document.querySelector('#df-6cd54373-3799-47bb-838c-f8961b3cc181');\n",
       "          const dataTable =\n",
       "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
       "                                                     [key], {});\n",
       "          if (!dataTable) return;\n",
       "\n",
       "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
       "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
       "            + ' to learn more about interactive tables.';\n",
       "          element.innerHTML = '';\n",
       "          dataTable['output_type'] = 'display_data';\n",
       "          await google.colab.output.renderOutput(dataTable, element);\n",
       "          const docLink = document.createElement('div');\n",
       "          docLink.innerHTML = docLinkHtml;\n",
       "          element.appendChild(docLink);\n",
       "        }\n",
       "      </script>\n",
       "    </div>\n",
       "  </div>\n",
       "  "
      ],
      "text/plain": [
       "                        antecedents                              consequents  \\\n",
       "4   AYAMAS CHICKEN FRANKFURTER 340G        AYAMAS CRISPY TEMPURA NUGGET 850G   \n",
       "0   AYAMAS CHICKEN FRANKFURTER 340G                AYAMAS CRISPY NUGGET 850G   \n",
       "13  AYAMAS CHICKEN FRANKFURTER 340G           TESCO GOLDEN CRUMB NUGGET 900G   \n",
       "8   AYAMAS CHICKEN FRANKFURTER 340G       TESCO ORIGINAL TEMPURA NUGGET 850G   \n",
       "7   AYAMAS CHICKEN FRANKFURTER 340G                  LP FILAMENT STICKS 250G   \n",
       "11  AYAMAS CHICKEN FRANKFURTER 340G    TESCO HOT + SPICY TEMPURA NUGGET 850G   \n",
       "3   AYAMAS CHICKEN FRANKFURTER 340G  FARMS BEST GOLDEN CRUMB CHIC NUGGET 1KG   \n",
       "14  AYAMAS CHICKEN FRANKFURTER 340G              TESCO CRINKLE CUT FRIES 1KG   \n",
       "\n",
       "    antecedent support  consequent support   support  confidence      lift  \\\n",
       "4              0.06555            0.018203  0.004052    0.061808  3.395580   \n",
       "0              0.06555            0.012848  0.003016    0.046011  3.581256   \n",
       "13             0.06555            0.020614  0.003008    0.045888  2.226021   \n",
       "8              0.06555            0.018646  0.002708    0.041308  2.215403   \n",
       "7              0.06555            0.014103  0.002404    0.036667  2.599994   \n",
       "11             0.06555            0.015930  0.002057    0.031381  1.969899   \n",
       "3              0.06555            0.006389  0.001152    0.017581  2.751882   \n",
       "14             0.06555            0.007491  0.001132    0.017273  2.305987   \n",
       "\n",
       "    leverage  conviction  \n",
       "4   0.002858    1.046479  \n",
       "0   0.002174    1.034762  \n",
       "13  0.001657    1.026489  \n",
       "8   0.001486    1.023639  \n",
       "7   0.001479    1.023423  \n",
       "11  0.001013    1.015951  \n",
       "3   0.000734    1.011392  \n",
       "14  0.000641    1.009955  "
      ]
     },
     "execution_count": 74,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "product_filtered_df2[(product_filtered_df2['antecedents'] == \"AYAMAS CHICKEN FRANKFURTER 340G\")].sort_values('support', ascending=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 1000
    },
    "id": "Yk6M1q7_xdbs",
    "outputId": "191dec94-4dfc-4fcf-f4f6-c30f4ad7b155"
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "<ipython-input-42-a302752c0445>:14: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  product_filtered_df['consequents'] = product_filtered_df['consequents'].apply(lambda x: ''.join(x))\n",
      "<ipython-input-42-a302752c0445>:15: SettingWithCopyWarning: \n",
      "A value is trying to be set on a copy of a slice from a DataFrame.\n",
      "Try using .loc[row_indexer,col_indexer] = value instead\n",
      "\n",
      "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
      "  product_filtered_df['antecedents'] = product_filtered_df['antecedents'].apply(lambda x: ''.join(x))\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1600x800 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_heatmap_support(product_filtered_df2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "colab": {
     "base_uri": "https://localhost:8080/",
     "height": 978
    },
    "id": "wTdM7lRqxr3o",
    "outputId": "46d8eea0-be51-440d-c21a-7d2034a1c038"
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1200x1000 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "visualize_item_with_high_support('AYAMAS CHICKEN FRANKFURTER 340G', product_filtered_df2)"
   ]
  }
 ],
 "metadata": {
  "colab": {
   "machine_shape": "hm",
   "provenance": []
  },
  "gpuClass": "standard",
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
